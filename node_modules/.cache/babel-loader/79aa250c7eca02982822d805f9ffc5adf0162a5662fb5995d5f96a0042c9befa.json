{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, getDocs, setDoc, collection, CollectionReference, onSnapshot\n// writeBatch,\n} from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\n  authDomain: \"gotask-973a8.firebaseapp.com\",\n  projectId: \"gotask-973a8\",\n  storageBucket: \"gotask-973a8.appspot.com\",\n  messagingSenderId: \"589835338400\",\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\n  measurementId: \"G-CS2ZWLEKDP\"\n};\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nexport const auth = getAuth();\nexport const db = getFirestore();\nonAuthStateChanged(auth, user => {\n  if (user == null) {\n    return;\n  }\n  const {\n    uid\n  } = user;\n  const projects = collection(db, `users${uid}/projects`);\n});\nfunction createStream(ref) {\n  return onSnapshot(ref, snapshot => {\n    const projects = snapshot.docs.map(d => d.data());\n    const changes = snapshot.docChanges();\n    changes[0];\n  });\n}\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\n\n// console.log(auth);\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\n// console.log(auth);\n\n//////////////////////////////////////////////////\n\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  // console.log(userSnapshot);\n  // console.log(userSnapshot.exists());\n\n  // user data does not exists\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    const projects = {};\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        projects,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    return userDocRef;\n  }\n};\n\n///////////////////////////////////////////////\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\n// const currentUserId = users.auth().currentUser.uid;\n// console.log(currentUserId);","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","getDocs","setDoc","collection","CollectionReference","onSnapshot","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","auth","db","user","uid","projects","createStream","ref","snapshot","docs","map","d","data","changes","docChanges","googleProvider","setCustomParameters","prompt","signInWithGooglePopup","createUserDocumentFromAuth","userAuth","additionalInformation","arguments","length","undefined","userDocRef","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["D:/Coding/React/taskmybusiness/src/utils/firebase/firebase-utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  setDoc,\r\n  collection,\r\n  CollectionReference,\r\n  onSnapshot,\r\n  // writeBatch,\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\r\n  authDomain: \"gotask-973a8.firebaseapp.com\",\r\n  projectId: \"gotask-973a8\",\r\n  storageBucket: \"gotask-973a8.appspot.com\",\r\n  messagingSenderId: \"589835338400\",\r\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\r\n  measurementId: \"G-CS2ZWLEKDP\",\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();\r\nexport const db = getFirestore();\r\n\r\nonAuthStateChanged(auth, (user) => {\r\n  if (user == null) {\r\n    return;\r\n  }\r\n  const { uid } = user;\r\n  const projects = collection(db, `users${uid}/projects`);\r\n});\r\n\r\nfunction createStream(ref: CollectionReference) {\r\n  return onSnapshot(ref, (snapshot) => {\r\n    const projects = snapshot.docs.map((d) => d.data());\r\n    const changes = snapshot.docChanges();\r\n    changes[0];\r\n  });\r\n}\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\n// console.log(auth);\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\n// console.log(auth);\r\n\r\n//////////////////////////////////////////////////\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  if (!userAuth) return;\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n  // console.log(userSnapshot);\r\n  // console.log(userSnapshot.exists());\r\n\r\n  // user data does not exists\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n\r\n    const createdAt = new Date();\r\n    const projects = {};\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        projects,\r\n        ...additionalInformation,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return userDocRef;\r\n  }\r\n};\r\n\r\n///////////////////////////////////////////////\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\n// const currentUserId = users.auth().currentUser.uid;\r\n// console.log(currentUserId);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}