{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, updateProfile, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\n  authDomain: \"gotask-973a8.firebaseapp.com\",\n  projectId: \"gotask-973a8\",\n  storageBucket: \"gotask-973a8.appspot.com\",\n  messagingSenderId: \"589835338400\",\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\n  measurementId: \"G-CS2ZWLEKDP\"\n};\n\n// const user = getAuth().currentUser;\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(firebaseApp);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\n\n// const db = firebase.firestore();\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot._document.data.value.mapValue.fields.projects.mapValue.fields);\n\n  // console.log(userSnapshot);\n  // console.log(userSnapshot.exists());\n\n  // user data does not exists\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    const projects = {};\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        projects,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    return userDocRef;\n  }\n\n  //if user data exists\n\n  //return\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\n\n// const currentUserId = users.auth().currentUser.uid;\n// console.log(currentUserId);","map":{"version":3,"names":["initializeApp","getAnalytics","getAuth","updateProfile","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","analytics","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","additionalInformation","arguments","length","undefined","userDocRef","uid","userSnapshot","console","log","_document","data","value","mapValue","fields","projects","exists","displayName","email","createdAt","Date","error","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["D:/Coding/React/taskmybusiness/src/utils/firebase/firebase-utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\nimport {\r\n  getAuth,\r\n  updateProfile,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\r\n  authDomain: \"gotask-973a8.firebaseapp.com\",\r\n  projectId: \"gotask-973a8\",\r\n  storageBucket: \"gotask-973a8.appspot.com\",\r\n  messagingSenderId: \"589835338400\",\r\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\r\n  measurementId: \"G-CS2ZWLEKDP\",\r\n};\r\n\r\n// const user = getAuth().currentUser;\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(firebaseApp);\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\n// const db = firebase.firestore();\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\n\r\nexport const db = getFirestore();\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  if (!userAuth) return;\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n\r\n  console.log(\r\n    userSnapshot._document.data.value.mapValue.fields.projects.mapValue.fields\r\n  );\r\n\r\n  // console.log(userSnapshot);\r\n  // console.log(userSnapshot.exists());\r\n\r\n  // user data does not exists\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n\r\n    const createdAt = new Date();\r\n    const projects = {};\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        projects,\r\n        ...additionalInformation,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return userDocRef;\r\n  }\r\n\r\n  //if user data exists\r\n\r\n  //return\r\n};\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\n\r\n// const currentUserId = users.auth().currentUser.uid;\r\n// console.log(currentUserId);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}