{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projectList\\\\projectList.jsx\",\n  _s = $RefreshSig$();\nimport \"./projectList.scss\";\nimport { Fragment } from \"react\";\nimport { useDeleteTodoMutation } from \"../../utils/firebase/firebase-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectList(props) {\n  _s();\n  var _props$projectDetails;\n  const [deleteTodo] = useDeleteTodoMutation();\n  const [editMode, setEditMode] = useState(false);\n  const [editedProjectName, setEditedProjectName] = useState(\"\");\n  const editProject = data => {\n    console.log(e);\n    setEditMode(true);\n    setEditedProjectName(data.projectName);\n  };\n  const handleProjectNameChange = e => {\n    setEditedProjectName(e.target.value);\n  };\n  const saveProjectName = data => {\n    // Perform the logic to save the edited project name\n    console.log(\"Saving project name:\", editedProjectName);\n    setEditMode(false);\n    // Update the project name in the backend/database\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: (_props$projectDetails = props.projectDetails) === null || _props$projectDetails === void 0 ? void 0 : _props$projectDetails.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        type: \"submit\",\n        onClick: () => deleteTodo(data.projectId),\n        className: \"checkBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"check\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deteButton\",\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedProjectName,\n        onChange: handleProjectNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: data.projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: data.startingDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: data.deadLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"In progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonField\",\n        value: data.id,\n        onClick: () => editProject(data),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonField\",\n        onClick: () => saveProjectName(data),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonField\",\n        children: \"Mark as complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, data.projectId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"jJJ8j6nzFfIgpmFk9Logg/9mDCk=\", false, function () {\n  return [useDeleteTodoMutation];\n});\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["Fragment","useDeleteTodoMutation","jsxDEV","_jsxDEV","ProjectList","props","_s","_props$projectDetails","deleteTodo","editMode","setEditMode","useState","editedProjectName","setEditedProjectName","editProject","data","console","log","e","projectName","handleProjectNameChange","target","value","saveProjectName","children","projectDetails","map","className","type","onClick","projectId","fileName","_jsxFileName","lineNumber","columnNumber","onChange","startingDate","deadLine","id","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projectList/projectList.jsx"],"sourcesContent":["import \"./projectList.scss\";\r\nimport { Fragment } from \"react\";\r\nimport { useDeleteTodoMutation } from \"../../utils/firebase/firebase-utils\";\r\n\r\nfunction ProjectList(props) {\r\n  const [deleteTodo] = useDeleteTodoMutation();\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editedProjectName, setEditedProjectName] = useState(\"\");\r\n\r\n  const editProject = (data) => {\r\n    console.log(e);\r\n    setEditMode(true);\r\n    setEditedProjectName(data.projectName);\r\n  };\r\n\r\n  const handleProjectNameChange = (e) => {\r\n    setEditedProjectName(e.target.value);\r\n  };\r\n\r\n  const saveProjectName = (data) => {\r\n    // Perform the logic to save the edited project name\r\n    console.log(\"Saving project name:\", editedProjectName);\r\n    setEditMode(false);\r\n    // Update the project name in the backend/database\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {props.projectDetails?.map((data) => (\r\n        <div className=\"project-field\" key={data.projectId}>\r\n          <div\r\n            type=\"submit\"\r\n            onClick={() => deleteTodo(data.projectId)}\r\n            className=\"checkBlock\"\r\n          >\r\n            <input className=\"check\" type=\"checkbox\" />\r\n            <button className=\"deteButton\">delete</button>\r\n          </div>\r\n          {editMode ? (\r\n            <input\r\n              type=\"text\"\r\n              value={editedProjectName}\r\n              onChange={handleProjectNameChange}\r\n            />\r\n          ) : (\r\n            <h5>{data.projectName}</h5>\r\n          )}\r\n          <h5>{data.startingDate}</h5>\r\n          <h5>{data.deadLine}</h5>\r\n          <h5>In progress</h5>\r\n          <button\r\n            className=\"buttonField\"\r\n            value={data.id}\r\n            onClick={() => editProject(data)}\r\n          >\r\n            Edit\r\n          </button>\r\n          {editMode && (\r\n            <button\r\n              className=\"buttonField\"\r\n              onClick={() => saveProjectName(data)}\r\n            >\r\n              Save\r\n            </button>\r\n          )}\r\n          <button className=\"buttonField\">Mark as complete</button>\r\n        </div>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}