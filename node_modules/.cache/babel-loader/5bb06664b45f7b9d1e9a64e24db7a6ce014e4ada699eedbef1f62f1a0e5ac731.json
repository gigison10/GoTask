{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projects-page\\\\project-page.jsx\",\n  _s = $RefreshSig$();\nimport \"./project-page.scss\";\nimport { db } from \"../../utils/firebase/firebase-utils\";\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\nimport { useState, useContext, useEffect } from \"react\";\nimport ProjectAdd from \"../projectAdd-field/project-add\";\nimport ProjectField from \"../projectField/projectField\";\nimport { UserContext } from \"../../contexts/context\";\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from \"../../utils/firebase/firebase-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectPage() {\n  _s();\n  const [projectDetails, setProjectDetails] = useState([]);\n  const {\n    currentUserId,\n    setCurrentUserId\n  } = useContext(UserContext);\n  const {\n    data: projects,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n    refetch\n  } = useGetTodosQuery(currentUserId, {\n    skip: !currentUserId // Enable the query when userId is truthy\n  });\n\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n\n  // Define conditional content\n  if (isLoading) {\n    // console.log(\"loading\", projects);\n  }\n  if (isSuccess) {\n    // console.log(\"succes\", projects);\n  } else if (isError) {\n    console.log(\"error\", error);\n  }\n\n  /////////////////////////////////////////////\n\n  useEffect(() => {\n    if (currentUserId && projects && isSuccess) {\n      const arr = projects.documents.map(project => {\n        var _fields$deadLine, _fields$projectId, _fields$projectName, _fields$startingDate;\n        const fields = project.fields;\n        return {\n          deadLine: ((_fields$deadLine = fields.deadLine) === null || _fields$deadLine === void 0 ? void 0 : _fields$deadLine.stringValue) || \"\",\n          projectId: ((_fields$projectId = fields.projectId) === null || _fields$projectId === void 0 ? void 0 : _fields$projectId.stringValue) || \"\",\n          projectName: ((_fields$projectName = fields.projectName) === null || _fields$projectName === void 0 ? void 0 : _fields$projectName.stringValue) || \"\",\n          startingDate: ((_fields$startingDate = fields.startingDate) === null || _fields$startingDate === void 0 ? void 0 : _fields$startingDate.stringValue) || \"\"\n        };\n      });\n      setProjectDetails(arr);\n    }\n  }, [currentUserId, projects]);\n  //////////////////////////////////////////////////\n  useEffect(() => {\n    if (!currentUserId) {\n      setProjectDetails([]);\n    }\n  }, [currentUserId]);\n  ///////////////////////////////////////////////////////\n\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\n    let projectData = {\n      projectName: inputProjectDetails.projectName,\n      startingDate: inputProjectDetails.startingDate,\n      deadLine: inputProjectDetails.deadLine\n    };\n\n    // setRerender(rerender + 1);\n\n    addTodo(projectData);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectAdd, {\n      onSaveProjectDetails: onSaveProjectDetailsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectField, {\n      projectDetails: projectDetails,\n      deleteProject: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectPage, \"zUQlR15OoA+aoxzl6G+N+acybJE=\", false, function () {\n  return [useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation];\n});\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["db","collection","addDoc","deleteDoc","doc","setDoc","useState","useContext","useEffect","ProjectAdd","ProjectField","UserContext","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","jsxDEV","_jsxDEV","ProjectPage","_s","projectDetails","setProjectDetails","currentUserId","setCurrentUserId","data","projects","isLoading","isSuccess","isError","error","refetch","skip","addTodo","updateTodo","deleteTodo","console","log","arr","documents","map","project","_fields$deadLine","_fields$projectId","_fields$projectName","_fields$startingDate","fields","deadLine","stringValue","projectId","projectName","startingDate","onSaveProjectDetailsHandler","inputProjectDetails","projectData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveProjectDetails","deleteProject","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projects-page/project-page.jsx"],"sourcesContent":["import \"./project-page.scss\";\r\nimport { db } from \"../../utils/firebase/firebase-utils\";\r\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\r\n\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport ProjectAdd from \"../projectAdd-field/project-add\";\r\nimport ProjectField from \"../projectField/projectField\";\r\nimport { UserContext } from \"../../contexts/context\";\r\n\r\nimport {\r\n  useGetTodosQuery,\r\n  useAddTodoMutation,\r\n  useUpdateTodoMutation,\r\n  useDeleteTodoMutation,\r\n} from \"../../utils/firebase/firebase-utils\";\r\n\r\nfunction ProjectPage() {\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n  const { currentUserId, setCurrentUserId } = useContext(UserContext);\r\n\r\n  const {\r\n    data: projects,\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n    error,\r\n    refetch,\r\n  } = useGetTodosQuery(currentUserId, {\r\n    skip: !currentUserId, // Enable the query when userId is truthy\r\n  });\r\n\r\n  const [addTodo] = useAddTodoMutation();\r\n  const [updateTodo] = useUpdateTodoMutation();\r\n  const [deleteTodo] = useDeleteTodoMutation();\r\n\r\n  // Define conditional content\r\n  if (isLoading) {\r\n    // console.log(\"loading\", projects);\r\n  }\r\n  if (isSuccess) {\r\n    // console.log(\"succes\", projects);\r\n  } else if (isError) {\r\n    console.log(\"error\", error);\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  useEffect(() => {\r\n    if (currentUserId && projects && isSuccess) {\r\n      const arr = projects.documents.map((project) => {\r\n        const fields = project.fields;\r\n        return {\r\n          deadLine: fields.deadLine?.stringValue || \"\",\r\n          projectId: fields.projectId?.stringValue || \"\",\r\n          projectName: fields.projectName?.stringValue || \"\",\r\n          startingDate: fields.startingDate?.stringValue || \"\",\r\n        };\r\n      });\r\n      setProjectDetails(arr);\r\n    }\r\n  }, [currentUserId, projects]);\r\n  //////////////////////////////////////////////////\r\n  useEffect(() => {\r\n    if (!currentUserId) {\r\n      setProjectDetails([]);\r\n    }\r\n  }, [currentUserId]);\r\n  ///////////////////////////////////////////////////////\r\n\r\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\r\n    let projectData = {\r\n      projectName: inputProjectDetails.projectName,\r\n      startingDate: inputProjectDetails.startingDate,\r\n      deadLine: inputProjectDetails.deadLine,\r\n    };\r\n\r\n    // setRerender(rerender + 1);\r\n\r\n    addTodo(projectData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-container\">\r\n      <div className=\"project-menu\">\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>something</div>\r\n        {/* <div className=\"button\">Add project</div> */}\r\n      </div>\r\n      <ProjectAdd onSaveProjectDetails={onSaveProjectDetailsHandler} />\r\n      <ProjectField\r\n        projectDetails={projectDetails}\r\n        deleteProject={deleteTodo}\r\n      />\r\n      {/* <button onClick={createProject}>Create Project</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}