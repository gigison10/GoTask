{"ast":null,"code":"\"use strict\";\n\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PassThroughShim = exports.formatAsUTCISO = exports.convertObjKeysToSnakeCase = exports.unicodeJSONStringify = exports.objectKeyToLowercase = exports.qsStringify = exports.encodeURI = exports.fixedEncodeURIComponent = exports.objectEntries = exports.normalize = void 0;\nconst querystring = require(\"querystring\");\nconst stream_1 = require(\"stream\");\nfunction normalize(optionsOrCallback, cb) {\n  const options = typeof optionsOrCallback === 'object' ? optionsOrCallback : {};\n  const callback = typeof optionsOrCallback === 'function' ? optionsOrCallback : cb;\n  return {\n    options,\n    callback\n  };\n}\nexports.normalize = normalize;\n/**\n * Flatten an object into an Array of arrays, [[key, value], ..].\n * Implements Object.entries() for Node.js <8\n * @internal\n */\nfunction objectEntries(obj) {\n  return Object.keys(obj).map(key => [key, obj[key]]);\n}\nexports.objectEntries = objectEntries;\n/**\n * Encode `str` with encodeURIComponent, plus these\n * reserved characters: `! * ' ( )`.\n *\n * See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent| MDN: fixedEncodeURIComponent}\n *\n * @param {string} str The URI component to encode.\n * @return {string} The encoded string.\n */\nfunction fixedEncodeURIComponent(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, c => '%' + c.charCodeAt(0).toString(16).toUpperCase());\n}\nexports.fixedEncodeURIComponent = fixedEncodeURIComponent;\n/**\n * URI encode `uri` for generating signed URLs, using fixedEncodeURIComponent.\n *\n * Encode every byte except `A-Z a-Z 0-9 ~ - . _`.\n *\n * @param {string} uri The URI to encode.\n * @param [boolean=false] encodeSlash If `true`, the \"/\" character is not encoded.\n * @return {string} The encoded string.\n */\nfunction encodeURI(uri, encodeSlash) {\n  // Split the string by `/`, and conditionally rejoin them with either\n  // %2F if encodeSlash is `true`, or '/' if `false`.\n  return uri.split('/').map(fixedEncodeURIComponent).join(encodeSlash ? '%2F' : '/');\n}\nexports.encodeURI = encodeURI;\n/**\n * Serialize an object to a URL query string using util.encodeURI(uri, true).\n * @param {string} url The object to serialize.\n * @return {string} Serialized string.\n */\nfunction qsStringify(qs) {\n  return querystring.stringify(qs, '&', '=', {\n    encodeURIComponent: component => encodeURI(component, true)\n  });\n}\nexports.qsStringify = qsStringify;\nfunction objectKeyToLowercase(object) {\n  const newObj = {};\n  for (let key of Object.keys(object)) {\n    const value = object[key];\n    key = key.toLowerCase();\n    newObj[key] = value;\n  }\n  return newObj;\n}\nexports.objectKeyToLowercase = objectKeyToLowercase;\n/**\n * JSON encode str, with unicode \\u+ representation.\n * @param {object} obj The object to encode.\n * @return {string} Serialized string.\n */\nfunction unicodeJSONStringify(obj) {\n  return JSON.stringify(obj).replace(/[\\u0080-\\uFFFF]/g, char => '\\\\u' + ('0000' + char.charCodeAt(0).toString(16)).slice(-4));\n}\nexports.unicodeJSONStringify = unicodeJSONStringify;\n/**\n * Converts the given objects keys to snake_case\n * @param {object} obj object to convert keys to snake case.\n * @returns {object} object with keys converted to snake case.\n */\nfunction convertObjKeysToSnakeCase(obj) {\n  if (obj instanceof Date || obj instanceof RegExp) {\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(convertObjKeysToSnakeCase);\n  }\n  if (obj instanceof Object) {\n    return Object.keys(obj).reduce((acc, cur) => {\n      const s = cur[0].toLocaleLowerCase() + cur.slice(1).replace(/([A-Z]+)/g, (match, p1) => {\n        return `_${p1.toLowerCase()}`;\n      });\n      acc[s] = convertObjKeysToSnakeCase(obj[cur]);\n      return acc;\n    }, Object());\n  }\n  return obj;\n}\nexports.convertObjKeysToSnakeCase = convertObjKeysToSnakeCase;\n/**\n * Formats the provided date object as a UTC ISO string.\n * @param {Date} dateTimeToFormat date object to be formatted.\n * @param {boolean} includeTime flag to include hours, minutes, seconds in output.\n * @param {string} dateDelimiter delimiter between date components.\n * @param {string} timeDelimiter delimiter between time components.\n * @returns {string} UTC ISO format of provided date obect.\n */\nfunction formatAsUTCISO(dateTimeToFormat) {\n  let includeTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let dateDelimiter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  let timeDelimiter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  const year = dateTimeToFormat.getUTCFullYear();\n  const month = dateTimeToFormat.getUTCMonth() + 1;\n  const day = dateTimeToFormat.getUTCDate();\n  const hour = dateTimeToFormat.getUTCHours();\n  const minute = dateTimeToFormat.getUTCMinutes();\n  const second = dateTimeToFormat.getUTCSeconds();\n  let resultString = `${year.toString().padStart(4, '0')}${dateDelimiter}${month.toString().padStart(2, '0')}${dateDelimiter}${day.toString().padStart(2, '0')}`;\n  if (includeTime) {\n    resultString = `${resultString}T${hour.toString().padStart(2, '0')}${timeDelimiter}${minute.toString().padStart(2, '0')}${timeDelimiter}${second.toString().padStart(2, '0')}Z`;\n  }\n  return resultString;\n}\nexports.formatAsUTCISO = formatAsUTCISO;\nclass PassThroughShim extends stream_1.PassThrough {\n  constructor() {\n    super(...arguments);\n    this.shouldEmitReading = true;\n    this.shouldEmitWriting = true;\n  }\n  _read(size) {\n    if (this.shouldEmitReading) {\n      this.emit('reading');\n      this.shouldEmitReading = false;\n    }\n    super._read(size);\n  }\n  _write(chunk, encoding, callback) {\n    if (this.shouldEmitWriting) {\n      this.emit('writing');\n      this.shouldEmitWriting = false;\n    }\n    // Per the nodejs documention, callback must be invoked on the next tick\n    process.nextTick(() => {\n      super._write(chunk, encoding, callback);\n    });\n  }\n  _final(callback) {\n    // If the stream is empty (i.e. empty file) final will be invoked before _read / _write\n    // and we should still emit the proper events.\n    if (this.shouldEmitReading) {\n      this.emit('reading');\n      this.shouldEmitReading = false;\n    }\n    if (this.shouldEmitWriting) {\n      this.emit('writing');\n      this.shouldEmitWriting = false;\n    }\n    callback(null);\n  }\n}\nexports.PassThroughShim = PassThroughShim;","map":{"version":3,"names":["Object","defineProperty","exports","value","PassThroughShim","formatAsUTCISO","convertObjKeysToSnakeCase","unicodeJSONStringify","objectKeyToLowercase","qsStringify","encodeURI","fixedEncodeURIComponent","objectEntries","normalize","querystring","require","stream_1","optionsOrCallback","cb","options","callback","obj","keys","map","key","str","encodeURIComponent","replace","c","charCodeAt","toString","toUpperCase","uri","encodeSlash","split","join","qs","stringify","component","object","newObj","toLowerCase","JSON","char","slice","Date","RegExp","Array","isArray","reduce","acc","cur","s","toLocaleLowerCase","match","p1","dateTimeToFormat","includeTime","arguments","length","undefined","dateDelimiter","timeDelimiter","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","hour","getUTCHours","minute","getUTCMinutes","second","getUTCSeconds","resultString","padStart","PassThrough","constructor","shouldEmitReading","shouldEmitWriting","_read","size","emit","_write","chunk","encoding","process","nextTick","_final"],"sources":["D:/Coding/React/taskmybusiness/node_modules/@google-cloud/storage/build/src/util.js"],"sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PassThroughShim = exports.formatAsUTCISO = exports.convertObjKeysToSnakeCase = exports.unicodeJSONStringify = exports.objectKeyToLowercase = exports.qsStringify = exports.encodeURI = exports.fixedEncodeURIComponent = exports.objectEntries = exports.normalize = void 0;\nconst querystring = require(\"querystring\");\nconst stream_1 = require(\"stream\");\nfunction normalize(optionsOrCallback, cb) {\n    const options = (typeof optionsOrCallback === 'object' ? optionsOrCallback : {});\n    const callback = (typeof optionsOrCallback === 'function' ? optionsOrCallback : cb);\n    return { options, callback };\n}\nexports.normalize = normalize;\n/**\n * Flatten an object into an Array of arrays, [[key, value], ..].\n * Implements Object.entries() for Node.js <8\n * @internal\n */\nfunction objectEntries(obj) {\n    return Object.keys(obj).map(key => [key, obj[key]]);\n}\nexports.objectEntries = objectEntries;\n/**\n * Encode `str` with encodeURIComponent, plus these\n * reserved characters: `! * ' ( )`.\n *\n * See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent| MDN: fixedEncodeURIComponent}\n *\n * @param {string} str The URI component to encode.\n * @return {string} The encoded string.\n */\nfunction fixedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, c => '%' + c.charCodeAt(0).toString(16).toUpperCase());\n}\nexports.fixedEncodeURIComponent = fixedEncodeURIComponent;\n/**\n * URI encode `uri` for generating signed URLs, using fixedEncodeURIComponent.\n *\n * Encode every byte except `A-Z a-Z 0-9 ~ - . _`.\n *\n * @param {string} uri The URI to encode.\n * @param [boolean=false] encodeSlash If `true`, the \"/\" character is not encoded.\n * @return {string} The encoded string.\n */\nfunction encodeURI(uri, encodeSlash) {\n    // Split the string by `/`, and conditionally rejoin them with either\n    // %2F if encodeSlash is `true`, or '/' if `false`.\n    return uri\n        .split('/')\n        .map(fixedEncodeURIComponent)\n        .join(encodeSlash ? '%2F' : '/');\n}\nexports.encodeURI = encodeURI;\n/**\n * Serialize an object to a URL query string using util.encodeURI(uri, true).\n * @param {string} url The object to serialize.\n * @return {string} Serialized string.\n */\nfunction qsStringify(qs) {\n    return querystring.stringify(qs, '&', '=', {\n        encodeURIComponent: (component) => encodeURI(component, true),\n    });\n}\nexports.qsStringify = qsStringify;\nfunction objectKeyToLowercase(object) {\n    const newObj = {};\n    for (let key of Object.keys(object)) {\n        const value = object[key];\n        key = key.toLowerCase();\n        newObj[key] = value;\n    }\n    return newObj;\n}\nexports.objectKeyToLowercase = objectKeyToLowercase;\n/**\n * JSON encode str, with unicode \\u+ representation.\n * @param {object} obj The object to encode.\n * @return {string} Serialized string.\n */\nfunction unicodeJSONStringify(obj) {\n    return JSON.stringify(obj).replace(/[\\u0080-\\uFFFF]/g, (char) => '\\\\u' + ('0000' + char.charCodeAt(0).toString(16)).slice(-4));\n}\nexports.unicodeJSONStringify = unicodeJSONStringify;\n/**\n * Converts the given objects keys to snake_case\n * @param {object} obj object to convert keys to snake case.\n * @returns {object} object with keys converted to snake case.\n */\nfunction convertObjKeysToSnakeCase(obj) {\n    if (obj instanceof Date || obj instanceof RegExp) {\n        return obj;\n    }\n    if (Array.isArray(obj)) {\n        return obj.map(convertObjKeysToSnakeCase);\n    }\n    if (obj instanceof Object) {\n        return Object.keys(obj).reduce((acc, cur) => {\n            const s = cur[0].toLocaleLowerCase() +\n                cur.slice(1).replace(/([A-Z]+)/g, (match, p1) => {\n                    return `_${p1.toLowerCase()}`;\n                });\n            acc[s] = convertObjKeysToSnakeCase(obj[cur]);\n            return acc;\n        }, Object());\n    }\n    return obj;\n}\nexports.convertObjKeysToSnakeCase = convertObjKeysToSnakeCase;\n/**\n * Formats the provided date object as a UTC ISO string.\n * @param {Date} dateTimeToFormat date object to be formatted.\n * @param {boolean} includeTime flag to include hours, minutes, seconds in output.\n * @param {string} dateDelimiter delimiter between date components.\n * @param {string} timeDelimiter delimiter between time components.\n * @returns {string} UTC ISO format of provided date obect.\n */\nfunction formatAsUTCISO(dateTimeToFormat, includeTime = false, dateDelimiter = '', timeDelimiter = '') {\n    const year = dateTimeToFormat.getUTCFullYear();\n    const month = dateTimeToFormat.getUTCMonth() + 1;\n    const day = dateTimeToFormat.getUTCDate();\n    const hour = dateTimeToFormat.getUTCHours();\n    const minute = dateTimeToFormat.getUTCMinutes();\n    const second = dateTimeToFormat.getUTCSeconds();\n    let resultString = `${year.toString().padStart(4, '0')}${dateDelimiter}${month\n        .toString()\n        .padStart(2, '0')}${dateDelimiter}${day.toString().padStart(2, '0')}`;\n    if (includeTime) {\n        resultString = `${resultString}T${hour\n            .toString()\n            .padStart(2, '0')}${timeDelimiter}${minute\n            .toString()\n            .padStart(2, '0')}${timeDelimiter}${second.toString().padStart(2, '0')}Z`;\n    }\n    return resultString;\n}\nexports.formatAsUTCISO = formatAsUTCISO;\nclass PassThroughShim extends stream_1.PassThrough {\n    constructor() {\n        super(...arguments);\n        this.shouldEmitReading = true;\n        this.shouldEmitWriting = true;\n    }\n    _read(size) {\n        if (this.shouldEmitReading) {\n            this.emit('reading');\n            this.shouldEmitReading = false;\n        }\n        super._read(size);\n    }\n    _write(chunk, encoding, callback) {\n        if (this.shouldEmitWriting) {\n            this.emit('writing');\n            this.shouldEmitWriting = false;\n        }\n        // Per the nodejs documention, callback must be invoked on the next tick\n        process.nextTick(() => {\n            super._write(chunk, encoding, callback);\n        });\n    }\n    _final(callback) {\n        // If the stream is empty (i.e. empty file) final will be invoked before _read / _write\n        // and we should still emit the proper events.\n        if (this.shouldEmitReading) {\n            this.emit('reading');\n            this.shouldEmitReading = false;\n        }\n        if (this.shouldEmitWriting) {\n            this.emit('writing');\n            this.shouldEmitWriting = false;\n        }\n        callback(null);\n    }\n}\nexports.PassThroughShim = PassThroughShim;\n//# sourceMappingURL=util.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}