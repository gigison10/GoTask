{"ast":null,"code":"\"use strict\";\n\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CRC32C_crc32c;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CRC32C_EXTENSION_TABLE = exports.CRC32C_EXTENSIONS = exports.CRC32C_EXCEPTION_MESSAGES = exports.CRC32C_DEFAULT_VALIDATOR_GENERATOR = exports.CRC32C = void 0;\nconst fs_1 = require(\"fs\");\n/**\n * Ported from {@link https://github.com/google/crc32c/blob/21fc8ef30415a635e7351ffa0e5d5367943d4a94/src/crc32c_portable.cc#L16-L59 github.com/google/crc32c}\n */\nconst CRC32C_EXTENSIONS = [0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c, 0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b, 0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c, 0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384, 0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc, 0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a, 0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512, 0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa, 0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad, 0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a, 0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf, 0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957, 0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f, 0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927, 0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f, 0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7, 0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e, 0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859, 0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e, 0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6, 0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de, 0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c, 0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4, 0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c, 0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b, 0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c, 0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5, 0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d, 0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975, 0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d, 0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905, 0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed, 0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8, 0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff, 0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8, 0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540, 0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78, 0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee, 0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6, 0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e, 0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69, 0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e, 0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351];\nexports.CRC32C_EXTENSIONS = CRC32C_EXTENSIONS;\nconst CRC32C_EXTENSION_TABLE = new Int32Array(CRC32C_EXTENSIONS);\nexports.CRC32C_EXTENSION_TABLE = CRC32C_EXTENSION_TABLE;\nconst CRC32C_DEFAULT_VALIDATOR_GENERATOR = () => new CRC32C();\nexports.CRC32C_DEFAULT_VALIDATOR_GENERATOR = CRC32C_DEFAULT_VALIDATOR_GENERATOR;\nconst CRC32C_EXCEPTION_MESSAGES = {\n  INVALID_INIT_BASE64_RANGE: l => `base64-encoded data expected to equal 4 bytes, not ${l}`,\n  INVALID_INIT_BUFFER_LENGTH: l => `Buffer expected to equal 4 bytes, not ${l}`,\n  INVALID_INIT_INTEGER: l => `Number expected to be a safe, unsigned 32-bit integer, not ${l}`\n};\nexports.CRC32C_EXCEPTION_MESSAGES = CRC32C_EXCEPTION_MESSAGES;\nclass CRC32C {\n  /**\n   * Constructs a new `CRC32C` object.\n   *\n   * Reconstruction is recommended via the `CRC32C.from` static method.\n   *\n   * @param initialValue An initial CRC32C value - a signed 32-bit integer.\n   */\n  constructor() {\n    let initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    /** Current CRC32C value */\n    _CRC32C_crc32c.set(this, 0);\n    __classPrivateFieldSet(this, _CRC32C_crc32c, initialValue, \"f\");\n  }\n  /**\n   * Calculates a CRC32C from a provided buffer.\n   *\n   * Implementation inspired from:\n   * - {@link https://github.com/google/crc32c/blob/21fc8ef30415a635e7351ffa0e5d5367943d4a94/src/crc32c_portable.cc github.com/google/crc32c}\n   * - {@link https://github.com/googleapis/python-crc32c/blob/a595e758c08df445a99c3bf132ee8e80a3ec4308/src/google_crc32c/python.py github.com/googleapis/python-crc32c}\n   * - {@link https://github.com/googleapis/java-storage/pull/1376/files github.com/googleapis/java-storage}\n   *\n   * @param data The `Buffer` to generate the CRC32C from\n   */\n  update(data) {\n    let current = __classPrivateFieldGet(this, _CRC32C_crc32c, \"f\") ^ 0xffffffff;\n    for (const d of data) {\n      const tablePoly = CRC32C.CRC32C_EXTENSION_TABLE[(d ^ current) & 0xff];\n      current = tablePoly ^ current >>> 8;\n    }\n    __classPrivateFieldSet(this, _CRC32C_crc32c, current ^ 0xffffffff, \"f\");\n  }\n  /**\n   * Validates a provided input to the current CRC32C value.\n   *\n   * @param input A Buffer, `CRC32C`-compatible object, base64-encoded data (string), or signed 32-bit integer\n   */\n  validate(input) {\n    if (typeof input === 'number') {\n      return input === __classPrivateFieldGet(this, _CRC32C_crc32c, \"f\");\n    } else if (typeof input === 'string') {\n      return input === this.toString();\n    } else if (Buffer.isBuffer(input)) {\n      return Buffer.compare(input, this.toBuffer()) === 0;\n    } else {\n      // `CRC32C`-like object\n      return input.toString() === this.toString();\n    }\n  }\n  /**\n   * Returns a `Buffer` representation of the CRC32C value\n   */\n  toBuffer() {\n    const buffer = Buffer.alloc(4);\n    buffer.writeInt32BE(__classPrivateFieldGet(this, _CRC32C_crc32c, \"f\"));\n    return buffer;\n  }\n  /**\n   * Returns a JSON-compatible, base64-encoded representation of the CRC32C value.\n   *\n   * See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify `JSON#stringify`}\n   */\n  toJSON() {\n    return this.toString();\n  }\n  /**\n   * Returns a base64-encoded representation of the CRC32C value.\n   *\n   * See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString `Object#toString`}\n   */\n  toString() {\n    return this.toBuffer().toString('base64');\n  }\n  /**\n   * Returns the `number` representation of the CRC32C value as a signed 32-bit integer\n   *\n   * See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf `Object#valueOf`}\n   */\n  valueOf() {\n    return __classPrivateFieldGet(this, _CRC32C_crc32c, \"f\");\n  }\n  /**\n   * Generates a `CRC32C` from a compatible buffer format.\n   *\n   * @param value 4-byte `ArrayBufferView`/`Buffer`/`TypedArray`\n   */\n  static fromBuffer(value) {\n    let buffer;\n    if (Buffer.isBuffer(value)) {\n      buffer = value;\n    } else if ('buffer' in value) {\n      // `ArrayBufferView`\n      buffer = Buffer.from(value.buffer);\n    } else {\n      // `ArrayBuffer`\n      buffer = Buffer.from(value);\n    }\n    if (buffer.byteLength !== 4) {\n      throw new RangeError(CRC32C_EXCEPTION_MESSAGES.INVALID_INIT_BUFFER_LENGTH(buffer.byteLength));\n    }\n    return new CRC32C(buffer.readInt32BE());\n  }\n  static async fromFile(file) {\n    const crc32c = new CRC32C();\n    await new Promise((resolve, reject) => {\n      (0, fs_1.createReadStream)(file).on('data', d => crc32c.update(d)).on('end', resolve).on('error', reject);\n    });\n    return crc32c;\n  }\n  /**\n   * Generates a `CRC32C` from 4-byte base64-encoded data (string).\n   *\n   * @param value 4-byte base64-encoded data (string)\n   */\n  static fromString(value) {\n    const buffer = Buffer.from(value, 'base64');\n    if (buffer.byteLength !== 4) {\n      throw new RangeError(CRC32C_EXCEPTION_MESSAGES.INVALID_INIT_BASE64_RANGE(buffer.byteLength));\n    }\n    return this.fromBuffer(buffer);\n  }\n  /**\n   * Generates a `CRC32C` from a safe, unsigned 32-bit integer.\n   *\n   * @param value an unsigned 32-bit integer\n   */\n  static fromNumber(value) {\n    if (!Number.isSafeInteger(value) || value > 2 ** 32 || value < -(2 ** 32)) {\n      throw new RangeError(CRC32C_EXCEPTION_MESSAGES.INVALID_INIT_INTEGER(value));\n    }\n    return new CRC32C(value);\n  }\n  /**\n   * Generates a `CRC32C` from a variety of compatable types.\n   * Note: strings are treated as input, not as file paths to read from.\n   *\n   * @param value A number, 4-byte `ArrayBufferView`/`Buffer`/`TypedArray`, or 4-byte base64-encoded data (string)\n   */\n  static from(value) {\n    if (typeof value === 'number') {\n      return this.fromNumber(value);\n    } else if (typeof value === 'string') {\n      return this.fromString(value);\n    } else if ('byteLength' in value) {\n      // `ArrayBuffer` | `Buffer` | `ArrayBufferView`\n      return this.fromBuffer(value);\n    } else {\n      // `CRC32CValidator`/`CRC32C`-like\n      return this.fromString(value.toString());\n    }\n  }\n}\nexports.CRC32C = CRC32C;\n_CRC32C_crc32c = new WeakMap();\nCRC32C.CRC32C_EXTENSIONS = CRC32C_EXTENSIONS;\nCRC32C.CRC32C_EXTENSION_TABLE = CRC32C_EXTENSION_TABLE;","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_CRC32C_crc32c","Object","defineProperty","exports","CRC32C_EXTENSION_TABLE","CRC32C_EXTENSIONS","CRC32C_EXCEPTION_MESSAGES","CRC32C_DEFAULT_VALIDATOR_GENERATOR","CRC32C","fs_1","require","Int32Array","INVALID_INIT_BASE64_RANGE","l","INVALID_INIT_BUFFER_LENGTH","INVALID_INIT_INTEGER","constructor","initialValue","arguments","length","undefined","update","data","current","d","tablePoly","validate","input","toString","Buffer","isBuffer","compare","toBuffer","buffer","alloc","writeInt32BE","toJSON","valueOf","fromBuffer","from","byteLength","RangeError","readInt32BE","fromFile","file","crc32c","Promise","resolve","reject","createReadStream","on","fromString","fromNumber","Number","isSafeInteger","WeakMap"],"sources":["D:/Coding/React/taskmybusiness/node_modules/@google-cloud/storage/build/src/crc32c.js"],"sourcesContent":["\"use strict\";\n// Copyright 2022 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CRC32C_crc32c;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CRC32C_EXTENSION_TABLE = exports.CRC32C_EXTENSIONS = exports.CRC32C_EXCEPTION_MESSAGES = exports.CRC32C_DEFAULT_VALIDATOR_GENERATOR = exports.CRC32C = void 0;\nconst fs_1 = require(\"fs\");\n/**\n * Ported from {@link https://github.com/google/crc32c/blob/21fc8ef30415a635e7351ffa0e5d5367943d4a94/src/crc32c_portable.cc#L16-L59 github.com/google/crc32c}\n */\nconst CRC32C_EXTENSIONS = [\n    0x00000000, 0xf26b8303, 0xe13b70f7, 0x1350f3f4, 0xc79a971f, 0x35f1141c,\n    0x26a1e7e8, 0xd4ca64eb, 0x8ad958cf, 0x78b2dbcc, 0x6be22838, 0x9989ab3b,\n    0x4d43cfd0, 0xbf284cd3, 0xac78bf27, 0x5e133c24, 0x105ec76f, 0xe235446c,\n    0xf165b798, 0x030e349b, 0xd7c45070, 0x25afd373, 0x36ff2087, 0xc494a384,\n    0x9a879fa0, 0x68ec1ca3, 0x7bbcef57, 0x89d76c54, 0x5d1d08bf, 0xaf768bbc,\n    0xbc267848, 0x4e4dfb4b, 0x20bd8ede, 0xd2d60ddd, 0xc186fe29, 0x33ed7d2a,\n    0xe72719c1, 0x154c9ac2, 0x061c6936, 0xf477ea35, 0xaa64d611, 0x580f5512,\n    0x4b5fa6e6, 0xb93425e5, 0x6dfe410e, 0x9f95c20d, 0x8cc531f9, 0x7eaeb2fa,\n    0x30e349b1, 0xc288cab2, 0xd1d83946, 0x23b3ba45, 0xf779deae, 0x05125dad,\n    0x1642ae59, 0xe4292d5a, 0xba3a117e, 0x4851927d, 0x5b016189, 0xa96ae28a,\n    0x7da08661, 0x8fcb0562, 0x9c9bf696, 0x6ef07595, 0x417b1dbc, 0xb3109ebf,\n    0xa0406d4b, 0x522bee48, 0x86e18aa3, 0x748a09a0, 0x67dafa54, 0x95b17957,\n    0xcba24573, 0x39c9c670, 0x2a993584, 0xd8f2b687, 0x0c38d26c, 0xfe53516f,\n    0xed03a29b, 0x1f682198, 0x5125dad3, 0xa34e59d0, 0xb01eaa24, 0x42752927,\n    0x96bf4dcc, 0x64d4cecf, 0x77843d3b, 0x85efbe38, 0xdbfc821c, 0x2997011f,\n    0x3ac7f2eb, 0xc8ac71e8, 0x1c661503, 0xee0d9600, 0xfd5d65f4, 0x0f36e6f7,\n    0x61c69362, 0x93ad1061, 0x80fde395, 0x72966096, 0xa65c047d, 0x5437877e,\n    0x4767748a, 0xb50cf789, 0xeb1fcbad, 0x197448ae, 0x0a24bb5a, 0xf84f3859,\n    0x2c855cb2, 0xdeeedfb1, 0xcdbe2c45, 0x3fd5af46, 0x7198540d, 0x83f3d70e,\n    0x90a324fa, 0x62c8a7f9, 0xb602c312, 0x44694011, 0x5739b3e5, 0xa55230e6,\n    0xfb410cc2, 0x092a8fc1, 0x1a7a7c35, 0xe811ff36, 0x3cdb9bdd, 0xceb018de,\n    0xdde0eb2a, 0x2f8b6829, 0x82f63b78, 0x709db87b, 0x63cd4b8f, 0x91a6c88c,\n    0x456cac67, 0xb7072f64, 0xa457dc90, 0x563c5f93, 0x082f63b7, 0xfa44e0b4,\n    0xe9141340, 0x1b7f9043, 0xcfb5f4a8, 0x3dde77ab, 0x2e8e845f, 0xdce5075c,\n    0x92a8fc17, 0x60c37f14, 0x73938ce0, 0x81f80fe3, 0x55326b08, 0xa759e80b,\n    0xb4091bff, 0x466298fc, 0x1871a4d8, 0xea1a27db, 0xf94ad42f, 0x0b21572c,\n    0xdfeb33c7, 0x2d80b0c4, 0x3ed04330, 0xccbbc033, 0xa24bb5a6, 0x502036a5,\n    0x4370c551, 0xb11b4652, 0x65d122b9, 0x97baa1ba, 0x84ea524e, 0x7681d14d,\n    0x2892ed69, 0xdaf96e6a, 0xc9a99d9e, 0x3bc21e9d, 0xef087a76, 0x1d63f975,\n    0x0e330a81, 0xfc588982, 0xb21572c9, 0x407ef1ca, 0x532e023e, 0xa145813d,\n    0x758fe5d6, 0x87e466d5, 0x94b49521, 0x66df1622, 0x38cc2a06, 0xcaa7a905,\n    0xd9f75af1, 0x2b9cd9f2, 0xff56bd19, 0x0d3d3e1a, 0x1e6dcdee, 0xec064eed,\n    0xc38d26c4, 0x31e6a5c7, 0x22b65633, 0xd0ddd530, 0x0417b1db, 0xf67c32d8,\n    0xe52cc12c, 0x1747422f, 0x49547e0b, 0xbb3ffd08, 0xa86f0efc, 0x5a048dff,\n    0x8ecee914, 0x7ca56a17, 0x6ff599e3, 0x9d9e1ae0, 0xd3d3e1ab, 0x21b862a8,\n    0x32e8915c, 0xc083125f, 0x144976b4, 0xe622f5b7, 0xf5720643, 0x07198540,\n    0x590ab964, 0xab613a67, 0xb831c993, 0x4a5a4a90, 0x9e902e7b, 0x6cfbad78,\n    0x7fab5e8c, 0x8dc0dd8f, 0xe330a81a, 0x115b2b19, 0x020bd8ed, 0xf0605bee,\n    0x24aa3f05, 0xd6c1bc06, 0xc5914ff2, 0x37faccf1, 0x69e9f0d5, 0x9b8273d6,\n    0x88d28022, 0x7ab90321, 0xae7367ca, 0x5c18e4c9, 0x4f48173d, 0xbd23943e,\n    0xf36e6f75, 0x0105ec76, 0x12551f82, 0xe03e9c81, 0x34f4f86a, 0xc69f7b69,\n    0xd5cf889d, 0x27a40b9e, 0x79b737ba, 0x8bdcb4b9, 0x988c474d, 0x6ae7c44e,\n    0xbe2da0a5, 0x4c4623a6, 0x5f16d052, 0xad7d5351,\n];\nexports.CRC32C_EXTENSIONS = CRC32C_EXTENSIONS;\nconst CRC32C_EXTENSION_TABLE = new Int32Array(CRC32C_EXTENSIONS);\nexports.CRC32C_EXTENSION_TABLE = CRC32C_EXTENSION_TABLE;\nconst CRC32C_DEFAULT_VALIDATOR_GENERATOR = () => new CRC32C();\nexports.CRC32C_DEFAULT_VALIDATOR_GENERATOR = CRC32C_DEFAULT_VALIDATOR_GENERATOR;\nconst CRC32C_EXCEPTION_MESSAGES = {\n    INVALID_INIT_BASE64_RANGE: (l) => `base64-encoded data expected to equal 4 bytes, not ${l}`,\n    INVALID_INIT_BUFFER_LENGTH: (l) => `Buffer expected to equal 4 bytes, not ${l}`,\n    INVALID_INIT_INTEGER: (l) => `Number expected to be a safe, unsigned 32-bit integer, not ${l}`,\n};\nexports.CRC32C_EXCEPTION_MESSAGES = CRC32C_EXCEPTION_MESSAGES;\nclass CRC32C {\n    /**\n     * Constructs a new `CRC32C` object.\n     *\n     * Reconstruction is recommended via the `CRC32C.from` static method.\n     *\n     * @param initialValue An initial CRC32C value - a signed 32-bit integer.\n     */\n    constructor(initialValue = 0) {\n        /** Current CRC32C value */\n        _CRC32C_crc32c.set(this, 0);\n        __classPrivateFieldSet(this, _CRC32C_crc32c, initialValue, \"f\");\n    }\n    /**\n     * Calculates a CRC32C from a provided buffer.\n     *\n     * Implementation inspired from:\n     * - {@link https://github.com/google/crc32c/blob/21fc8ef30415a635e7351ffa0e5d5367943d4a94/src/crc32c_portable.cc github.com/google/crc32c}\n     * - {@link https://github.com/googleapis/python-crc32c/blob/a595e758c08df445a99c3bf132ee8e80a3ec4308/src/google_crc32c/python.py github.com/googleapis/python-crc32c}\n     * - {@link https://github.com/googleapis/java-storage/pull/1376/files github.com/googleapis/java-storage}\n     *\n     * @param data The `Buffer` to generate the CRC32C from\n     */\n    update(data) {\n        let current = __classPrivateFieldGet(this, _CRC32C_crc32c, \"f\") ^ 0xffffffff;\n        for (const d of data) {\n            const tablePoly = CRC32C.CRC32C_EXTENSION_TABLE[(d ^ current) & 0xff];\n            current = tablePoly ^ (current >>> 8);\n        }\n        __classPrivateFieldSet(this, _CRC32C_crc32c, current ^ 0xffffffff, \"f\");\n    }\n    /**\n     * Validates a provided input to the current CRC32C value.\n     *\n     * @param input A Buffer, `CRC32C`-compatible object, base64-encoded data (string), or signed 32-bit integer\n     */\n    validate(input) {\n        if (typeof input === 'number') {\n            return input === __classPrivateFieldGet(this, _CRC32C_crc32c, \"f\");\n        }\n        else if (typeof input === 'string') {\n            return input === this.toString();\n        }\n        else if (Buffer.isBuffer(input)) {\n            return Buffer.compare(input, this.toBuffer()) === 0;\n        }\n        else {\n            // `CRC32C`-like object\n            return input.toString() === this.toString();\n        }\n    }\n    /**\n     * Returns a `Buffer` representation of the CRC32C value\n     */\n    toBuffer() {\n        const buffer = Buffer.alloc(4);\n        buffer.writeInt32BE(__classPrivateFieldGet(this, _CRC32C_crc32c, \"f\"));\n        return buffer;\n    }\n    /**\n     * Returns a JSON-compatible, base64-encoded representation of the CRC32C value.\n     *\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify `JSON#stringify`}\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Returns a base64-encoded representation of the CRC32C value.\n     *\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString `Object#toString`}\n     */\n    toString() {\n        return this.toBuffer().toString('base64');\n    }\n    /**\n     * Returns the `number` representation of the CRC32C value as a signed 32-bit integer\n     *\n     * See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/valueOf `Object#valueOf`}\n     */\n    valueOf() {\n        return __classPrivateFieldGet(this, _CRC32C_crc32c, \"f\");\n    }\n    /**\n     * Generates a `CRC32C` from a compatible buffer format.\n     *\n     * @param value 4-byte `ArrayBufferView`/`Buffer`/`TypedArray`\n     */\n    static fromBuffer(value) {\n        let buffer;\n        if (Buffer.isBuffer(value)) {\n            buffer = value;\n        }\n        else if ('buffer' in value) {\n            // `ArrayBufferView`\n            buffer = Buffer.from(value.buffer);\n        }\n        else {\n            // `ArrayBuffer`\n            buffer = Buffer.from(value);\n        }\n        if (buffer.byteLength !== 4) {\n            throw new RangeError(CRC32C_EXCEPTION_MESSAGES.INVALID_INIT_BUFFER_LENGTH(buffer.byteLength));\n        }\n        return new CRC32C(buffer.readInt32BE());\n    }\n    static async fromFile(file) {\n        const crc32c = new CRC32C();\n        await new Promise((resolve, reject) => {\n            (0, fs_1.createReadStream)(file)\n                .on('data', (d) => crc32c.update(d))\n                .on('end', resolve)\n                .on('error', reject);\n        });\n        return crc32c;\n    }\n    /**\n     * Generates a `CRC32C` from 4-byte base64-encoded data (string).\n     *\n     * @param value 4-byte base64-encoded data (string)\n     */\n    static fromString(value) {\n        const buffer = Buffer.from(value, 'base64');\n        if (buffer.byteLength !== 4) {\n            throw new RangeError(CRC32C_EXCEPTION_MESSAGES.INVALID_INIT_BASE64_RANGE(buffer.byteLength));\n        }\n        return this.fromBuffer(buffer);\n    }\n    /**\n     * Generates a `CRC32C` from a safe, unsigned 32-bit integer.\n     *\n     * @param value an unsigned 32-bit integer\n     */\n    static fromNumber(value) {\n        if (!Number.isSafeInteger(value) || value > 2 ** 32 || value < -(2 ** 32)) {\n            throw new RangeError(CRC32C_EXCEPTION_MESSAGES.INVALID_INIT_INTEGER(value));\n        }\n        return new CRC32C(value);\n    }\n    /**\n     * Generates a `CRC32C` from a variety of compatable types.\n     * Note: strings are treated as input, not as file paths to read from.\n     *\n     * @param value A number, 4-byte `ArrayBufferView`/`Buffer`/`TypedArray`, or 4-byte base64-encoded data (string)\n     */\n    static from(value) {\n        if (typeof value === 'number') {\n            return this.fromNumber(value);\n        }\n        else if (typeof value === 'string') {\n            return this.fromString(value);\n        }\n        else if ('byteLength' in value) {\n            // `ArrayBuffer` | `Buffer` | `ArrayBufferView`\n            return this.fromBuffer(value);\n        }\n        else {\n            // `CRC32CValidator`/`CRC32C`-like\n            return this.fromString(value.toString());\n        }\n    }\n}\nexports.CRC32C = CRC32C;\n_CRC32C_crc32c = new WeakMap();\nCRC32C.CRC32C_EXTENSIONS = CRC32C_EXTENSIONS;\nCRC32C.CRC32C_EXTENSION_TABLE = CRC32C_EXTENSION_TABLE;\n//# sourceMappingURL=crc32c.js.map"],"mappings":"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AU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EACtE,UAAU,EAAE,UA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"},"metadata":{},"sourceType":"script","externalDependencies":[]}