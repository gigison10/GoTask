{"ast":null,"code":"const logger = require('debug')('jwks');\nconst memoizer = require('lru-memoizer');\nconst {\n  promisify,\n  callbackify\n} = require('util');\nfunction cacheWrapper(client, _ref) {\n  let {\n    cacheMaxEntries = 5,\n    cacheMaxAge = 600000\n  } = _ref;\n  logger(`Configured caching of signing keys. Max: ${cacheMaxEntries} / Age: ${cacheMaxAge}`);\n  return promisify(memoizer({\n    hash: kid => kid,\n    load: callbackify(client.getSigningKey.bind(client)),\n    maxAge: cacheMaxAge,\n    max: cacheMaxEntries\n  }));\n}\nmodule.exports.default = cacheWrapper;","map":{"version":3,"names":["logger","require","memoizer","promisify","callbackify","cacheWrapper","client","_ref","cacheMaxEntries","cacheMaxAge","hash","kid","load","getSigningKey","bind","maxAge","max","module","exports","default"],"sources":["D:/Coding/React/taskmybusiness/node_modules/jwks-rsa/src/wrappers/cache.js"],"sourcesContent":["const logger = require('debug')('jwks');\nconst memoizer = require('lru-memoizer');\nconst { promisify, callbackify } = require('util');\n\nfunction cacheWrapper(client, { cacheMaxEntries = 5, cacheMaxAge = 600000 }) {\n  logger(`Configured caching of signing keys. Max: ${cacheMaxEntries} / Age: ${cacheMaxAge}`);\n  return promisify(memoizer({\n    hash: (kid) => kid,\n    load: callbackify(client.getSigningKey.bind(client)),\n    maxAge: cacheMaxAge,\n    max: cacheMaxEntries\n  }));\n}\n\nmodule.exports.default = cacheWrapper;\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;AACvC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,cAAc,CAAC;AACxC,MAAM;EAAEE,SAAS;EAAEC;AAAY,CAAC,GAAGH,OAAO,CAAC,MAAM,CAAC;AAElD,SAASI,YAAYA,CAACC,MAAM,EAAAC,IAAA,EAAiD;EAAA,IAA/C;IAAEC,eAAe,GAAG,CAAC;IAAEC,WAAW,GAAG;EAAO,CAAC,GAAAF,IAAA;EACzEP,MAAM,CAAE,4CAA2CQ,eAAgB,WAAUC,WAAY,EAAC,CAAC;EAC3F,OAAON,SAAS,CAACD,QAAQ,CAAC;IACxBQ,IAAI,EAAGC,GAAG,IAAKA,GAAG;IAClBC,IAAI,EAAER,WAAW,CAACE,MAAM,CAACO,aAAa,CAACC,IAAI,CAACR,MAAM,CAAC,CAAC;IACpDS,MAAM,EAAEN,WAAW;IACnBO,GAAG,EAAER;EACP,CAAC,CAAC,CAAC;AACL;AAEAS,MAAM,CAACC,OAAO,CAACC,OAAO,GAAGd,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}