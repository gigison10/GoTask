{"ast":null,"code":"/*! firebase-admin v11.9.0 */\n\"use strict\";\n\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstanceId = void 0;\nconst installations_1 = require(\"../installations\");\nconst error_1 = require(\"../utils/error\");\nconst validator = require(\"../utils/validator\");\n/**\n * The `InstanceId` service enables deleting the Firebase instance IDs\n * associated with Firebase client app instances.\n *\n * @deprecated Use {@link firebase-admin.installations#Installations} instead.\n */\nclass InstanceId {\n  /**\n   * @param app - The app for this InstanceId service.\n   * @constructor\n   * @internal\n   */\n  constructor(app) {\n    if (!validator.isNonNullObject(app) || !('options' in app)) {\n      throw new error_1.FirebaseInstanceIdError(error_1.InstanceIdClientErrorCode.INVALID_ARGUMENT, 'First argument passed to instanceId() must be a valid Firebase app instance.');\n    }\n    this.app_ = app;\n  }\n  /**\n   * Deletes the specified instance ID and the associated data from Firebase.\n   *\n   * Note that Google Analytics for Firebase uses its own form of Instance ID to\n   * keep track of analytics data. Therefore deleting a Firebase Instance ID does\n   * not delete Analytics data. See\n   * {@link https://firebase.google.com/support/privacy/manage-iids#delete_an_instance_id |\n   * Delete an Instance ID}\n   * for more information.\n   *\n   * @param instanceId - The instance ID to be deleted.\n   *\n   * @returns A promise fulfilled when the instance ID is deleted.\n   */\n  deleteInstanceId(instanceId) {\n    return (0, installations_1.getInstallations)(this.app).deleteInstallation(instanceId).catch(err => {\n      if (err instanceof error_1.FirebaseInstallationsError) {\n        let code = err.code.replace('installations/', '');\n        if (code === error_1.InstallationsClientErrorCode.INVALID_INSTALLATION_ID.code) {\n          code = error_1.InstanceIdClientErrorCode.INVALID_INSTANCE_ID.code;\n        }\n        throw new error_1.FirebaseInstanceIdError({\n          code,\n          message: err.message\n        });\n      }\n      throw err;\n    });\n  }\n  /**\n   * Returns the app associated with this InstanceId instance.\n   *\n   * @returns The app associated with this InstanceId instance.\n   */\n  get app() {\n    return this.app_;\n  }\n}\nexports.InstanceId = InstanceId;","map":{"version":3,"names":["Object","defineProperty","exports","value","InstanceId","installations_1","require","error_1","validator","constructor","app","isNonNullObject","FirebaseInstanceIdError","InstanceIdClientErrorCode","INVALID_ARGUMENT","app_","deleteInstanceId","instanceId","getInstallations","deleteInstallation","catch","err","FirebaseInstallationsError","code","replace","InstallationsClientErrorCode","INVALID_INSTALLATION_ID","INVALID_INSTANCE_ID","message"],"sources":["D:/Coding/React/taskmybusiness/node_modules/firebase-admin/lib/instance-id/instance-id.js"],"sourcesContent":["/*! firebase-admin v11.9.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstanceId = void 0;\nconst installations_1 = require(\"../installations\");\nconst error_1 = require(\"../utils/error\");\nconst validator = require(\"../utils/validator\");\n/**\n * The `InstanceId` service enables deleting the Firebase instance IDs\n * associated with Firebase client app instances.\n *\n * @deprecated Use {@link firebase-admin.installations#Installations} instead.\n */\nclass InstanceId {\n    /**\n     * @param app - The app for this InstanceId service.\n     * @constructor\n     * @internal\n     */\n    constructor(app) {\n        if (!validator.isNonNullObject(app) || !('options' in app)) {\n            throw new error_1.FirebaseInstanceIdError(error_1.InstanceIdClientErrorCode.INVALID_ARGUMENT, 'First argument passed to instanceId() must be a valid Firebase app instance.');\n        }\n        this.app_ = app;\n    }\n    /**\n     * Deletes the specified instance ID and the associated data from Firebase.\n     *\n     * Note that Google Analytics for Firebase uses its own form of Instance ID to\n     * keep track of analytics data. Therefore deleting a Firebase Instance ID does\n     * not delete Analytics data. See\n     * {@link https://firebase.google.com/support/privacy/manage-iids#delete_an_instance_id |\n     * Delete an Instance ID}\n     * for more information.\n     *\n     * @param instanceId - The instance ID to be deleted.\n     *\n     * @returns A promise fulfilled when the instance ID is deleted.\n     */\n    deleteInstanceId(instanceId) {\n        return (0, installations_1.getInstallations)(this.app).deleteInstallation(instanceId)\n            .catch((err) => {\n            if (err instanceof error_1.FirebaseInstallationsError) {\n                let code = err.code.replace('installations/', '');\n                if (code === error_1.InstallationsClientErrorCode.INVALID_INSTALLATION_ID.code) {\n                    code = error_1.InstanceIdClientErrorCode.INVALID_INSTANCE_ID.code;\n                }\n                throw new error_1.FirebaseInstanceIdError({ code, message: err.message });\n            }\n            throw err;\n        });\n    }\n    /**\n     * Returns the app associated with this InstanceId instance.\n     *\n     * @returns The app associated with this InstanceId instance.\n     */\n    get app() {\n        return this.app_;\n    }\n}\nexports.InstanceId = InstanceId;\n"],"mappings":"AAAA;AACA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B,MAAMC,eAAe,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AACnD,MAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAME,SAAS,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,UAAU,CAAC;EACb;AACJ;AACA;AACA;AACA;EACIK,WAAWA,CAACC,GAAG,EAAE;IACb,IAAI,CAACF,SAAS,CAACG,eAAe,CAACD,GAAG,CAAC,IAAI,EAAE,SAAS,IAAIA,GAAG,CAAC,EAAE;MACxD,MAAM,IAAIH,OAAO,CAACK,uBAAuB,CAACL,OAAO,CAACM,yBAAyB,CAACC,gBAAgB,EAAE,8EAA8E,CAAC;IACjL;IACA,IAAI,CAACC,IAAI,GAAGL,GAAG;EACnB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIM,gBAAgBA,CAACC,UAAU,EAAE;IACzB,OAAO,CAAC,CAAC,EAAEZ,eAAe,CAACa,gBAAgB,EAAE,IAAI,CAACR,GAAG,CAAC,CAACS,kBAAkB,CAACF,UAAU,CAAC,CAChFG,KAAK,CAAEC,GAAG,IAAK;MAChB,IAAIA,GAAG,YAAYd,OAAO,CAACe,0BAA0B,EAAE;QACnD,IAAIC,IAAI,GAAGF,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC;QACjD,IAAID,IAAI,KAAKhB,OAAO,CAACkB,4BAA4B,CAACC,uBAAuB,CAACH,IAAI,EAAE;UAC5EA,IAAI,GAAGhB,OAAO,CAACM,yBAAyB,CAACc,mBAAmB,CAACJ,IAAI;QACrE;QACA,MAAM,IAAIhB,OAAO,CAACK,uBAAuB,CAAC;UAAEW,IAAI;UAAEK,OAAO,EAAEP,GAAG,CAACO;QAAQ,CAAC,CAAC;MAC7E;MACA,MAAMP,GAAG;IACb,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIX,GAAGA,CAAA,EAAG;IACN,OAAO,IAAI,CAACK,IAAI;EACpB;AACJ;AACAb,OAAO,CAACE,UAAU,GAAGA,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}