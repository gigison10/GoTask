{"ast":null,"code":"const http = require('http');\nconst https = require('https');\nconst urlUtil = require('url');\nmodule.exports.default = options => {\n  if (options.fetcher) {\n    return options.fetcher(options.uri);\n  }\n  return new Promise((resolve, reject) => {\n    const {\n      hostname,\n      path,\n      port,\n      protocol\n    } = urlUtil.parse(options.uri);\n    const requestOptions = {\n      hostname,\n      path,\n      port,\n      method: 'GET',\n      ...(options.headers && {\n        headers: {\n          ...options.headers\n        }\n      }),\n      ...(options.timeout && {\n        timeout: options.timeout\n      }),\n      ...(options.agent && {\n        agent: options.agent\n      })\n    };\n    const httpRequestLib = protocol === 'https:' ? https : http;\n    const httpRequest = httpRequestLib.request(requestOptions, res => {\n      let rawData = '';\n      res.setEncoding('utf8');\n      res.on('data', chunk => {\n        rawData += chunk;\n      });\n      res.on('end', () => {\n        if (res.statusCode < 200 || res.statusCode >= 300) {\n          const errorMsg = res.body && (res.body.message || res.body) || res.statusMessage || `Http Error ${res.statusCode}`;\n          reject({\n            errorMsg\n          });\n        } else {\n          try {\n            resolve(rawData && JSON.parse(rawData));\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n    httpRequest.on('timeout', () => httpRequest.destroy()).on('error', e => reject(e)).end();\n  });\n};","map":{"version":3,"names":["http","require","https","urlUtil","module","exports","default","options","fetcher","uri","Promise","resolve","reject","hostname","path","port","protocol","parse","requestOptions","method","headers","timeout","agent","httpRequestLib","httpRequest","request","res","rawData","setEncoding","on","chunk","statusCode","errorMsg","body","message","statusMessage","JSON","error","destroy","e","end"],"sources":["D:/Coding/React/taskmybusiness/node_modules/jwks-rsa/src/wrappers/request.js"],"sourcesContent":["const http = require('http');\nconst https = require('https');\nconst urlUtil = require('url');\n\nmodule.exports.default =  (options) => {\n  if (options.fetcher) {\n    return options.fetcher(options.uri);\n  }\n\n  return new Promise((resolve, reject) => {\n    const {\n      hostname,\n      path,\n      port,\n      protocol\n    } = urlUtil.parse(options.uri);\n\n    const requestOptions = {\n      hostname,\n      path,\n      port,\n      method: 'GET',\n      ...(options.headers && { headers: { ...options.headers } }),\n      ...(options.timeout && { timeout: options.timeout }),\n      ...(options.agent && { agent: options.agent })\n    };\n\n    const httpRequestLib = protocol === 'https:' ? https : http;\n    const httpRequest = httpRequestLib.request(requestOptions, (res) => {\n      let rawData = '';\n      res.setEncoding('utf8');\n      res.on('data', (chunk) => { rawData += chunk; });\n      res.on('end', () => {\n        if (res.statusCode < 200 || res.statusCode >= 300) {\n          const errorMsg = res.body && (res.body.message || res.body) || res.statusMessage || `Http Error ${res.statusCode}`;\n          reject({ errorMsg });\n        } else {\n          try {\n            resolve(rawData && JSON.parse(rawData));\n          } catch (error) {\n            reject(error);\n          }\n        }\n      });\n    });\n\n    httpRequest\n      .on('timeout', () => httpRequest.destroy())\n      .on('error', (e) => reject(e))\n      .end();\n  });\n};\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAME,OAAO,GAAGF,OAAO,CAAC,KAAK,CAAC;AAE9BG,MAAM,CAACC,OAAO,CAACC,OAAO,GAAKC,OAAO,IAAK;EACrC,IAAIA,OAAO,CAACC,OAAO,EAAE;IACnB,OAAOD,OAAO,CAACC,OAAO,CAACD,OAAO,CAACE,GAAG,CAAC;EACrC;EAEA,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAM;MACJC,QAAQ;MACRC,IAAI;MACJC,IAAI;MACJC;IACF,CAAC,GAAGb,OAAO,CAACc,KAAK,CAACV,OAAO,CAACE,GAAG,CAAC;IAE9B,MAAMS,cAAc,GAAG;MACrBL,QAAQ;MACRC,IAAI;MACJC,IAAI;MACJI,MAAM,EAAE,KAAK;MACb,IAAIZ,OAAO,CAACa,OAAO,IAAI;QAAEA,OAAO,EAAE;UAAE,GAAGb,OAAO,CAACa;QAAQ;MAAE,CAAC,CAAC;MAC3D,IAAIb,OAAO,CAACc,OAAO,IAAI;QAAEA,OAAO,EAAEd,OAAO,CAACc;MAAQ,CAAC,CAAC;MACpD,IAAId,OAAO,CAACe,KAAK,IAAI;QAAEA,KAAK,EAAEf,OAAO,CAACe;MAAM,CAAC;IAC/C,CAAC;IAED,MAAMC,cAAc,GAAGP,QAAQ,KAAK,QAAQ,GAAGd,KAAK,GAAGF,IAAI;IAC3D,MAAMwB,WAAW,GAAGD,cAAc,CAACE,OAAO,CAACP,cAAc,EAAGQ,GAAG,IAAK;MAClE,IAAIC,OAAO,GAAG,EAAE;MAChBD,GAAG,CAACE,WAAW,CAAC,MAAM,CAAC;MACvBF,GAAG,CAACG,EAAE,CAAC,MAAM,EAAGC,KAAK,IAAK;QAAEH,OAAO,IAAIG,KAAK;MAAE,CAAC,CAAC;MAChDJ,GAAG,CAACG,EAAE,CAAC,KAAK,EAAE,MAAM;QAClB,IAAIH,GAAG,CAACK,UAAU,GAAG,GAAG,IAAIL,GAAG,CAACK,UAAU,IAAI,GAAG,EAAE;UACjD,MAAMC,QAAQ,GAAGN,GAAG,CAACO,IAAI,KAAKP,GAAG,CAACO,IAAI,CAACC,OAAO,IAAIR,GAAG,CAACO,IAAI,CAAC,IAAIP,GAAG,CAACS,aAAa,IAAK,cAAaT,GAAG,CAACK,UAAW,EAAC;UAClHnB,MAAM,CAAC;YAAEoB;UAAS,CAAC,CAAC;QACtB,CAAC,MAAM;UACL,IAAI;YACFrB,OAAO,CAACgB,OAAO,IAAIS,IAAI,CAACnB,KAAK,CAACU,OAAO,CAAC,CAAC;UACzC,CAAC,CAAC,OAAOU,KAAK,EAAE;YACdzB,MAAM,CAACyB,KAAK,CAAC;UACf;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFb,WAAW,CACRK,EAAE,CAAC,SAAS,EAAE,MAAML,WAAW,CAACc,OAAO,CAAC,CAAC,CAAC,CAC1CT,EAAE,CAAC,OAAO,EAAGU,CAAC,IAAK3B,MAAM,CAAC2B,CAAC,CAAC,CAAC,CAC7BC,GAAG,CAAC,CAAC;EACV,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}