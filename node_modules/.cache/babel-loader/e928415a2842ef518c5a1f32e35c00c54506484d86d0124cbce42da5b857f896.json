{"ast":null,"code":"import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = value => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n  if (typeof audPayload === 'string') {\n    return audOption.includes(audPayload);\n  }\n  if (Array.isArray(audPayload)) {\n    return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n  }\n  return false;\n};\nexport default (function (protectedHeader, encodedPayload) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    typ\n  } = options;\n  if (typ && (typeof protectedHeader.typ !== 'string' || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n    throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n  }\n  let payload;\n  try {\n    payload = JSON.parse(decoder.decode(encodedPayload));\n  } catch (_a) {}\n  if (!isObject(payload)) {\n    throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n  }\n  const {\n    requiredClaims = [],\n    issuer,\n    subject,\n    audience,\n    maxTokenAge\n  } = options;\n  if (maxTokenAge !== undefined) requiredClaims.push('iat');\n  if (audience !== undefined) requiredClaims.push('aud');\n  if (subject !== undefined) requiredClaims.push('sub');\n  if (issuer !== undefined) requiredClaims.push('iss');\n  for (const claim of new Set(requiredClaims.reverse())) {\n    if (!(claim in payload)) {\n      throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n    }\n  }\n  if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n    throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n  }\n  if (subject && payload.sub !== subject) {\n    throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n  }\n  if (audience && !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n    throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n  }\n  let tolerance;\n  switch (typeof options.clockTolerance) {\n    case 'string':\n      tolerance = secs(options.clockTolerance);\n      break;\n    case 'number':\n      tolerance = options.clockTolerance;\n      break;\n    case 'undefined':\n      tolerance = 0;\n      break;\n    default:\n      throw new TypeError('Invalid clockTolerance option type');\n  }\n  const {\n    currentDate\n  } = options;\n  const now = epoch(currentDate || new Date());\n  if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n    throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n  }\n  if (payload.nbf !== undefined) {\n    if (typeof payload.nbf !== 'number') {\n      throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n    }\n    if (payload.nbf > now + tolerance) {\n      throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n    }\n  }\n  if (payload.exp !== undefined) {\n    if (typeof payload.exp !== 'number') {\n      throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n    }\n    if (payload.exp <= now - tolerance) {\n      throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n    }\n  }\n  if (maxTokenAge) {\n    const age = now - payload.iat;\n    const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n    if (age - tolerance > max) {\n      throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n    }\n    if (age < 0 - tolerance) {\n      throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n    }\n  }\n  return payload;\n});","map":{"version":3,"names":["JWTClaimValidationFailed","JWTExpired","JWTInvalid","decoder","epoch","secs","isObject","normalizeTyp","value","toLowerCase","replace","checkAudiencePresence","audPayload","audOption","includes","Array","isArray","some","Set","prototype","has","bind","protectedHeader","encodedPayload","options","arguments","length","undefined","typ","payload","JSON","parse","decode","_a","requiredClaims","issuer","subject","audience","maxTokenAge","push","claim","reverse","iss","sub","aud","tolerance","clockTolerance","TypeError","currentDate","now","Date","iat","nbf","exp","age","max"],"sources":["D:/Coding/React/taskmybusiness/node_modules/jose/dist/browser/lib/jwt_claims_set.js"],"sourcesContent":["import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch (_a) {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    if (maxTokenAge !== undefined)\n        requiredClaims.push('iat');\n    if (audience !== undefined)\n        requiredClaims.push('aud');\n    if (subject !== undefined)\n        requiredClaims.push('sub');\n    if (issuer !== undefined)\n        requiredClaims.push('iss');\n    for (const claim of new Set(requiredClaims.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}