{"ast":null,"code":"const {\n  ArgumentError\n} = require('../errors');\nconst {\n  JwksClient\n} = require('../JwksClient');\nconst supportedAlg = require('./config');\nconst handleSigningKeyError = (err, cb) => {\n  // If we didn't find a match, can't provide a key.\n  if (err && err.name === 'SigningKeyNotFoundError') {\n    return cb(err, null, null);\n  }\n\n  // If an error occured like rate limiting or HTTP issue, we'll bubble up the error.\n  if (err) {\n    return cb(err, null, null);\n  }\n};\n\n/**\n * Call hapiJwt2Key as a Promise\n * @param {object} options \n * @returns {Promise}\n */\nmodule.exports.hapiJwt2KeyAsync = options => {\n  const secretProvider = module.exports.hapiJwt2Key(options);\n  return function (decoded) {\n    return new Promise((resolve, reject) => {\n      const cb = (err, key) => {\n        !key || err ? reject(err) : resolve({\n          key\n        });\n      };\n      secretProvider(decoded, cb);\n    });\n  };\n};\nmodule.exports.hapiJwt2Key = function (options) {\n  if (options === null || options === undefined) {\n    throw new ArgumentError('An options object must be provided when initializing hapiJwt2Key');\n  }\n  const client = new JwksClient(options);\n  const onError = options.handleSigningKeyError || handleSigningKeyError;\n  return function secretProvider(decoded, cb) {\n    // We cannot find a signing certificate if there is no header (no kid).\n    if (!decoded || !decoded.header) {\n      return cb(new Error('Cannot find a signing certificate if there is no header'), null, null);\n    }\n    if (!supportedAlg.includes(decoded.header.alg)) {\n      return cb(new Error('Unsupported algorithm ' + decoded.header.alg + ' supplied.'), null, null);\n    }\n    client.getSigningKey(decoded.header.kid).then(key => {\n      return cb(null, key.publicKey || key.rsaPublicKey, key);\n    }).catch(err => {\n      return onError(err, newError => cb(newError, null, null));\n    });\n  };\n};","map":{"version":3,"names":["ArgumentError","require","JwksClient","supportedAlg","handleSigningKeyError","err","cb","name","module","exports","hapiJwt2KeyAsync","options","secretProvider","hapiJwt2Key","decoded","Promise","resolve","reject","key","undefined","client","onError","header","Error","includes","alg","getSigningKey","kid","then","publicKey","rsaPublicKey","catch","newError"],"sources":["D:/Coding/React/taskmybusiness/node_modules/jwks-rsa/src/integrations/hapi.js"],"sourcesContent":["const { ArgumentError } = require('../errors');\nconst { JwksClient } = require('../JwksClient');\nconst supportedAlg = require('./config');\n\nconst handleSigningKeyError = (err, cb) => {\n  // If we didn't find a match, can't provide a key.\n  if (err && err.name === 'SigningKeyNotFoundError') {\n    return cb(err, null, null);\n  }\n\n  // If an error occured like rate limiting or HTTP issue, we'll bubble up the error.\n  if (err) {\n    return cb(err, null, null);\n  }\n};\n\n/**\n * Call hapiJwt2Key as a Promise\n * @param {object} options \n * @returns {Promise}\n */\nmodule.exports.hapiJwt2KeyAsync = (options) => {\n  const secretProvider = module.exports.hapiJwt2Key(options);\n  return function(decoded) {\n    return new Promise((resolve, reject) => {\n      const cb = (err, key) => {\n        (!key || err) ? reject(err) : resolve({ key });\n      };\n      secretProvider(decoded, cb);\n    });\n  };\n}; \n\nmodule.exports.hapiJwt2Key = function (options) {\n  if (options === null || options === undefined) {\n    throw new ArgumentError('An options object must be provided when initializing hapiJwt2Key');\n  }\n\n  const client = new JwksClient(options);\n  const onError = options.handleSigningKeyError || handleSigningKeyError;\n\n  return function secretProvider(decoded, cb) {\n    // We cannot find a signing certificate if there is no header (no kid).\n    if (!decoded || !decoded.header) {\n      return cb(new Error('Cannot find a signing certificate if there is no header'), null, null);\n    }\n\n    if (!supportedAlg.includes(decoded.header.alg)) {\n      return cb(new Error('Unsupported algorithm ' + decoded.header.alg + ' supplied.'), null, null);\n    }\n\n    client.getSigningKey(decoded.header.kid)\n      .then(key => {\n        return cb(null, key.publicKey || key.rsaPublicKey, key);\n      }).catch(err => {\n        return onError(err, (newError) => cb(newError, null, null));\n      });\n  };\n};\n"],"mappings":"AAAA,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC9C,MAAM;EAAEC;AAAW,CAAC,GAAGD,OAAO,CAAC,eAAe,CAAC;AAC/C,MAAME,YAAY,GAAGF,OAAO,CAAC,UAAU,CAAC;AAExC,MAAMG,qBAAqB,GAAGA,CAACC,GAAG,EAAEC,EAAE,KAAK;EACzC;EACA,IAAID,GAAG,IAAIA,GAAG,CAACE,IAAI,KAAK,yBAAyB,EAAE;IACjD,OAAOD,EAAE,CAACD,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;EAC5B;;EAEA;EACA,IAAIA,GAAG,EAAE;IACP,OAAOC,EAAE,CAACD,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;EAC5B;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAG,MAAM,CAACC,OAAO,CAACC,gBAAgB,GAAIC,OAAO,IAAK;EAC7C,MAAMC,cAAc,GAAGJ,MAAM,CAACC,OAAO,CAACI,WAAW,CAACF,OAAO,CAAC;EAC1D,OAAO,UAASG,OAAO,EAAE;IACvB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMX,EAAE,GAAGA,CAACD,GAAG,EAAEa,GAAG,KAAK;QACtB,CAACA,GAAG,IAAIb,GAAG,GAAIY,MAAM,CAACZ,GAAG,CAAC,GAAGW,OAAO,CAAC;UAAEE;QAAI,CAAC,CAAC;MAChD,CAAC;MACDN,cAAc,CAACE,OAAO,EAAER,EAAE,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAEDE,MAAM,CAACC,OAAO,CAACI,WAAW,GAAG,UAAUF,OAAO,EAAE;EAC9C,IAAIA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAKQ,SAAS,EAAE;IAC7C,MAAM,IAAInB,aAAa,CAAC,kEAAkE,CAAC;EAC7F;EAEA,MAAMoB,MAAM,GAAG,IAAIlB,UAAU,CAACS,OAAO,CAAC;EACtC,MAAMU,OAAO,GAAGV,OAAO,CAACP,qBAAqB,IAAIA,qBAAqB;EAEtE,OAAO,SAASQ,cAAcA,CAACE,OAAO,EAAER,EAAE,EAAE;IAC1C;IACA,IAAI,CAACQ,OAAO,IAAI,CAACA,OAAO,CAACQ,MAAM,EAAE;MAC/B,OAAOhB,EAAE,CAAC,IAAIiB,KAAK,CAAC,yDAAyD,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IAC7F;IAEA,IAAI,CAACpB,YAAY,CAACqB,QAAQ,CAACV,OAAO,CAACQ,MAAM,CAACG,GAAG,CAAC,EAAE;MAC9C,OAAOnB,EAAE,CAAC,IAAIiB,KAAK,CAAC,wBAAwB,GAAGT,OAAO,CAACQ,MAAM,CAACG,GAAG,GAAG,YAAY,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;IAChG;IAEAL,MAAM,CAACM,aAAa,CAACZ,OAAO,CAACQ,MAAM,CAACK,GAAG,CAAC,CACrCC,IAAI,CAACV,GAAG,IAAI;MACX,OAAOZ,EAAE,CAAC,IAAI,EAAEY,GAAG,CAACW,SAAS,IAAIX,GAAG,CAACY,YAAY,EAAEZ,GAAG,CAAC;IACzD,CAAC,CAAC,CAACa,KAAK,CAAC1B,GAAG,IAAI;MACd,OAAOgB,OAAO,CAAChB,GAAG,EAAG2B,QAAQ,IAAK1B,EAAE,CAAC0B,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC,CAAC;EACN,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}