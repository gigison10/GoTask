{"ast":null,"code":"\"use strict\";\n\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Channel = void 0;\nconst nodejs_common_1 = require(\"./nodejs-common\");\nconst promisify_1 = require(\"@google-cloud/promisify\");\n/**\n * Create a channel object to interact with a Cloud Storage channel.\n *\n * See {@link https://cloud.google.com/storage/docs/object-change-notification| Object Change Notification}\n *\n * @class\n *\n * @param {string} id The ID of the channel.\n * @param {string} resourceId The resource ID of the channel.\n *\n * @example\n * ```\n * const {Storage} = require('@google-cloud/storage');\n * const storage = new Storage();\n * const channel = storage.channel('id', 'resource-id');\n * ```\n */\nclass Channel extends nodejs_common_1.ServiceObject {\n  constructor(storage, id, resourceId) {\n    const config = {\n      parent: storage,\n      baseUrl: '/channels',\n      // An ID shouldn't be included in the API requests.\n      // RE:\n      // https://github.com/GoogleCloudPlatform/google-cloud-node/issues/1145\n      id: '',\n      methods: {\n        // Only need `request`.\n      }\n    };\n    super(config);\n    this.metadata.id = id;\n    this.metadata.resourceId = resourceId;\n  }\n  /**\n   * @typedef {array} StopResponse\n   * @property {object} 0 The full API response.\n   */\n  /**\n   * @callback StopCallback\n   * @param {?Error} err Request error, if any.\n   * @param {object} apiResponse The full API response.\n   */\n  /**\n   * Stop this channel.\n   *\n   * @param {StopCallback} [callback] Callback function.\n   * @returns {Promise<StopResponse>}\n   *\n   * @example\n   * ```\n   * const {Storage} = require('@google-cloud/storage');\n   * const storage = new Storage();\n   * const channel = storage.channel('id', 'resource-id');\n   * channel.stop(function(err, apiResponse) {\n   *   if (!err) {\n   *     // Channel stopped successfully.\n   *   }\n   * });\n   *\n   * //-\n   * // If the callback is omitted, we'll return a Promise.\n   * //-\n   * channel.stop().then(function(data) {\n   *   const apiResponse = data[0];\n   * });\n   * ```\n   */\n  stop(callback) {\n    callback = callback || nodejs_common_1.util.noop;\n    this.request({\n      method: 'POST',\n      uri: '/stop',\n      json: this.metadata\n    }, (err, apiResponse) => {\n      callback(err, apiResponse);\n    });\n  }\n}\nexports.Channel = Channel;\n/*! Developer Documentation\n *\n * All async methods (except for streams) will return a Promise in the event\n * that a callback is omitted.\n */\n(0, promisify_1.promisifyAll)(Channel);","map":{"version":3,"names":["Object","defineProperty","exports","value","Channel","nodejs_common_1","require","promisify_1","ServiceObject","constructor","storage","id","resourceId","config","parent","baseUrl","methods","metadata","stop","callback","util","noop","request","method","uri","json","err","apiResponse","promisifyAll"],"sources":["D:/Coding/React/taskmybusiness/node_modules/@google-cloud/storage/build/src/channel.js"],"sourcesContent":["\"use strict\";\n// Copyright 2019 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Channel = void 0;\nconst nodejs_common_1 = require(\"./nodejs-common\");\nconst promisify_1 = require(\"@google-cloud/promisify\");\n/**\n * Create a channel object to interact with a Cloud Storage channel.\n *\n * See {@link https://cloud.google.com/storage/docs/object-change-notification| Object Change Notification}\n *\n * @class\n *\n * @param {string} id The ID of the channel.\n * @param {string} resourceId The resource ID of the channel.\n *\n * @example\n * ```\n * const {Storage} = require('@google-cloud/storage');\n * const storage = new Storage();\n * const channel = storage.channel('id', 'resource-id');\n * ```\n */\nclass Channel extends nodejs_common_1.ServiceObject {\n    constructor(storage, id, resourceId) {\n        const config = {\n            parent: storage,\n            baseUrl: '/channels',\n            // An ID shouldn't be included in the API requests.\n            // RE:\n            // https://github.com/GoogleCloudPlatform/google-cloud-node/issues/1145\n            id: '',\n            methods: {\n            // Only need `request`.\n            },\n        };\n        super(config);\n        this.metadata.id = id;\n        this.metadata.resourceId = resourceId;\n    }\n    /**\n     * @typedef {array} StopResponse\n     * @property {object} 0 The full API response.\n     */\n    /**\n     * @callback StopCallback\n     * @param {?Error} err Request error, if any.\n     * @param {object} apiResponse The full API response.\n     */\n    /**\n     * Stop this channel.\n     *\n     * @param {StopCallback} [callback] Callback function.\n     * @returns {Promise<StopResponse>}\n     *\n     * @example\n     * ```\n     * const {Storage} = require('@google-cloud/storage');\n     * const storage = new Storage();\n     * const channel = storage.channel('id', 'resource-id');\n     * channel.stop(function(err, apiResponse) {\n     *   if (!err) {\n     *     // Channel stopped successfully.\n     *   }\n     * });\n     *\n     * //-\n     * // If the callback is omitted, we'll return a Promise.\n     * //-\n     * channel.stop().then(function(data) {\n     *   const apiResponse = data[0];\n     * });\n     * ```\n     */\n    stop(callback) {\n        callback = callback || nodejs_common_1.util.noop;\n        this.request({\n            method: 'POST',\n            uri: '/stop',\n            json: this.metadata,\n        }, (err, apiResponse) => {\n            callback(err, apiResponse);\n        });\n    }\n}\nexports.Channel = Channel;\n/*! Developer Documentation\n *\n * All async methods (except for streams) will return a Promise in the event\n * that a callback is omitted.\n */\n(0, promisify_1.promisifyAll)(Channel);\n//# sourceMappingURL=channel.js.map"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,MAAMC,eAAe,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAMC,WAAW,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,OAAO,SAASC,eAAe,CAACG,aAAa,CAAC;EAChDC,WAAWA,CAACC,OAAO,EAAEC,EAAE,EAAEC,UAAU,EAAE;IACjC,MAAMC,MAAM,GAAG;MACXC,MAAM,EAAEJ,OAAO;MACfK,OAAO,EAAE,WAAW;MACpB;MACA;MACA;MACAJ,EAAE,EAAE,EAAE;MACNK,OAAO,EAAE;QACT;MAAA;IAEJ,CAAC;IACD,KAAK,CAACH,MAAM,CAAC;IACb,IAAI,CAACI,QAAQ,CAACN,EAAE,GAAGA,EAAE;IACrB,IAAI,CAACM,QAAQ,CAACL,UAAU,GAAGA,UAAU;EACzC;EACA;AACJ;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIM,IAAIA,CAACC,QAAQ,EAAE;IACXA,QAAQ,GAAGA,QAAQ,IAAId,eAAe,CAACe,IAAI,CAACC,IAAI;IAChD,IAAI,CAACC,OAAO,CAAC;MACTC,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,OAAO;MACZC,IAAI,EAAE,IAAI,CAACR;IACf,CAAC,EAAE,CAACS,GAAG,EAAEC,WAAW,KAAK;MACrBR,QAAQ,CAACO,GAAG,EAAEC,WAAW,CAAC;IAC9B,CAAC,CAAC;EACN;AACJ;AACAzB,OAAO,CAACE,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,EAAEG,WAAW,CAACqB,YAAY,EAAExB,OAAO,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}