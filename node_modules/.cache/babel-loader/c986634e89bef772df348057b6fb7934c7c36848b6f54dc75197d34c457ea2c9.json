{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projects-page\\\\project-page.jsx\",\n  _s = $RefreshSig$();\nimport \"./project-page.scss\";\nimport { db } from \"../../utils/firebase/firebase-utils\";\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\nimport { useState, useContext, useEffect } from \"react\";\nimport ProjectAdd from \"../projectAdd-field/project-add\";\nimport ProjectField from \"../projectField/projectField\";\nimport { ProjectsContext, UserContext, updateProjectsContext } from \"../../contexts/context\";\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from \"../../utils/firebase/firebase-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectPage() {\n  _s();\n  const [projectDetails, setProjectDetails] = useState([]);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [userId, setUserId] = useState(\"\");\n  const {\n    currentProject\n  } = useContext(ProjectsContext);\n  const {\n    setUpdateCurrentProjects\n  } = useContext(updateProjectsContext);\n  const [rerender, setRerender] = useState(1);\n\n  /////////////////////////////////////////////\n  // const [newTodo, setNewTodo] = useState(\"\");\n\n  const {\n    data: todos,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetTodosQuery();\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n  let content;\n  // Define conditional content\n  if (isLoading) {\n    console.log(\"loading\");\n  } else if (isError) {\n    console.log(\"error\", error);\n  }\n\n  /////////////////////////////////////////////\n\n  // console.log(projectDetails);\n  async function deleteProject(projectId) {\n    try {\n      const projectDocRef = doc(db, `users/${userId}/projects/${projectId}`);\n      await deleteDoc(projectDocRef);\n      setUpdateCurrentProjects(\"delete\");\n      setRerender(rerender + 1);\n      console.log(\"Project deleted successfully\");\n    } catch (error) {\n      console.error(\"Error deleting project:\", error);\n    }\n  }\n  // console.log(projectDetails);\n  useEffect(() => {\n    if (isSuccess) {\n      let arr = [];\n      console.log(\"berofe for\");\n      for (let i = 0; i < todos.documents.length; i++) {\n        console.log(\"inn for\");\n        const obj = {\n          deadLine: todos.documents[i].fields.deadLine.stringValue,\n          projectId: todos.documents[i].fields.projectId.stringValue,\n          projectName: todos.documents[i].fields.projectName.stringValue,\n          startingDate: todos.documents[i].fields.startingDate.stringValue\n        };\n        arr.push(obj);\n      }\n      setProjectDetails(arr);\n    }\n  }, [currentUser, rerender]);\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\n    const createProject = async () => {\n      try {\n        let projectData = {\n          projectName: inputProjectDetails.projectName,\n          startingDate: inputProjectDetails.startingDate,\n          deadLine: inputProjectDetails.deadLine\n        };\n\n        // Add the project data to the \"projects\" collection in Firestore\n\n        const docRef = await addDoc(collection(db, `users/${userId}/projects`), projectData);\n        const projectDataWithId = {\n          ...projectData,\n          projectId: docRef.id\n        };\n        const projectDocRef = await doc(db, `users/${userId}/projects/${docRef.id}`);\n        setDoc(projectDocRef, projectDataWithId);\n\n        // setProjectId(docRef.id);\n        setUpdateCurrentProjects(docRef.id);\n        setRerender(rerender + 1);\n\n        // console.log(\"Project ID:\", docRef.id);\n      } catch (error) {\n        console.error(\"Error creating project:\", error);\n      }\n    };\n    createProject();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectAdd, {\n      onSaveProjectDetails: onSaveProjectDetailsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectField, {\n      projectDetails: projectDetails,\n      deleteProject: deleteProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectPage, \"CJA2nMOLowbvXVLgjD7NHorpNXU=\", false, function () {\n  return [useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation];\n});\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["db","collection","addDoc","deleteDoc","doc","setDoc","useState","useContext","useEffect","ProjectAdd","ProjectField","ProjectsContext","UserContext","updateProjectsContext","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","jsxDEV","_jsxDEV","ProjectPage","_s","projectDetails","setProjectDetails","currentUser","setCurrentUser","userId","setUserId","currentProject","setUpdateCurrentProjects","rerender","setRerender","data","todos","isLoading","isSuccess","isError","error","addTodo","updateTodo","deleteTodo","content","console","log","deleteProject","projectId","projectDocRef","arr","i","documents","length","obj","deadLine","fields","stringValue","projectName","startingDate","push","onSaveProjectDetailsHandler","inputProjectDetails","createProject","projectData","docRef","projectDataWithId","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveProjectDetails","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projects-page/project-page.jsx"],"sourcesContent":["import \"./project-page.scss\";\r\nimport { db } from \"../../utils/firebase/firebase-utils\";\r\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\r\n\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport ProjectAdd from \"../projectAdd-field/project-add\";\r\nimport ProjectField from \"../projectField/projectField\";\r\nimport {\r\n  ProjectsContext,\r\n  UserContext,\r\n  updateProjectsContext,\r\n} from \"../../contexts/context\";\r\n\r\nimport {\r\n  useGetTodosQuery,\r\n  useAddTodoMutation,\r\n  useUpdateTodoMutation,\r\n  useDeleteTodoMutation,\r\n} from \"../../utils/firebase/firebase-utils\";\r\n\r\nfunction ProjectPage() {\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n  const { currentUser, setCurrentUser } = useContext(UserContext);\r\n  const [userId, setUserId] = useState(\"\");\r\n  const { currentProject } = useContext(ProjectsContext);\r\n  const { setUpdateCurrentProjects } = useContext(updateProjectsContext);\r\n  const [rerender, setRerender] = useState(1);\r\n\r\n  /////////////////////////////////////////////\r\n  // const [newTodo, setNewTodo] = useState(\"\");\r\n\r\n  const {\r\n    data: todos,\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n    error,\r\n  } = useGetTodosQuery();\r\n  const [addTodo] = useAddTodoMutation();\r\n  const [updateTodo] = useUpdateTodoMutation();\r\n  const [deleteTodo] = useDeleteTodoMutation();\r\n  let content;\r\n  // Define conditional content\r\n  if (isLoading) {\r\n    console.log(\"loading\");\r\n  } else if (isError) {\r\n    console.log(\"error\", error);\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  // console.log(projectDetails);\r\n  async function deleteProject(projectId) {\r\n    try {\r\n      const projectDocRef = doc(db, `users/${userId}/projects/${projectId}`);\r\n      await deleteDoc(projectDocRef);\r\n\r\n      setUpdateCurrentProjects(\"delete\");\r\n      setRerender(rerender + 1);\r\n      console.log(\"Project deleted successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting project:\", error);\r\n    }\r\n  }\r\n  // console.log(projectDetails);\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      let arr = [];\r\n      console.log(\"berofe for\");\r\n\r\n      for (let i = 0; i < todos.documents.length; i++) {\r\n        console.log(\"inn for\");\r\n\r\n        const obj = {\r\n          deadLine: todos.documents[i].fields.deadLine.stringValue,\r\n          projectId: todos.documents[i].fields.projectId.stringValue,\r\n          projectName: todos.documents[i].fields.projectName.stringValue,\r\n          startingDate: todos.documents[i].fields.startingDate.stringValue,\r\n        };\r\n\r\n        arr.push(obj);\r\n      }\r\n      setProjectDetails(arr);\r\n    }\r\n  }, [currentUser, rerender]);\r\n\r\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\r\n    const createProject = async () => {\r\n      try {\r\n        let projectData = {\r\n          projectName: inputProjectDetails.projectName,\r\n          startingDate: inputProjectDetails.startingDate,\r\n          deadLine: inputProjectDetails.deadLine,\r\n        };\r\n\r\n        // Add the project data to the \"projects\" collection in Firestore\r\n\r\n        const docRef = await addDoc(\r\n          collection(db, `users/${userId}/projects`),\r\n          projectData\r\n        );\r\n\r\n        const projectDataWithId = {\r\n          ...projectData,\r\n          projectId: docRef.id,\r\n        };\r\n        const projectDocRef = await doc(\r\n          db,\r\n          `users/${userId}/projects/${docRef.id}`\r\n        );\r\n\r\n        setDoc(projectDocRef, projectDataWithId);\r\n\r\n        // setProjectId(docRef.id);\r\n        setUpdateCurrentProjects(docRef.id);\r\n        setRerender(rerender + 1);\r\n\r\n        // console.log(\"Project ID:\", docRef.id);\r\n      } catch (error) {\r\n        console.error(\"Error creating project:\", error);\r\n      }\r\n    };\r\n    createProject();\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-container\">\r\n      <div className=\"project-menu\">\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>something</div>\r\n        {/* <div className=\"button\">Add project</div> */}\r\n      </div>\r\n      <ProjectAdd onSaveProjectDetails={onSaveProjectDetailsHandler} />\r\n      <ProjectField\r\n        projectDetails={projectDetails}\r\n        deleteProject={deleteProject}\r\n      />\r\n      {/* <button onClick={createProject}>Create Project</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}