{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projects-page\\\\project-page.jsx\",\n  _s = $RefreshSig$();\nimport \"./project-page.scss\";\nimport { useState, useContext, useEffect } from \"react\";\nimport ProjectAdd from \"../projectAdd-field/project-add\";\nimport ProjectField from \"../projectField/projectField\";\nimport { ProjectsContext } from \"../../contexts/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectPage() {\n  _s();\n  const [projectDetails, setProjectDetails] = useState([]);\n  useEffect(() => {\n    getProjects();\n  }, []);\n  async function getProjects() {\n    try {\n      let projects = await ProjectsContext;\n      let pro = \"\";\n      projects._currentValue.forEach(e => {\n        pro = e;\n        console.log(pro.projectName);\n      });\n      // console.log(projects._currentValue[0].projectName);\n\n      function setProjects() {\n        setProjectDetails([{\n          id: \"asdss\",\n          name: projects._currentValue[0].projectName,\n          date: projects._currentValue[0].startingDate,\n          deadLine: projects._currentValue[0].deadLine\n        }]);\n      }\n      setProjects();\n    } catch (error) {\n      console.log(\"Error fetching projects:\", error);\n    }\n  }\n  const onSaveProjectDetailsHandler = inputProjectDetails => {\n    setProjectDetails(prevDetails => [...prevDetails, {\n      ...inputProjectDetails,\n      id: Math.random().toString()\n    }]);\n  };\n  // console.log(...projectDetails);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectAdd, {\n      onSaveProjectDetails: onSaveProjectDetailsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectField, {\n      projectDetails: projectDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectPage, \"4h+dl79ElNxGaLoko0l2iDHnxdg=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["useState","useContext","useEffect","ProjectAdd","ProjectField","ProjectsContext","jsxDEV","_jsxDEV","ProjectPage","_s","projectDetails","setProjectDetails","getProjects","projects","pro","_currentValue","forEach","e","console","log","projectName","setProjects","id","name","date","startingDate","deadLine","error","onSaveProjectDetailsHandler","inputProjectDetails","prevDetails","Math","random","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveProjectDetails","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projects-page/project-page.jsx"],"sourcesContent":["import \"./project-page.scss\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport ProjectAdd from \"../projectAdd-field/project-add\";\r\nimport ProjectField from \"../projectField/projectField\";\r\nimport { ProjectsContext } from \"../../contexts/context\";\r\n\r\nfunction ProjectPage() {\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjects();\r\n  }, []);\r\n\r\n  async function getProjects() {\r\n    try {\r\n      let projects = await ProjectsContext;\r\n      let pro = \"\";\r\n      projects._currentValue.forEach((e) => {\r\n        pro = e;\r\n        console.log(pro.projectName);\r\n      });\r\n      // console.log(projects._currentValue[0].projectName);\r\n\r\n      function setProjects() {\r\n        setProjectDetails([\r\n          {\r\n            id: \"asdss\",\r\n            name: projects._currentValue[0].projectName,\r\n            date: projects._currentValue[0].startingDate,\r\n            deadLine: projects._currentValue[0].deadLine,\r\n          },\r\n        ]);\r\n      }\r\n      setProjects();\r\n    } catch (error) {\r\n      console.log(\"Error fetching projects:\", error);\r\n    }\r\n  }\r\n\r\n  const onSaveProjectDetailsHandler = (inputProjectDetails) => {\r\n    setProjectDetails((prevDetails) => [\r\n      ...prevDetails,\r\n      {\r\n        ...inputProjectDetails,\r\n        id: Math.random().toString(),\r\n      },\r\n    ]);\r\n  };\r\n  // console.log(...projectDetails);\r\n  return (\r\n    <div className=\"project-container\">\r\n      <div className=\"project-menu\">\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>something</div>\r\n        {/* <div className=\"button\">Add project</div> */}\r\n      </div>\r\n      <ProjectAdd onSaveProjectDetails={onSaveProjectDetailsHandler} />\r\n      <ProjectField projectDetails={projectDetails} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}