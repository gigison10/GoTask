{"ast":null,"code":"import { initializeApp, firebase } from \"firebase/app\";\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, getDocs, setDoc, collection, addDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\n  authDomain: \"gotask-973a8.firebaseapp.com\",\n  projectId: \"gotask-973a8\",\n  storageBucket: \"gotask-973a8.appspot.com\",\n  messagingSenderId: \"589835338400\",\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\n  measurementId: \"G-CS2ZWLEKDP\"\n};\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nexport const firestore = getFirestore();\n////////////////////////////////////////\n\nconst now = new Date();\nconst year = now.getFullYear();\nconst month = String(now.getMonth() + 1).padStart(2, \"0\");\nconst day = String(now.getDate()).padStart(2, \"0\");\n// const hours = String(now.getHours()).padStart(2, \"0\");\n// const minutes = String(now.getMinutes()).padStart(2, \"0\");\n// const seconds = String(now.getSeconds()).padStart(2, \"0\");\nconst formattedDate = `${year}-${month}-${day} `;\n\n//////////////////////////////\nexport const auth = getAuth();\nexport const db = getFirestore();\n/////////////////////////////////\n\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\n\n//////////////////////////////////////////////////\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    return userDocRef;\n  }\n};\n///////////////////////////////////////////////\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\nonAuthStateChanged(auth, async user => {\n  if (user) {\n    localStorage.setItem(\"userId\", user.uid);\n    try {\n      // console.log(userId);\n    } catch (err) {\n      console.log(err.message);\n    }\n  } else {\n    // console.log(\"no suer\");\n    localStorage.removeItem(\"userId\");\n    // console.log(\"no user logged in\");\n  }\n});\n\n/////////////////////////////////////////////\nconst apiEndpoint = \"https://firestore.googleapis.com/v1/projects/gotask-973a8/databases/(default)/documents/users/\";\n///////////////////////////////////////////////////////////////////\n\nexport const apiSlice = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: apiEndpoint\n  }),\n  tagTypes: [\"Todos\"],\n  endpoints: builder => ({\n    getTodos: builder.query({\n      query: () => {\n        // console.log(\"get works\", userId);\n        return `${localStorage.getItem(\"userId\")}/projects?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`;\n      },\n      // serializeQueryArgs: ({ getTodos }) => {\n      //   return getTodos;\n      // },\n      // staleTime: 500, // disable cachings\n      providesTags: [{\n        type: \"Todos\",\n        id: \"onDetele\"\n      }, {\n        type: \"Todos\",\n        id: \"onLoad\"\n      }, {\n        type: \"Todos\",\n        id: \"onUpdate\"\n      }]\n      // merge: (currentCache, newItems) => {\n      //   currentCache.push(...newItems);\n      //   return currentCache;\n      // },\n    }),\n\n    ///////////////////////////////////////////////////////\n\n    addTodo: builder.mutation({\n      query: async todo => {\n        let projectData = {\n          projectName: todo.projectName,\n          deadLine: todo.deadLine,\n          startingDate: formattedDate\n        };\n        const docRef = await addDoc(collection(db, `users/${localStorage.getItem(\"userId\")}/projects`), projectData);\n        const projectDataWithId = {\n          ...projectData,\n          projectId: docRef.id\n        };\n        const projectDocRef = await doc(db, `users/${localStorage.getItem(\"userId\")}/projects/${docRef.id}`);\n        setDoc(projectDocRef, projectDataWithId);\n      },\n      invalidatesTags: [{\n        type: \"Todos\",\n        id: \"onLoad\"\n      }]\n    }),\n    /////////////////////////////////////////////\n\n    updateTodo: builder.mutation({\n      query: _ref => {\n        let {\n          id,\n          projectName,\n          deadLine,\n          startingDate,\n          createdAt\n        } = _ref;\n        return console.log(\"update work\"), {\n          url: `/${localStorage.getItem(\"userId\")}/projects/${id}?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`,\n          method: \"PATCH\",\n          body: {\n            fields: {\n              projectName: {\n                stringValue: projectName\n              },\n              deadLine: {\n                stringValue: deadLine\n              },\n              startingDate: {\n                stringValue: startingDate\n              },\n              // createdAt: { stringValue: createdAt },\n              projectId: {\n                stringValue: id\n              }\n            }\n          }\n        };\n      },\n      invalidatesTags: [{\n        type: \"Todos\",\n        id: \"onUpdate\"\n      }]\n    }),\n    /////////////////////////////////////////////////\n\n    deleteTodo: builder.mutation({\n      query: id => (\n      // console.log(id),\n      {\n        url: `/${localStorage.getItem(\"userId\")}/projects/${id}?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`,\n        method: \"DELETE\"\n        // body: id,\n      }),\n\n      invalidatesTags: [{\n        type: \"Todos\",\n        id: \"onDetele\"\n      }]\n    })\n  })\n});\nexport const {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation\n} = apiSlice;","map":{"version":3,"names":["initializeApp","firebase","createApi","fetchBaseQuery","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","getDocs","setDoc","collection","addDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","firestore","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","auth","db","googleProvider","setCustomParameters","prompt","signInWithGooglePopup","createUserDocumentFromAuth","userAuth","additionalInformation","arguments","length","undefined","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","error","console","log","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback","user","localStorage","setItem","err","message","removeItem","apiEndpoint","apiSlice","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getTodos","query","getItem","providesTags","type","id","addTodo","mutation","todo","projectData","projectName","deadLine","startingDate","docRef","projectDataWithId","projectDocRef","invalidatesTags","updateTodo","_ref","url","method","body","fields","stringValue","deleteTodo","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation"],"sources":["D:/Coding/React/taskmybusiness/src/utils/firebase/firebase-utils.js"],"sourcesContent":["import { initializeApp, firebase } from \"firebase/app\";\r\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  setDoc,\r\n  collection,\r\n  addDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\r\n  authDomain: \"gotask-973a8.firebaseapp.com\",\r\n  projectId: \"gotask-973a8\",\r\n  storageBucket: \"gotask-973a8.appspot.com\",\r\n  messagingSenderId: \"589835338400\",\r\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\r\n  measurementId: \"G-CS2ZWLEKDP\",\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport const firestore = getFirestore();\r\n////////////////////////////////////////\r\n\r\nconst now = new Date();\r\nconst year = now.getFullYear();\r\nconst month = String(now.getMonth() + 1).padStart(2, \"0\");\r\nconst day = String(now.getDate()).padStart(2, \"0\");\r\n// const hours = String(now.getHours()).padStart(2, \"0\");\r\n// const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n// const seconds = String(now.getSeconds()).padStart(2, \"0\");\r\nconst formattedDate = `${year}-${month}-${day} `;\r\n\r\n//////////////////////////////\r\nexport const auth = getAuth();\r\nexport const db = getFirestore();\r\n/////////////////////////////////\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\n\r\n//////////////////////////////////////////////////\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  if (!userAuth) return;\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalInformation,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return userDocRef;\r\n  }\r\n};\r\n///////////////////////////////////////////////\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\n\r\nonAuthStateChanged(auth, async (user) => {\r\n  if (user) {\r\n    localStorage.setItem(\"userId\", user.uid);\r\n    try {\r\n      // console.log(userId);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  } else {\r\n    // console.log(\"no suer\");\r\n    localStorage.removeItem(\"userId\");\r\n    // console.log(\"no user logged in\");\r\n  }\r\n});\r\n\r\n/////////////////////////////////////////////\r\nconst apiEndpoint =\r\n  \"https://firestore.googleapis.com/v1/projects/gotask-973a8/databases/(default)/documents/users/\";\r\n///////////////////////////////////////////////////////////////////\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: apiEndpoint }),\r\n  tagTypes: [\"Todos\"],\r\n  endpoints: (builder) => ({\r\n    getTodos: builder.query({\r\n      query: () => {\r\n        // console.log(\"get works\", userId);\r\n        return `${localStorage.getItem(\r\n          \"userId\"\r\n        )}/projects?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`;\r\n      },\r\n      // serializeQueryArgs: ({ getTodos }) => {\r\n      //   return getTodos;\r\n      // },\r\n      // staleTime: 500, // disable cachings\r\n      providesTags: [\r\n        { type: \"Todos\", id: \"onDetele\" },\r\n        { type: \"Todos\", id: \"onLoad\" },\r\n        { type: \"Todos\", id: \"onUpdate\" },\r\n      ],\r\n      // merge: (currentCache, newItems) => {\r\n      //   currentCache.push(...newItems);\r\n      //   return currentCache;\r\n      // },\r\n    }),\r\n\r\n    ///////////////////////////////////////////////////////\r\n\r\n    addTodo: builder.mutation({\r\n      query: async (todo) => {\r\n        let projectData = {\r\n          projectName: todo.projectName,\r\n          deadLine: todo.deadLine,\r\n          startingDate: formattedDate,\r\n        };\r\n        const docRef = await addDoc(\r\n          collection(db, `users/${localStorage.getItem(\"userId\")}/projects`),\r\n          projectData\r\n        );\r\n\r\n        const projectDataWithId = {\r\n          ...projectData,\r\n          projectId: docRef.id,\r\n        };\r\n        const projectDocRef = await doc(\r\n          db,\r\n          `users/${localStorage.getItem(\"userId\")}/projects/${docRef.id}`\r\n        );\r\n        setDoc(projectDocRef, projectDataWithId);\r\n      },\r\n      invalidatesTags: [{ type: \"Todos\", id: \"onLoad\" }],\r\n    }),\r\n\r\n    /////////////////////////////////////////////\r\n\r\n    updateTodo: builder.mutation({\r\n      query: ({ id, projectName, deadLine, startingDate, createdAt }) => (\r\n        console.log(\"update work\"),\r\n        {\r\n          url: `/${localStorage.getItem(\r\n            \"userId\"\r\n          )}/projects/${id}?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`,\r\n          method: \"PATCH\",\r\n          body: {\r\n            fields: {\r\n              projectName: { stringValue: projectName },\r\n              deadLine: { stringValue: deadLine },\r\n              startingDate: { stringValue: startingDate },\r\n              // createdAt: { stringValue: createdAt },\r\n              projectId: { stringValue: id },\r\n            },\r\n          },\r\n        }\r\n      ),\r\n      invalidatesTags: [{ type: \"Todos\", id: \"onUpdate\" }],\r\n    }),\r\n\r\n    /////////////////////////////////////////////////\r\n\r\n    deleteTodo: builder.mutation({\r\n      query: (id) =>\r\n        // console.log(id),\r\n        ({\r\n          url: `/${localStorage.getItem(\r\n            \"userId\"\r\n          )}/projects/${id}?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`,\r\n          method: \"DELETE\",\r\n          // body: id,\r\n        }),\r\n      invalidatesTags: [{ type: \"Todos\", id: \"onDetele\" }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetTodosQuery,\r\n  useAddTodoMutation,\r\n  useUpdateTodoMutation,\r\n  useDeleteTodoMutation,\r\n} = apiSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}