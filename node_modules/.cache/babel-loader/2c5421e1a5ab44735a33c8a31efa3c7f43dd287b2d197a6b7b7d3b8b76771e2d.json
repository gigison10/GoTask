{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projectList\\\\projectList.jsx\",\n  _s = $RefreshSig$();\nimport \"./projectList.scss\";\nimport { Fragment, useState, useEffect, useRef, useContext, forwardRef, useImperativeHandle } from \"react\";\nimport { useGetTodosQuery, useDeleteTodoMutation, useUpdateTodoMutation } from \"../../utils/firebase/firebase-utils\";\nimport { UserContext } from \"../../contexts/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectList(props, ref) {\n  _s();\n  const {\n    currentUserId,\n    setCurrentUserId\n  } = useContext(UserContext);\n  const [projectDetails, setProjectDetails] = useState([]);\n  const [currentProject, setCurrentProject] = useState([]);\n  const [editProjectId, setEditProjectId] = useState(null);\n  const projectNameRef = useRef(\"\");\n  //////////////////////////////////\n  const {\n    data: projects,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n    refetch\n  } = useGetTodosQuery(currentUserId, {\n    skip: !currentUserId // Enable the query when userId is truthy\n  });\n\n  const [deleteTodo] = useDeleteTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  /////////////////////////////////////////////\n\n  useEffect(() => {\n    if (currentUserId && projects && isSuccess) {\n      var _projects$documents;\n      // setUserId(currentUserId.uid);\n      const arr = projects === null || projects === void 0 ? void 0 : (_projects$documents = projects.documents) === null || _projects$documents === void 0 ? void 0 : _projects$documents.map(project => {\n        const {\n          deadLine,\n          projectId,\n          projectName,\n          startingDate\n        } = (project === null || project === void 0 ? void 0 : project.fields) || {};\n        return {\n          deadLine: (deadLine === null || deadLine === void 0 ? void 0 : deadLine.stringValue) || \"\",\n          projectId: (projectId === null || projectId === void 0 ? void 0 : projectId.stringValue) || \"\",\n          projectName: (projectName === null || projectName === void 0 ? void 0 : projectName.stringValue) || \"\",\n          startingDate: (startingDate === null || startingDate === void 0 ? void 0 : startingDate.stringValue) || \"\"\n        };\n      });\n      setProjectDetails(arr);\n    }\n    if (!currentUserId) {\n      setProjectDetails([]);\n    }\n  }, [currentUserId, projects]);\n\n  ////refetching after add a new project from parent component///////////\n  function reFetch() {\n    setTimeout(() => {\n      refetch();\n    }, 400);\n  }\n  useImperativeHandle(ref, () => ({\n    reFetch\n  }));\n  ///////////////////////////////////\n\n  // const handleKeyDown = (event) => {\n  //   if (event.key === \"Enter\") {\n  //     handleEditClick(editProjectId);\n  //   }\n  // };\n\n  const editField = data => {\n    if (data.projectId === editProjectId) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputProjectField\",\n        autoFocus: true,\n        type: \"text\",\n        defaultValue: data.projectName,\n        ref: projectNameRef,\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: data.projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this);\n    }\n  };\n  const isEditing = projectId => projectId === editProjectId;\n  const handleEditClick = projectId => {\n    if (isEditing(projectId)) {\n      updateTodo({\n        id: editProjectId,\n        projectName: projectNameRef.current.value,\n        deadLine: currentProject.deadLine,\n        startingDate: currentProject.startingDate\n      }).then(response => {\n        // Handle the success response if needed\n        console.log(response);\n        setEditProjectId(null);\n      }).catch(error => {\n        // Handle the error if needed\n      });\n      reFetch();\n    } else {\n      setEditProjectId(projectId);\n    }\n  };\n\n  ////////////////////////////////\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: projectDetails === null || projectDetails === void 0 ? void 0 : projectDetails.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        type: \"submit\",\n        className: \"checkBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"check\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deteButton\",\n          onClick: () => deleteTodo(data.projectId),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), editField(data), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: data.startingDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: data.deadLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"In progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonField\",\n        value: data.id,\n        onClick: () => {\n          setCurrentProject(data);\n          setEditProjectId(data.projectId);\n          if (isEditing(data.projectId)) {\n            handleEditClick(data.projectId);\n          }\n        },\n        children: isEditing(data.projectId) ? \"Save\" : \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonField\",\n        children: \"Mark as complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, data.projectId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"KsKYrO2Ws0PVei3aVkrsre64YKg=\", false, function () {\n  return [useGetTodosQuery, useDeleteTodoMutation, useUpdateTodoMutation];\n});\n_c = ProjectList;\nexport default _c2 = /*#__PURE__*/forwardRef(ProjectList);\nvar _c, _c2;\n$RefreshReg$(_c, \"ProjectList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Fragment","useState","useEffect","useRef","useContext","forwardRef","useImperativeHandle","useGetTodosQuery","useDeleteTodoMutation","useUpdateTodoMutation","UserContext","jsxDEV","_jsxDEV","ProjectList","props","ref","_s","currentUserId","setCurrentUserId","projectDetails","setProjectDetails","currentProject","setCurrentProject","editProjectId","setEditProjectId","projectNameRef","data","projects","isLoading","isSuccess","isError","error","refetch","skip","deleteTodo","updateTodo","_projects$documents","arr","documents","map","project","deadLine","projectId","projectName","startingDate","fields","stringValue","reFetch","setTimeout","editField","className","autoFocus","type","defaultValue","onKeyDown","handleKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","children","isEditing","handleEditClick","id","current","value","then","response","console","log","catch","onClick","_c","_c2","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projectList/projectList.jsx"],"sourcesContent":["import \"./projectList.scss\";\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useContext,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport {\r\n  useGetTodosQuery,\r\n  useDeleteTodoMutation,\r\n  useUpdateTodoMutation,\r\n} from \"../../utils/firebase/firebase-utils\";\r\nimport { UserContext } from \"../../contexts/context\";\r\n\r\nfunction ProjectList(props, ref) {\r\n  const { currentUserId, setCurrentUserId } = useContext(UserContext);\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n  const [currentProject, setCurrentProject] = useState([]);\r\n  const [editProjectId, setEditProjectId] = useState(null);\r\n  const projectNameRef = useRef(\"\");\r\n  //////////////////////////////////\r\n  const {\r\n    data: projects,\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n    error,\r\n    refetch,\r\n  } = useGetTodosQuery(currentUserId, {\r\n    skip: !currentUserId, // Enable the query when userId is truthy\r\n  });\r\n  const [deleteTodo] = useDeleteTodoMutation();\r\n  const [updateTodo] = useUpdateTodoMutation();\r\n  /////////////////////////////////////////////\r\n\r\n  useEffect(() => {\r\n    if (currentUserId && projects && isSuccess) {\r\n      // setUserId(currentUserId.uid);\r\n      const arr = projects?.documents?.map((project) => {\r\n        const { deadLine, projectId, projectName, startingDate } =\r\n          project?.fields || {};\r\n\r\n        return {\r\n          deadLine: deadLine?.stringValue || \"\",\r\n          projectId: projectId?.stringValue || \"\",\r\n          projectName: projectName?.stringValue || \"\",\r\n          startingDate: startingDate?.stringValue || \"\",\r\n        };\r\n      });\r\n\r\n      setProjectDetails(arr);\r\n    }\r\n    if (!currentUserId) {\r\n      setProjectDetails([]);\r\n    }\r\n  }, [currentUserId, projects]);\r\n\r\n  ////refetching after add a new project from parent component///////////\r\n  function reFetch() {\r\n    setTimeout(() => {\r\n      refetch();\r\n    }, 400);\r\n  }\r\n  useImperativeHandle(ref, () => ({\r\n    reFetch,\r\n  }));\r\n  ///////////////////////////////////\r\n\r\n  // const handleKeyDown = (event) => {\r\n  //   if (event.key === \"Enter\") {\r\n  //     handleEditClick(editProjectId);\r\n  //   }\r\n  // };\r\n\r\n  const editField = (data) => {\r\n    if (data.projectId === editProjectId) {\r\n      return (\r\n        <input\r\n          className=\"inputProjectField\"\r\n          autoFocus\r\n          type=\"text\"\r\n          defaultValue={data.projectName}\r\n          ref={projectNameRef}\r\n          onKeyDown={handleKeyDown}\r\n        />\r\n      );\r\n    } else {\r\n      return <h5>{data.projectName}</h5>;\r\n    }\r\n  };\r\n\r\n  const isEditing = (projectId) => projectId === editProjectId;\r\n\r\n  const handleEditClick = (projectId) => {\r\n    if (isEditing(projectId)) {\r\n      updateTodo({\r\n        id: editProjectId,\r\n        projectName: projectNameRef.current.value,\r\n        deadLine: currentProject.deadLine,\r\n        startingDate: currentProject.startingDate,\r\n      })\r\n        .then((response) => {\r\n          // Handle the success response if needed\r\n          console.log(response);\r\n          setEditProjectId(null);\r\n        })\r\n        .catch((error) => {\r\n          // Handle the error if needed\r\n        });\r\n      reFetch();\r\n    } else {\r\n      setEditProjectId(projectId);\r\n    }\r\n  };\r\n\r\n  ////////////////////////////////\r\n  return (\r\n    <Fragment>\r\n      {projectDetails?.map((data) => (\r\n        <div className=\"project-field\" key={data.projectId}>\r\n          <div type=\"submit\" className=\"checkBlock\">\r\n            <input className=\"check\" type=\"checkbox\" />\r\n            <button\r\n              className=\"deteButton\"\r\n              onClick={() => deleteTodo(data.projectId)}\r\n            >\r\n              delete\r\n            </button>\r\n          </div>\r\n          {editField(data)}\r\n          <h5>{data.startingDate}</h5>\r\n          <h5>{data.deadLine}</h5>\r\n          <h5>In progress</h5>\r\n          <button\r\n            className=\"buttonField\"\r\n            value={data.id}\r\n            onClick={() => {\r\n              setCurrentProject(data);\r\n              setEditProjectId(data.projectId);\r\n              if (isEditing(data.projectId)) {\r\n                handleEditClick(data.projectId);\r\n              }\r\n            }}\r\n          >\r\n            {isEditing(data.projectId) ? \"Save\" : \"Edit\"}\r\n          </button>\r\n          <button className=\"buttonField\">Mark as complete</button>\r\n        </div>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default forwardRef(ProjectList);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}