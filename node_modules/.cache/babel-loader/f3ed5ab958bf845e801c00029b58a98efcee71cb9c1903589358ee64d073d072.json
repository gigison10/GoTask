{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projects-page\\\\project-page.jsx\",\n  _s = $RefreshSig$();\nimport \"./project-page.scss\";\nimport { db } from \"../../utils/firebase/firebase-utils\";\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\nimport { useState, useContext, useEffect } from \"react\";\nimport ProjectAdd from \"../projectAdd-field/project-add\";\nimport ProjectField from \"../projectField/projectField\";\nimport { ProjectsContext, UserContext, updateProjectsContext } from \"../../contexts/context\";\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectPage() {\n  _s();\n  const [projectDetails, setProjectDetails] = useState([]);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [userId, setUserId] = useState(\"\");\n  const {\n    currentProject\n  } = useContext(ProjectsContext);\n  const {\n    setUpdateCurrentProjects\n  } = useContext(updateProjectsContext);\n  // const [projectId, setProjectId] = useState(\"\");\n\n  let [rerender, setRerender] = useState(1);\n  async function deleteProject(e) {\n    console.log(e);\n    try {\n      // Construct the document reference using the project ID or document reference\n      const projectDocRef = typeof projectId === \"string\" ? doc(collectionRef, projectId) : projectId;\n\n      // Delete the document\n      await deleteDoc(projectDocRef);\n      console.log(\"Project deleted successfully\");\n    } catch (error) {\n      console.error(\"Error deleting project:\", error);\n    }\n  }\n  useEffect(() => {\n    userCheck();\n  }, [currentUser, rerender]);\n  function userCheck() {\n    if (currentUser) {\n      setTimeout(() => {\n        getProjects();\n        setUserId(currentUser.uid);\n      }, \"1500\");\n    } else {\n      setProjectDetails([]);\n      return;\n    }\n  }\n  function getProjects() {\n    setProjectDetails(currentProject.map(e => ({\n      projectId: e.projectId,\n      projectName: e.projectName,\n      startingDate: e.startingDate,\n      deadLine: e.deadLine\n    })));\n    setCurrentUser(currentUser);\n  }\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\n    const createProject = async () => {\n      try {\n        let projectData = {\n          projectName: inputProjectDetails.projectName,\n          startingDate: inputProjectDetails.startingDate,\n          deadLine: inputProjectDetails.deadLine\n        };\n\n        // Add the project data to the \"projects\" collection in Firestore\n\n        const docRef = await addDoc(collection(db, `users/${userId}/projects`), projectData);\n        const projectDataWithId = {\n          ...projectData,\n          projectId: docRef.id\n        };\n        const projectDocRef = doc(db, `users/${userId}/projects/${docRef.id}`);\n        setTimeout(() => {\n          setDoc(projectDocRef, projectDataWithId);\n        }, 100);\n\n        // setProjectId(docRef.id);\n        setUpdateCurrentProjects(docRef.id);\n        setRerender(rerender + 1);\n\n        // console.log(\"Project ID:\", docRef.id);\n      } catch (error) {\n        console.error(\"Error creating project:\", error);\n      }\n    };\n    createProject();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectAdd, {\n      onSaveProjectDetails: onSaveProjectDetailsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectField, {\n      projectDetails: projectDetails,\n      deleteProject: deleteProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectPage, \"eEtLrK735s/eunxy1sICcCK5/A0=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["db","collection","addDoc","deleteDoc","doc","setDoc","useState","useContext","useEffect","ProjectAdd","ProjectField","ProjectsContext","UserContext","updateProjectsContext","getValue","jsxDEV","_jsxDEV","ProjectPage","_s","projectDetails","setProjectDetails","currentUser","setCurrentUser","userId","setUserId","currentProject","setUpdateCurrentProjects","rerender","setRerender","deleteProject","e","console","log","projectDocRef","projectId","collectionRef","error","userCheck","setTimeout","getProjects","uid","map","projectName","startingDate","deadLine","onSaveProjectDetailsHandler","inputProjectDetails","createProject","projectData","docRef","projectDataWithId","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveProjectDetails","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projects-page/project-page.jsx"],"sourcesContent":["import \"./project-page.scss\";\r\nimport { db } from \"../../utils/firebase/firebase-utils\";\r\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\r\n\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport ProjectAdd from \"../projectAdd-field/project-add\";\r\nimport ProjectField from \"../projectField/projectField\";\r\nimport {\r\n  ProjectsContext,\r\n  UserContext,\r\n  updateProjectsContext,\r\n} from \"../../contexts/context\";\r\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\r\n\r\nfunction ProjectPage() {\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n  const { currentUser, setCurrentUser } = useContext(UserContext);\r\n  const [userId, setUserId] = useState(\"\");\r\n  const { currentProject } = useContext(ProjectsContext);\r\n  const { setUpdateCurrentProjects } = useContext(updateProjectsContext);\r\n  // const [projectId, setProjectId] = useState(\"\");\r\n\r\n  let [rerender, setRerender] = useState(1);\r\n\r\n  async function deleteProject(e) {\r\n    console.log(e);\r\n    try {\r\n      // Construct the document reference using the project ID or document reference\r\n      const projectDocRef =\r\n        typeof projectId === \"string\"\r\n          ? doc(collectionRef, projectId)\r\n          : projectId;\r\n\r\n      // Delete the document\r\n      await deleteDoc(projectDocRef);\r\n\r\n      console.log(\"Project deleted successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting project:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    userCheck();\r\n  }, [currentUser, rerender]);\r\n\r\n  function userCheck() {\r\n    if (currentUser) {\r\n      setTimeout(() => {\r\n        getProjects();\r\n        setUserId(currentUser.uid);\r\n      }, \"1500\");\r\n    } else {\r\n      setProjectDetails([]);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function getProjects() {\r\n    setProjectDetails(\r\n      currentProject.map((e) => ({\r\n        projectId: e.projectId,\r\n        projectName: e.projectName,\r\n        startingDate: e.startingDate,\r\n        deadLine: e.deadLine,\r\n      }))\r\n    );\r\n    setCurrentUser(currentUser);\r\n  }\r\n\r\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\r\n    const createProject = async () => {\r\n      try {\r\n        let projectData = {\r\n          projectName: inputProjectDetails.projectName,\r\n          startingDate: inputProjectDetails.startingDate,\r\n          deadLine: inputProjectDetails.deadLine,\r\n        };\r\n\r\n        // Add the project data to the \"projects\" collection in Firestore\r\n\r\n        const docRef = await addDoc(\r\n          collection(db, `users/${userId}/projects`),\r\n          projectData\r\n        );\r\n\r\n        const projectDataWithId = {\r\n          ...projectData,\r\n          projectId: docRef.id,\r\n        };\r\n        const projectDocRef = doc(db, `users/${userId}/projects/${docRef.id}`);\r\n        setTimeout(() => {\r\n          setDoc(projectDocRef, projectDataWithId);\r\n        }, 100);\r\n\r\n        // setProjectId(docRef.id);\r\n        setUpdateCurrentProjects(docRef.id);\r\n        setRerender(rerender + 1);\r\n\r\n        // console.log(\"Project ID:\", docRef.id);\r\n      } catch (error) {\r\n        console.error(\"Error creating project:\", error);\r\n      }\r\n    };\r\n    createProject();\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-container\">\r\n      <div className=\"project-menu\">\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>something</div>\r\n        {/* <div className=\"button\">Add project</div> */}\r\n      </div>\r\n      <ProjectAdd onSaveProjectDetails={onSaveProjectDetailsHandler} />\r\n      <ProjectField\r\n        projectDetails={projectDetails}\r\n        deleteProject={deleteProject}\r\n      />\r\n      {/* <button onClick={createProject}>Create Project</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}