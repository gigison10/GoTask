{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\utils\\\\firebase\\\\firebase-utils.js\",\n  _s = $RefreshSig$();\nimport { initializeApp, firebase } from \"firebase/app\";\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport default FirebaseUtils;\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, getDocs, setDoc, collection, addDoc } from \"firebase/firestore\";\nimport { UserContext } from \"../../contexts/context\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirebaseUtils = () => {\n  _s();\n  const {\n    currentUserId,\n    setCurrentUserId\n  } = useContext(UserContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n_s(FirebaseUtils, \"NyGu5NS46ilXmg5NxNoHkgo9lBU=\");\n_c = FirebaseUtils;\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\n  authDomain: \"gotask-973a8.firebaseapp.com\",\n  projectId: \"gotask-973a8\",\n  storageBucket: \"gotask-973a8.appspot.com\",\n  messagingSenderId: \"589835338400\",\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\n  measurementId: \"G-CS2ZWLEKDP\"\n};\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nexport const firestore = getFirestore();\n//////////////////\nconst now = new Date();\nconst year = now.getFullYear();\nconst month = String(now.getMonth() + 1).padStart(2, \"0\");\nconst day = String(now.getDate()).padStart(2, \"0\");\nconst hours = String(now.getHours()).padStart(2, \"0\");\nconst minutes = String(now.getMinutes()).padStart(2, \"0\");\nconst seconds = String(now.getSeconds()).padStart(2, \"0\");\nconst formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n\n///////////////////////////////////////////////\n\n/////////////////////////////////////////////////\nexport const auth = getAuth();\nexport const db = getFirestore();\nlet userId = \"\";\n\n/////////////////////\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\n\n// console.log(auth);\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\n// console.log(auth);\n\n//////////////////////////////////////////////////\n\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  // console.log(userSnapshot);\n  // console.log(userSnapshot.exists());\n\n  // user data does not exists\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log(error);\n    }\n    return userDocRef;\n  }\n};\n\n///////////////////////////////////////////////\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);\n\n// const currentUserId = users.auth().currentUser.uid;\n// console.log(currentUserId);\n\n///////////// projects import export  ///////////////////\nexport let projects = [];\nonAuthStateChanged(auth, async user => {\n  if (user) {\n    userId = user.uid;\n    try {\n      // console.log(userId);\n    } catch (err) {\n      console.log(err.message);\n    }\n  } else {\n    projects = [];\n    // console.log(\"no user logged in\");\n  }\n});\n\n//////////////////////////////////\n\nconst apiEndpoint = \"https://firestore.googleapis.com/v1/projects/gotask-973a8/databases/(default)/documents/users/\";\nexport const apiSlice = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: apiEndpoint\n  }),\n  tagTypes: [\"Todos\"],\n  endpoints: builder => ({\n    getTodos: builder.query({\n      query: () => {\n        console.log(\"get works\", userId);\n        return `/${userId}/projects?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`;\n      },\n      // serializeQueryArgs: ({ getTodos }) => {\n      //   return getTodos;\n      // },\n\n      providesTags: [{\n        type: \"Todos\",\n        id: \"onDetele\"\n      }, {\n        type: \"Todos\",\n        id: \"onLoad\"\n      }]\n      // merge: (currentCache, newItems) => {\n      //   currentCache.push(...newItems);\n      //   return currentCache;\n      // },\n    }),\n\n    ///////////////////////////////////////////////////////\n\n    ///////////////////////\n    addTodo: builder.mutation({\n      query: async todo => {\n        let projectData = {\n          projectName: todo.projectName,\n          deadLine: todo.deadLine,\n          startingDate: todo.startingDate,\n          createdAt: formattedDate\n        };\n        const docRef = await addDoc(collection(db, `users/${userId}/projects`), projectData);\n        const projectDataWithId = {\n          ...projectData,\n          projectId: docRef.id\n        };\n        const projectDocRef = await doc(db, `users/${userId}/projects/${docRef.id}`);\n        setDoc(projectDocRef, projectDataWithId);\n      },\n      invalidatesTags: [{\n        type: \"Todos\",\n        id: \"onLoad\"\n      }]\n    }),\n    /////////////////////////////////////////////\n    updateTodo: builder.mutation({\n      query: todo => ({\n        url: `/todos/${todo.id}`,\n        method: \"PATCH\",\n        body: todo\n      }),\n      invalidatesTags: [\"Todos\"]\n    }),\n    deleteTodo: builder.mutation({\n      query: id => (\n      // console.log(id),\n      {\n        url: `/${userId}/projects/${id}?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`,\n        method: \"DELETE\"\n        // body: id,\n      }),\n\n      invalidatesTags: [{\n        type: \"Todos\",\n        id: \"onDetele\"\n      }]\n    })\n  })\n});\nexport const {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation\n} = apiSlice;\nvar _c;\n$RefreshReg$(_c, \"FirebaseUtils\");","map":{"version":3,"names":["initializeApp","firebase","createApi","fetchBaseQuery","FirebaseUtils","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","getDocs","setDoc","collection","addDoc","UserContext","useContext","jsxDEV","_jsxDEV","_s","currentUserId","setCurrentUserId","fileName","_jsxFileName","lineNumber","columnNumber","_c","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","firestore","now","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","formattedDate","auth","db","userId","googleProvider","setCustomParameters","prompt","signInWithGooglePopup","createUserDocumentFromAuth","userAuth","additionalInformation","arguments","length","undefined","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","error","console","log","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback","projects","user","err","message","apiEndpoint","apiSlice","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getTodos","query","providesTags","type","id","addTodo","mutation","todo","projectData","projectName","deadLine","startingDate","docRef","projectDataWithId","projectDocRef","invalidatesTags","updateTodo","url","method","body","deleteTodo","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/utils/firebase/firebase-utils.js"],"sourcesContent":["import { initializeApp, firebase } from \"firebase/app\";\r\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nexport default FirebaseUtils;\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  setDoc,\r\n  collection,\r\n  addDoc,\r\n} from \"firebase/firestore\";\r\n\r\nimport { UserContext } from \"../../contexts/context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst FirebaseUtils = () => {\r\n  const { currentUserId, setCurrentUserId } = useContext(UserContext);\r\n  return <div></div>;\r\n};\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\r\n  authDomain: \"gotask-973a8.firebaseapp.com\",\r\n  projectId: \"gotask-973a8\",\r\n  storageBucket: \"gotask-973a8.appspot.com\",\r\n  messagingSenderId: \"589835338400\",\r\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\r\n  measurementId: \"G-CS2ZWLEKDP\",\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nexport const firestore = getFirestore();\r\n//////////////////\r\nconst now = new Date();\r\nconst year = now.getFullYear();\r\nconst month = String(now.getMonth() + 1).padStart(2, \"0\");\r\nconst day = String(now.getDate()).padStart(2, \"0\");\r\nconst hours = String(now.getHours()).padStart(2, \"0\");\r\nconst minutes = String(now.getMinutes()).padStart(2, \"0\");\r\nconst seconds = String(now.getSeconds()).padStart(2, \"0\");\r\nconst formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n\r\n///////////////////////////////////////////////\r\n\r\n/////////////////////////////////////////////////\r\nexport const auth = getAuth();\r\nexport const db = getFirestore();\r\nlet userId = \"\";\r\n\r\n/////////////////////\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\n// console.log(auth);\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\n// console.log(auth);\r\n\r\n//////////////////////////////////////////////////\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  if (!userAuth) return;\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n  // console.log(userSnapshot);\r\n  // console.log(userSnapshot.exists());\r\n\r\n  // user data does not exists\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalInformation,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return userDocRef;\r\n  }\r\n};\r\n\r\n///////////////////////////////////////////////\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\n\r\n// const currentUserId = users.auth().currentUser.uid;\r\n// console.log(currentUserId);\r\n\r\n///////////// projects import export  ///////////////////\r\nexport let projects = [];\r\n\r\nonAuthStateChanged(auth, async (user) => {\r\n  if (user) {\r\n    userId = user.uid;\r\n\r\n    try {\r\n      // console.log(userId);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  } else {\r\n    projects = [];\r\n    // console.log(\"no user logged in\");\r\n  }\r\n});\r\n\r\n//////////////////////////////////\r\n\r\nconst apiEndpoint =\r\n  \"https://firestore.googleapis.com/v1/projects/gotask-973a8/databases/(default)/documents/users/\";\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: apiEndpoint }),\r\n  tagTypes: [\"Todos\"],\r\n  endpoints: (builder) => ({\r\n    getTodos: builder.query({\r\n      query: () => {\r\n        console.log(\"get works\", userId);\r\n        return `/${userId}/projects?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`;\r\n      },\r\n      // serializeQueryArgs: ({ getTodos }) => {\r\n      //   return getTodos;\r\n      // },\r\n\r\n      providesTags: [\r\n        { type: \"Todos\", id: \"onDetele\" },\r\n        { type: \"Todos\", id: \"onLoad\" },\r\n      ],\r\n      // merge: (currentCache, newItems) => {\r\n      //   currentCache.push(...newItems);\r\n      //   return currentCache;\r\n      // },\r\n    }),\r\n\r\n    ///////////////////////////////////////////////////////\r\n\r\n    ///////////////////////\r\n    addTodo: builder.mutation({\r\n      query: async (todo) => {\r\n        let projectData = {\r\n          projectName: todo.projectName,\r\n          deadLine: todo.deadLine,\r\n          startingDate: todo.startingDate,\r\n          createdAt: formattedDate,\r\n        };\r\n        const docRef = await addDoc(\r\n          collection(db, `users/${userId}/projects`),\r\n          projectData\r\n        );\r\n\r\n        const projectDataWithId = {\r\n          ...projectData,\r\n          projectId: docRef.id,\r\n        };\r\n        const projectDocRef = await doc(\r\n          db,\r\n          `users/${userId}/projects/${docRef.id}`\r\n        );\r\n        setDoc(projectDocRef, projectDataWithId);\r\n      },\r\n      invalidatesTags: [{ type: \"Todos\", id: \"onLoad\" }],\r\n    }),\r\n\r\n    /////////////////////////////////////////////\r\n    updateTodo: builder.mutation({\r\n      query: (todo) => ({\r\n        url: `/todos/${todo.id}`,\r\n        method: \"PATCH\",\r\n        body: todo,\r\n      }),\r\n      invalidatesTags: [\"Todos\"],\r\n    }),\r\n\r\n    deleteTodo: builder.mutation({\r\n      query: (id) =>\r\n        // console.log(id),\r\n        ({\r\n          url: `/${userId}/projects/${id}?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`,\r\n          method: \"DELETE\",\r\n          // body: id,\r\n        }),\r\n      invalidatesTags: [{ type: \"Todos\", id: \"onDetele\" }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetTodosQuery,\r\n  useAddTodoMutation,\r\n  useUpdateTodoMutation,\r\n  useDeleteTodoMutation,\r\n} = apiSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}