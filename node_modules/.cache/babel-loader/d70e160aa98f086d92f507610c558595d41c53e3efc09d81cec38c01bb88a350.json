{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\n  authDomain: \"gotask-973a8.firebaseapp.com\",\n  projectId: \"gotask-973a8\",\n  storageBucket: \"gotask-973a8.appspot.com\",\n  messagingSenderId: \"589835338400\",\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\n  measurementId: \"G-CS2ZWLEKDP\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(firebaseApp);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  // user data does not exists\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      if (error.code === \"\") console.log(error);\n    }\n    return userDocRef;\n  }\n\n  //if user data exists\n\n  //return\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAnalytics","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","analytics","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","additionalInformation","arguments","length","undefined","userDocRef","uid","userSnapshot","console","log","exists","displayName","email","createdAt","Date","error","code","createAuthUserWithEmailAndPassword","password"],"sources":["D:/Coding/React/taskmybusiness/src/utils/firebase/firebase-utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport { getFirestore, doc, getDoc, setDoc } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\r\n  authDomain: \"gotask-973a8.firebaseapp.com\",\r\n  projectId: \"gotask-973a8\",\r\n  storageBucket: \"gotask-973a8.appspot.com\",\r\n  messagingSenderId: \"589835338400\",\r\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\r\n  measurementId: \"G-CS2ZWLEKDP\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(firebaseApp);\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\n\r\nexport const db = getFirestore();\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  if (!userAuth) return;\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n  console.log(userSnapshot);\r\n  console.log(userSnapshot.exists());\r\n\r\n  // user data does not exists\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalInformation,\r\n      });\r\n    } catch (error) {\r\n      if (error.code === \"\") console.log(error);\r\n    }\r\n    return userDocRef;\r\n  }\r\n\r\n  //if user data exists\r\n\r\n  //return\r\n};\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,SACEC,OAAO,EACPC,eAAe,EACfC,kBAAkB,EAClBC,8BAA8B,QACzB,eAAe;AACtB,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAEtE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,8BAA8B;EAC1CC,SAAS,EAAE,cAAc;EACzBC,aAAa,EAAE,0BAA0B;EACzCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGlB,aAAa,CAACU,cAAc,CAAC;AACjD,MAAMS,SAAS,GAAGlB,YAAY,CAACiB,WAAW,CAAC;AAE3C,MAAME,cAAc,GAAG,IAAIhB,kBAAkB,CAAC,CAAC;AAC/CgB,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGrB,OAAO,CAAC,CAAC;AAC7B,OAAO,MAAMsB,qBAAqB,GAAGA,CAAA,KACnCrB,eAAe,CAACoB,IAAI,EAAEH,cAAc,CAAC;AAEvC,OAAO,MAAMK,EAAE,GAAGnB,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMoB,0BAA0B,GAAG,eAAAA,CACxCC,QAAQ,EAEL;EAAA,IADHC,qBAAqB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE1B,IAAI,CAACF,QAAQ,EAAE;EACf,MAAMK,UAAU,GAAGzB,GAAG,CAACkB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACM,GAAG,CAAC;EACjD,MAAMC,YAAY,GAAG,MAAM1B,MAAM,CAACwB,UAAU,CAAC;EAC7CG,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;EACzBC,OAAO,CAACC,GAAG,CAACF,YAAY,CAACG,MAAM,CAAC,CAAC,CAAC;;EAElC;EACA,IAAI,CAACH,YAAY,CAACG,MAAM,CAAC,CAAC,EAAE;IAC1B,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGZ,QAAQ;IAEvC,MAAMa,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAI;MACF,MAAMhC,MAAM,CAACuB,UAAU,EAAE;QACvBM,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGZ;MACL,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOc,KAAK,EAAE;MACd,IAAIA,KAAK,CAACC,IAAI,KAAK,EAAE,EAAER,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IAC3C;IACA,OAAOV,UAAU;EACnB;;EAEA;;EAEA;AACF,CAAC;;AAED,OAAO,MAAMY,kCAAkC,GAAG,MAAAA,CAAOL,KAAK,EAAEM,QAAQ,KAAK;EAC3E,IAAI,CAACN,KAAK,IAAI,CAACM,QAAQ,EAAE;EACzB,OAAO,MAAMxC,8BAA8B,CAACkB,IAAI,EAAEgB,KAAK,EAAEM,QAAQ,CAAC;AACpE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}