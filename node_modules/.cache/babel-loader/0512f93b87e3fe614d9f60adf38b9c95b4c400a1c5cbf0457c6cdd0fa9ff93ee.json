{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projects-page\\\\project-page.jsx\",\n  _s = $RefreshSig$();\nimport \"./project-page.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectPage() {\n  _s();\n  const projectList = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Project name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"stage in working or completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Dead line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Mark as completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n  const [name, setName] = useState(\"\");\n  const newProjectList = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"project-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project name\",\n      onChange: event => {\n        console.log(event.target.value);\n        setName(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"In Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Dead line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      placeholder: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n  let [project, setProject] = useState(projectList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Add new project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        onClick: () => {\n          setProject(newProjectList);\n        },\n        children: \"Add project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), project]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectPage, \"hyrjOW6hpWoSqgpW7igShTrv1gA=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ProjectPage","_s","projectList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","setName","newProjectList","type","placeholder","onChange","event","console","log","target","value","project","setProject","onClick","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projects-page/project-page.jsx"],"sourcesContent":["import \"./project-page.css\";\r\nimport { useState } from \"react\";\r\n\r\nfunction ProjectPage() {\r\n  const projectList = (\r\n    <div className=\"project-list\">\r\n      <h5>Project name</h5>\r\n      <h5>Date</h5>\r\n      <h5>stage in working or completed</h5>\r\n      <h5>Dead line</h5>\r\n      <h5>Mark as completed</h5>\r\n    </div>\r\n  );\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const newProjectList = (\r\n    <form className=\"project-list\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project name\"\r\n        onChange={(event) => {\r\n          console.log(event.target.value);\r\n          setName(event.target.value);\r\n        }}\r\n      ></input>\r\n      <input type=\"text\" placeholder=\"Date\"></input>\r\n      <input type=\"text\" placeholder=\"In Progress\"></input>\r\n      <input type=\"text\" placeholder=\"Dead line\"></input>\r\n      <button type=\"submit\" placeholder=\"submit\"></button>\r\n    </form>\r\n  );\r\n\r\n  let [project, setProject] = useState(projectList);\r\n\r\n  return (\r\n    <div className=\"project-container\">\r\n      <div className=\"project-menu\">\r\n        <div>sort by</div>\r\n        <div>Add new project</div>\r\n        <div\r\n          className=\"button\"\r\n          onClick={() => {\r\n            setProject(newProjectList);\r\n          }}\r\n        >\r\n          Add project\r\n        </div>\r\n      </div>\r\n      {project}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}