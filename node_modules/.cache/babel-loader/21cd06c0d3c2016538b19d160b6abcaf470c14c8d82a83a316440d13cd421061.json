{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\contexts\\\\context.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChangedListener, createUserDocumentFromAuth, onAuthStateChanged, auth, db, collection } from \"../utils/firebase/firebase-utils.js\";\n//as the actual value that i want to acces\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\nlet userId = \"\";\nexport let projects = [];\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userId = user.uid;\n    const userDocRef = doc(db, \"users\", userId);\n    const projectsRef = collection(userDocRef, \"projects\");\n    getDocs(projectsRef).then(snapshot => {\n      snapshot.docs.forEach(doc => {\n        projects.push({\n          ...doc.data()\n        });\n      });\n    }).catch(err => {\n      console.log(err.message);\n    });\n  } else {\n    console.log(\"no user log in\");\n  }\n});\nconsole.log(projects);\nexport const UserProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      // console.log(user);\n      if (user) {\n        createUserDocumentFromAuth(user);\n      }\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n_s(UserProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","onAuthStateChangedListener","createUserDocumentFromAuth","onAuthStateChanged","auth","db","collection","jsxDEV","_jsxDEV","UserContext","currentUser","setCurrentUser","userId","projects","user","uid","userDocRef","doc","projectsRef","getDocs","then","snapshot","docs","forEach","push","data","catch","err","console","log","message","UserProvider","_ref","_s","children","value","unsubscribe","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/contexts/context.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport {\r\n  onAuthStateChangedListener,\r\n  createUserDocumentFromAuth,\r\n  onAuthStateChanged,\r\n  auth,\r\n  db,\r\n  collection,\r\n} from \"../utils/firebase/firebase-utils.js\";\r\n//as the actual value that i want to acces\r\n\r\nexport const UserContext = createContext({\r\n  currentUser: null,\r\n  setCurrentUser: () => null,\r\n});\r\n\r\nlet userId = \"\";\r\nexport let projects = [];\r\nonAuthStateChanged(auth, (user) => {\r\n  if (user) {\r\n    userId = user.uid;\r\n    const userDocRef = doc(db, \"users\", userId);\r\n    const projectsRef = collection(userDocRef, \"projects\");\r\n    getDocs(projectsRef)\r\n      .then((snapshot) => {\r\n        snapshot.docs.forEach((doc) => {\r\n          projects.push({\r\n            ...doc.data(),\r\n          });\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n  } else {\r\n    console.log(\"no user log in\");\r\n  }\r\n});\r\nconsole.log(projects);\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const value = { currentUser, setCurrentUser };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChangedListener((user) => {\r\n      // console.log(user);\r\n      if (user) {\r\n        createUserDocumentFromAuth(user);\r\n      }\r\n      setCurrentUser(user);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SACEC,0BAA0B,EAC1BC,0BAA0B,EAC1BC,kBAAkB,EAClBC,IAAI,EACJC,EAAE,EACFC,UAAU,QACL,qCAAqC;AAC5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,WAAW,gBAAGX,aAAa,CAAC;EACvCY,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAEA,CAAA,KAAM;AACxB,CAAC,CAAC;AAEF,IAAIC,MAAM,GAAG,EAAE;AACf,OAAO,IAAIC,QAAQ,GAAG,EAAE;AACxBV,kBAAkB,CAACC,IAAI,EAAGU,IAAI,IAAK;EACjC,IAAIA,IAAI,EAAE;IACRF,MAAM,GAAGE,IAAI,CAACC,GAAG;IACjB,MAAMC,UAAU,GAAGC,GAAG,CAACZ,EAAE,EAAE,OAAO,EAAEO,MAAM,CAAC;IAC3C,MAAMM,WAAW,GAAGZ,UAAU,CAACU,UAAU,EAAE,UAAU,CAAC;IACtDG,OAAO,CAACD,WAAW,CAAC,CACjBE,IAAI,CAAEC,QAAQ,IAAK;MAClBA,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAEN,GAAG,IAAK;QAC7BJ,QAAQ,CAACW,IAAI,CAAC;UACZ,GAAGP,GAAG,CAACQ,IAAI,CAAC;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC,MAAM;IACLF,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC/B;AACF,CAAC,CAAC;AACFD,OAAO,CAACC,GAAG,CAAChB,QAAQ,CAAC;AAErB,OAAO,MAAMkB,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACtB,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMoC,KAAK,GAAG;IAAEzB,WAAW;IAAEC;EAAe,CAAC;EAE7CX,SAAS,CAAC,MAAM;IACd,MAAMoC,WAAW,GAAGnC,0BAA0B,CAAEa,IAAI,IAAK;MACvD;MACA,IAAIA,IAAI,EAAE;QACRZ,0BAA0B,CAACY,IAAI,CAAC;MAClC;MACAH,cAAc,CAACG,IAAI,CAAC;IACtB,CAAC,CAAC;IAEF,OAAOsB,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO5B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAD,QAAA,EAAEA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACR,EAAA,CAjBWF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}