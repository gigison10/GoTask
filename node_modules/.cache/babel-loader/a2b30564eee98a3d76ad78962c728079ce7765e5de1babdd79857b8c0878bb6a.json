{"ast":null,"code":"import { inRange } from './utils';\nimport Indexes from './encoding-indexes';\n\n//\n// 6. Indexes\n//\n\n/**\n * @param {number} pointer The |pointer| to search for.\n * @param {(!Array.<?number>|undefined)} index The |index| to search within.\n * @return {?number} The code point corresponding to |pointer| in |index|,\n *     or null if |code point| is not in |index|.\n */\nexport function indexCodePointFor(pointer, i) {\n  if (!i) return null;\n  return i[pointer] || null;\n}\n\n/**\n * @param {number} code_point The |code point| to search for.\n * @param {!Array.<?number>} i The |index| to search within.\n * @return {?number} The first pointer corresponding to |code point| in\n *     |index|, or null if |code point| is not in |index|.\n */\nexport function indexPointerFor(code_point, i) {\n  var pointer = i.indexOf(code_point);\n  return pointer === -1 ? null : pointer;\n}\n\n/**\n * @param {string} name Name of the index.\n */\nexport default function index(name) {\n  return Indexes[name];\n}\n\n/**\n * @param {number} pointer The |pointer| to search for in the gb18030 index.\n * @return The code point corresponding to |pointer| in |index|,\n *     or null if |code point| is not in the gb18030 index.\n */\nexport function indexGB18030RangesCodePointFor(pointer) {\n  // 1. If pointer is greater than 39419 and less than 189000, or\n  // pointer is greater than 1237575, return null.\n  if (pointer > 39419 && pointer < 189000 || pointer > 1237575) return null;\n\n  // 2. If pointer is 7457, return code point U+E7C7.\n  if (pointer === 7457) return 0xE7C7;\n\n  // 3. Let offset be the last pointer in index gb18030 ranges that\n  // is equal to or less than pointer and let code point offset be\n  // its corresponding code point.\n  var offset = 0;\n  var code_point_offset = 0;\n  var idx = index('gb18030-ranges');\n  var i;\n  for (i = 0; i < idx.length; ++i) {\n    /** @type {!Array.<number>} */\n    var entry = idx[i];\n    if (entry[0] <= pointer) {\n      offset = entry[0];\n      code_point_offset = entry[1];\n    } else {\n      break;\n    }\n  }\n\n  // 4. Return a code point whose value is code point offset +\n  // pointer − offset.\n  return code_point_offset + pointer - offset;\n}\n\n/**\n * @param {number} code_point The |code point| to locate in the gb18030 index.\n * @return {number} The first pointer corresponding to |code point| in the\n *     gb18030 index.\n */\nexport function indexGB18030RangesPointerFor(code_point) {\n  // 1. If code point is U+E7C7, return pointer 7457.\n  if (code_point === 0xE7C7) return 7457;\n\n  // 2. Let offset be the last code point in index gb18030 ranges\n  // that is equal to or less than code point and let pointer offset\n  // be its corresponding pointer.\n  var offset = 0;\n  var pointer_offset = 0;\n  var idx = index('gb18030-ranges');\n  var i;\n  for (i = 0; i < idx.length; ++i) {\n    /** @type {!Array.<number>} */\n    var entry = idx[i];\n    if (entry[1] <= code_point) {\n      offset = entry[1];\n      pointer_offset = entry[0];\n    } else {\n      break;\n    }\n  }\n\n  // 3. Return a pointer whose value is pointer offset + code point\n  // − offset.\n  return pointer_offset + code_point - offset;\n}\n\n/**\n * @param {number} code_point The |code_point| to search for in the Shift_JIS\n *     index.\n * @return {?number} The code point corresponding to |pointer| in |index|,\n *     or null if |code point| is not in the Shift_JIS index.\n */\nexport function indexShiftJISPointerFor(code_point) {\n  // 1. Let index be index jis0208 excluding all entries whose\n  // pointer is in the range 8272 to 8835, inclusive.\n  shift_jis_index = shift_jis_index || index('jis0208').map((cp, pointer) => {\n    return inRange(pointer, 8272, 8835) ? null : cp;\n  });\n  const index_ = shift_jis_index;\n\n  // 2. Return the index pointer for code point in index.\n  return index_.indexOf(code_point);\n}\nvar shift_jis_index;\n\n/**\n * @param {number} code_point The |code_point| to search for in the big5\n *     index.\n * @return {?number} The code point corresponding to |pointer| in |index|,\n *     or null if |code point| is not in the big5 index.\n */\nexport function indexBig5PointerFor(code_point) {\n  // 1. Let index be index Big5 excluding all entries whose pointer\n  big5_index_no_hkscs = big5_index_no_hkscs || index('big5').map((cp, pointer) => {\n    return pointer < (0xA1 - 0x81) * 157 ? null : cp;\n  });\n  var index_ = big5_index_no_hkscs;\n\n  // 2. If code point is U+2550, U+255E, U+2561, U+256A, U+5341, or\n  // U+5345, return the last pointer corresponding to code point in\n  // index.\n  if (code_point === 0x2550 || code_point === 0x255E || code_point === 0x2561 || code_point === 0x256A || code_point === 0x5341 || code_point === 0x5345) {\n    return index_.lastIndexOf(code_point);\n  }\n\n  // 3. Return the index pointer for code point in index.\n  return indexPointerFor(code_point, index_);\n}\nvar big5_index_no_hkscs;","map":{"version":3,"names":["inRange","Indexes","indexCodePointFor","pointer","i","indexPointerFor","code_point","indexOf","index","name","indexGB18030RangesCodePointFor","offset","code_point_offset","idx","length","entry","indexGB18030RangesPointerFor","pointer_offset","indexShiftJISPointerFor","shift_jis_index","map","cp","index_","indexBig5PointerFor","big5_index_no_hkscs","lastIndexOf"],"sources":["D:/Coding/React/taskmybusiness/node_modules/text-decoding/src/indexes.js"],"sourcesContent":["import { inRange } from './utils'\nimport Indexes from './encoding-indexes'\n\n//\n// 6. Indexes\n//\n\n/**\n * @param {number} pointer The |pointer| to search for.\n * @param {(!Array.<?number>|undefined)} index The |index| to search within.\n * @return {?number} The code point corresponding to |pointer| in |index|,\n *     or null if |code point| is not in |index|.\n */\nexport function indexCodePointFor(pointer, i) {\n  if (!i) return null\n  return i[pointer] || null\n}\n\n/**\n * @param {number} code_point The |code point| to search for.\n * @param {!Array.<?number>} i The |index| to search within.\n * @return {?number} The first pointer corresponding to |code point| in\n *     |index|, or null if |code point| is not in |index|.\n */\nexport function indexPointerFor(code_point, i) {\n  var pointer = i.indexOf(code_point)\n  return pointer === -1 ? null : pointer\n}\n\n/**\n * @param {string} name Name of the index.\n */\nexport default function index(name) {\n  return Indexes[name]\n}\n\n/**\n * @param {number} pointer The |pointer| to search for in the gb18030 index.\n * @return The code point corresponding to |pointer| in |index|,\n *     or null if |code point| is not in the gb18030 index.\n */\nexport function indexGB18030RangesCodePointFor(pointer) {\n  // 1. If pointer is greater than 39419 and less than 189000, or\n  // pointer is greater than 1237575, return null.\n  if ((pointer > 39419 && pointer < 189000) || (pointer > 1237575))\n    return null\n\n  // 2. If pointer is 7457, return code point U+E7C7.\n  if (pointer === 7457) return 0xE7C7\n\n  // 3. Let offset be the last pointer in index gb18030 ranges that\n  // is equal to or less than pointer and let code point offset be\n  // its corresponding code point.\n  var offset = 0\n  var code_point_offset = 0\n  var idx = index('gb18030-ranges')\n  var i\n  for (i = 0; i < idx.length; ++i) {\n    /** @type {!Array.<number>} */\n    var entry = idx[i]\n    if (entry[0] <= pointer) {\n      offset = entry[0]\n      code_point_offset = entry[1]\n    } else {\n      break\n    }\n  }\n\n  // 4. Return a code point whose value is code point offset +\n  // pointer − offset.\n  return code_point_offset + pointer - offset\n}\n\n/**\n * @param {number} code_point The |code point| to locate in the gb18030 index.\n * @return {number} The first pointer corresponding to |code point| in the\n *     gb18030 index.\n */\nexport function indexGB18030RangesPointerFor(code_point) {\n  // 1. If code point is U+E7C7, return pointer 7457.\n  if (code_point === 0xE7C7) return 7457\n\n  // 2. Let offset be the last code point in index gb18030 ranges\n  // that is equal to or less than code point and let pointer offset\n  // be its corresponding pointer.\n  var offset = 0\n  var pointer_offset = 0\n  var idx = index('gb18030-ranges')\n  var i\n  for (i = 0; i < idx.length; ++i) {\n    /** @type {!Array.<number>} */\n    var entry = idx[i]\n    if (entry[1] <= code_point) {\n      offset = entry[1]\n      pointer_offset = entry[0]\n    } else {\n      break\n    }\n  }\n\n  // 3. Return a pointer whose value is pointer offset + code point\n  // − offset.\n  return pointer_offset + code_point - offset\n}\n\n/**\n * @param {number} code_point The |code_point| to search for in the Shift_JIS\n *     index.\n * @return {?number} The code point corresponding to |pointer| in |index|,\n *     or null if |code point| is not in the Shift_JIS index.\n */\nexport function indexShiftJISPointerFor(code_point) {\n  // 1. Let index be index jis0208 excluding all entries whose\n  // pointer is in the range 8272 to 8835, inclusive.\n  shift_jis_index = shift_jis_index ||\n    index('jis0208').map((cp, pointer) => {\n      return inRange(pointer, 8272, 8835) ? null : cp\n    })\n  const index_ = shift_jis_index\n\n  // 2. Return the index pointer for code point in index.\n  return index_.indexOf(code_point)\n}\nvar shift_jis_index\n\n/**\n * @param {number} code_point The |code_point| to search for in the big5\n *     index.\n * @return {?number} The code point corresponding to |pointer| in |index|,\n *     or null if |code point| is not in the big5 index.\n */\nexport function indexBig5PointerFor(code_point) {\n  // 1. Let index be index Big5 excluding all entries whose pointer\n  big5_index_no_hkscs = big5_index_no_hkscs ||\n    index('big5').map((cp, pointer) => {\n      return (pointer < (0xA1 - 0x81) * 157) ? null : cp\n    })\n  var index_ = big5_index_no_hkscs\n\n  // 2. If code point is U+2550, U+255E, U+2561, U+256A, U+5341, or\n  // U+5345, return the last pointer corresponding to code point in\n  // index.\n  if (code_point === 0x2550 || code_point === 0x255E ||\n      code_point === 0x2561 || code_point === 0x256A ||\n      code_point === 0x5341 || code_point === 0x5345) {\n    return index_.lastIndexOf(code_point)\n  }\n\n  // 3. Return the index pointer for code point in index.\n  return indexPointerFor(code_point, index_)\n}\n\nvar big5_index_no_hkscs"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}