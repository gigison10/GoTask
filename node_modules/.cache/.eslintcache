[{"D:\\Coding\\React\\taskmybusiness\\src\\index.js":"1","D:\\Coding\\React\\taskmybusiness\\src\\App.js":"2","D:\\Coding\\React\\taskmybusiness\\src\\reportWebVitals.js":"3","D:\\Coding\\React\\taskmybusiness\\src\\contexts\\context.js":"4","D:\\Coding\\React\\taskmybusiness\\src\\utils\\firebase\\firebase-utils.js":"5","D:\\Coding\\React\\taskmybusiness\\src\\routes\\home\\home.jsx":"6","D:\\Coding\\React\\taskmybusiness\\src\\components\\header\\header.jsx":"7","D:\\Coding\\React\\taskmybusiness\\src\\components\\footer\\footer.jsx":"8","D:\\Coding\\React\\taskmybusiness\\src\\components\\side-menu-content\\side-menu-content.jsx":"9","D:\\Coding\\React\\taskmybusiness\\src\\components\\side-menu\\side-menu.jsx":"10","D:\\Coding\\React\\taskmybusiness\\src\\assets\\icons.jsx":"11","D:\\Coding\\React\\taskmybusiness\\src\\components\\log-in\\log-in.jsx":"12","D:\\Coding\\React\\taskmybusiness\\src\\components\\sign-up\\sign-up.jsx":"13","D:\\Coding\\React\\taskmybusiness\\src\\components\\projects-page\\project-page.jsx":"14","D:\\Coding\\React\\taskmybusiness\\src\\components\\projectList\\projectList.jsx":"15","D:\\Coding\\React\\taskmybusiness\\src\\components\\projectAdd\\project-add.jsx":"16"},{"size":938,"mtime":1688390507891,"results":"17","hashOfConfig":"18"},{"size":217,"mtime":1683809024037,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1683022030418,"results":"20","hashOfConfig":"18"},{"size":915,"mtime":1688651033988,"results":"21","hashOfConfig":"18"},{"size":6084,"mtime":1688739450314,"results":"22","hashOfConfig":"18"},{"size":529,"mtime":1683732767765,"results":"23","hashOfConfig":"18"},{"size":1470,"mtime":1688572966504,"results":"24","hashOfConfig":"18"},{"size":159,"mtime":1683220099613,"results":"25","hashOfConfig":"18"},{"size":253,"mtime":1683220022968,"results":"26","hashOfConfig":"18"},{"size":702,"mtime":1683733920966,"results":"27","hashOfConfig":"18"},{"size":3788,"mtime":1683634526808,"results":"28","hashOfConfig":"18"},{"size":3218,"mtime":1684949192406,"results":"29","hashOfConfig":"18"},{"size":4303,"mtime":1684949231155,"results":"30","hashOfConfig":"18"},{"size":405,"mtime":1688648973969,"results":"31","hashOfConfig":"18"},{"size":4713,"mtime":1688744503672,"results":"32","hashOfConfig":"18"},{"size":3198,"mtime":1688736898644,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"f0btc8",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"37"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"D:\\Coding\\React\\taskmybusiness\\src\\index.js",[],[],[],"D:\\Coding\\React\\taskmybusiness\\src\\App.js",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\reportWebVitals.js",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\contexts\\context.js",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\utils\\firebase\\firebase-utils.js",["87","88","89","90"],[],"import { initializeApp, firebase } from \"firebase/app\";\r\nimport { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  setDoc,\r\n  collection,\r\n  addDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\r\n  authDomain: \"gotask-973a8.firebaseapp.com\",\r\n  projectId: \"gotask-973a8\",\r\n  storageBucket: \"gotask-973a8.appspot.com\",\r\n  messagingSenderId: \"589835338400\",\r\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\r\n  measurementId: \"G-CS2ZWLEKDP\",\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport const firestore = getFirestore();\r\n\r\n//////////////////////////////\r\nexport const auth = getAuth();\r\nexport const db = getFirestore();\r\n/////////////////////////////////\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\n\r\n//////////////////////////////////////////////////\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  if (!userAuth) return;\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalInformation,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return userDocRef;\r\n  }\r\n};\r\n///////////////////////////////////////////////\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\n\r\nonAuthStateChanged(auth, async (user) => {\r\n  if (user) {\r\n    localStorage.setItem(\"userId\", user.uid);\r\n    try {\r\n      // console.log(userId);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  } else {\r\n    // console.log(\"no suer\");\r\n    localStorage.removeItem(\"userId\");\r\n    // console.log(\"no user logged in\");\r\n  }\r\n});\r\n\r\n/////////////////////////////////////////////\r\nconst apiEndpoint =\r\n  \"https://firestore.googleapis.com/v1/projects/gotask-973a8/databases/(default)/documents/users/\";\r\n///////////////////////////////////////////////////////////////////\r\n\r\nexport const apiSlice = createApi({\r\n  reducerPath: \"api\",\r\n  baseQuery: fetchBaseQuery({ baseUrl: apiEndpoint }),\r\n  tagTypes: [\"Todos\"],\r\n  endpoints: (builder) => ({\r\n    getTodos: builder.query({\r\n      query: () => {\r\n        // console.log(\"get works\", userId);\r\n        return `${localStorage.getItem(\r\n          \"userId\"\r\n        )}/projects?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`;\r\n      },\r\n      // serializeQueryArgs: ({ getTodos }) => {\r\n      //   return getTodos;\r\n      // },\r\n      // staleTime: 500, // disable cachings\r\n      providesTags: [\r\n        { type: \"Todos\", id: \"onDetele\" },\r\n        { type: \"Todos\", id: \"onLoad\" },\r\n        { type: \"Todos\", id: \"onUpdate\" },\r\n      ],\r\n      // merge: (currentCache, newItems) => {\r\n      //   currentCache.push(...newItems);\r\n      //   return currentCache;\r\n      // },\r\n    }),\r\n\r\n    ///////////////////////////////////////////////////////\r\n\r\n    addTodo: builder.mutation({\r\n      query: async (todo) => {\r\n        let projectData = {\r\n          projectName: todo.projectName,\r\n          deadLine: todo.deadLine,\r\n          startingDate: todo.startingDate,\r\n        };\r\n        const docRef = await addDoc(\r\n          collection(db, `users/${localStorage.getItem(\"userId\")}/projects`),\r\n          projectData\r\n        );\r\n\r\n        const projectDataWithId = {\r\n          ...projectData,\r\n          projectId: docRef.id,\r\n        };\r\n        const projectDocRef = await doc(\r\n          db,\r\n          `users/${localStorage.getItem(\"userId\")}/projects/${docRef.id}`\r\n        );\r\n        setDoc(projectDocRef, projectDataWithId);\r\n      },\r\n      invalidatesTags: [{ type: \"Todos\", id: \"onLoad\" }],\r\n    }),\r\n\r\n    /////////////////////////////////////////////\r\n\r\n    updateTodo: builder.mutation({\r\n      query: ({ id, projectName, deadLine, startingDate }) => (\r\n        console.log(\"update work\"),\r\n        {\r\n          url: `/${localStorage.getItem(\r\n            \"userId\"\r\n          )}/projects/${id}?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`,\r\n          method: \"PATCH\",\r\n          body: {\r\n            fields: {\r\n              projectName: { stringValue: projectName },\r\n              deadLine: { stringValue: deadLine },\r\n              startingDate: { stringValue: startingDate },\r\n              projectId: { stringValue: id },\r\n            },\r\n          },\r\n        }\r\n      ),\r\n      invalidatesTags: [{ type: \"Todos\", id: \"onUpdate\" }],\r\n    }),\r\n\r\n    /////////////////////////////////////////////////\r\n\r\n    deleteTodo: builder.mutation({\r\n      query: (id) =>\r\n        // console.log(id),\r\n        ({\r\n          url: `/${localStorage.getItem(\r\n            \"userId\"\r\n          )}/projects/${id}?key=AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00`,\r\n          method: \"DELETE\",\r\n          // body: id,\r\n        }),\r\n      invalidatesTags: [{ type: \"Todos\", id: \"onDetele\" }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetTodosQuery,\r\n  useAddTodoMutation,\r\n  useUpdateTodoMutation,\r\n  useDeleteTodoMutation,\r\n} = apiSlice;\r\n","D:\\Coding\\React\\taskmybusiness\\src\\routes\\home\\home.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\header\\header.jsx",["91"],[],"import \"./header.scss\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport LogIn from \"../log-in/log-in\";\r\nimport SignUp from \"../sign-up/sign-up\";\r\nimport { UserContext } from \"../../contexts/context\";\r\nimport { signOutUser } from \"../../utils/firebase/firebase-utils\";\r\n\r\nfunction Header() {\r\n  const today = new Date();\r\n  const options = { month: \"long\", day: \"numeric\", year: \"numeric\" };\r\n  const formattedDate = today.toLocaleDateString(\"en-US\", options);\r\n  const { currentUserId } = useContext(UserContext);\r\n\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (currentUserId) {\r\n      setUserEmail(currentUserId.email);\r\n    } else {\r\n      setUserEmail(\"\");\r\n    }\r\n  }, [currentUserId]);\r\n\r\n  return (\r\n    <header>\r\n      <div>\r\n        <img className=\"logo\" src={require(\"../../assets/Logo.png\")} />\r\n      </div>\r\n      <div>Today : {formattedDate}</div>\r\n      <div>\r\n        <input type=\"input\" placeholder=\"search\" />\r\n      </div>\r\n      <div>Messages</div>\r\n      <div className=\"signInLogInContainer\">\r\n        {currentUserId ? (\r\n          <>\r\n            <div className=\"email\">{userEmail}</div>\r\n            <div className=\"log-button\" type=\"submit\" onClick={signOutUser}>\r\n              Sign Out\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <LogIn />\r\n            <SignUp />\r\n          </>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Coding\\React\\taskmybusiness\\src\\components\\footer\\footer.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\side-menu-content\\side-menu-content.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\side-menu\\side-menu.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\assets\\icons.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\log-in\\log-in.jsx",["92","93"],[],"import \"./log-in.scss\";\r\nimport {\r\n  signInWithGooglePopup,\r\n  signInAuthUserWithEmailAndPassword,\r\n} from \"../../utils/firebase/firebase-utils\";\r\n\r\nimport { useState, useEffect, useRef, Fragment } from \"react\";\r\nimport { X } from \"../../assets/icons.jsx\";\r\n\r\nconst defaultFormFields = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nfunction LogIn() {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { email, password } = formFields;\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormFields({ ...formFields, [name]: value });\r\n  }\r\n\r\n  //~~~ Log In Forms ///\r\n  const logGoogleUser = async (event) => {\r\n    popup();\r\n    await signInWithGooglePopup();\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { user } = await signInAuthUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      resetFormFields();\r\n    } catch (error) {}\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////\r\n  const [showHide, setShowHide] = useState(\"hide\");\r\n  let popupRef = useRef();\r\n  useEffect(() => {\r\n    let handler = (e) => {\r\n      // console.log(popupRef.current.contains(e.target));\r\n      if (!popupRef.current.contains(e.target)) {\r\n        setShowHide(\"hide\");\r\n        resetFormFields();\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handler);\r\n    };\r\n  });\r\n\r\n  function popup() {\r\n    if (showHide === \"hide\") {\r\n      setShowHide(\"show\");\r\n    } else {\r\n      setShowHide(\"hide\");\r\n      resetFormFields();\r\n    }\r\n  }\r\n  ///////////////////////////////////////////////////\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"log-button\" onClick={popup}>\r\n        Log-in\r\n      </div>\r\n\r\n      <div className={`${showHide}`}>\r\n        <div className=\"popup\" ref={popupRef}>\r\n          <div onClick={popup}>\r\n            <X></X>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <h1>Log in</h1>\r\n            <div className=\"inputBlock\">\r\n              <label>Email address</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={handleChange}\r\n                name=\"email\"\r\n                value={email}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                value={password}\r\n              ></input>\r\n            </div>\r\n\r\n            <button className=\"submitbutton\" type=\"submit\">\r\n              SUBMIT\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"googleAuthButton\">\r\n            <img\r\n              className=\"googleIcon\"\r\n              src={require(\"../../assets/googleIcon.png\")}\r\n            />\r\n            <h3 onClick={logGoogleUser}>Or continue with Google</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","D:\\Coding\\React\\taskmybusiness\\src\\components\\sign-up\\sign-up.jsx",["94"],[],"import \"./sign-up.scss\";\r\nimport { X } from \"../../assets/icons.jsx\";\r\nimport { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  createAuthUserWithEmailAndPassword,\r\n  createUserDocumentFromAuth,\r\n} from \"../../utils/firebase/firebase-utils\";\r\n\r\nconst defaultFormFields = {\r\n  fullName: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nfunction SignUp() {\r\n  const [showHide, setShowHide] = useState(\"hide\");\r\n  const [signUp, setSignUp] = useState(\"Sign-up\");\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { fullName, email, phone, password, confirmPassword } = formFields;\r\n\r\n  // form imputs reset ////////\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  //       Sign in         ////////\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert(\"incorect confirm password\");\r\n      return;\r\n    }\r\n    try {\r\n      const { user } = await createAuthUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      await createUserDocumentFromAuth(user, { fullName });\r\n      resetFormFields();\r\n    } catch (error) {\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n        alert(\"email already exists\");\r\n      } else {\r\n        console.log(\"user creation gives an error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormFields({ ...formFields, [name]: value });\r\n  }\r\n\r\n  ////////////popup window////////////////////////////\r\n  let popupRef = useRef();\r\n  useEffect(() => {\r\n    let handler = (e) => {\r\n      // console.log(popupRef.current.contains(e.target));\r\n      if (!popupRef.current.contains(e.target)) {\r\n        setShowHide(\"hide\");\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handler);\r\n    };\r\n  });\r\n\r\n  function popup() {\r\n    if (showHide === \"hide\") {\r\n      setShowHide(\"show\");\r\n    } else {\r\n      setShowHide(\"hide\");\r\n    }\r\n  }\r\n  ////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"log-button\" onClick={popup}>\r\n        {signUp}\r\n      </div>\r\n      <div className={`${showHide}`}>\r\n        <div className=\"popup\" ref={popupRef}>\r\n          <div onClick={popup}>\r\n            <X></X>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <h1>I don't have an account</h1>\r\n            <h5>Sign up with your email and password</h5>\r\n            <div className=\"inputBlock\">\r\n              <label>First and Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={handleChange}\r\n                name=\"fullName\"\r\n                value={fullName}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"email\"\r\n                onChange={handleChange}\r\n                name=\"email\"\r\n                value={email}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Phone</label>\r\n              <input\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                name=\"phone\"\r\n                value={phone}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                value={password}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                name=\"confirmPassword\"\r\n                value={confirmPassword}\r\n              ></input>\r\n            </div>\r\n            <button className=\"submitbutton\" type=\"submit\" onClick={popup}>\r\n              SUBMIT\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default SignUp;\r\n","D:\\Coding\\React\\taskmybusiness\\src\\components\\projects-page\\project-page.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\projectList\\projectList.jsx",["95","96","97","98","99","100"],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\projectAdd\\project-add.jsx",[],[],{"ruleId":"101","severity":1,"message":"102","line":1,"column":25,"nodeType":"103","messageId":"104","endLine":1,"endColumn":33},{"ruleId":"101","severity":1,"message":"105","line":18,"column":3,"nodeType":"103","messageId":"104","endLine":18,"endColumn":10},{"ruleId":"101","severity":1,"message":"106","line":34,"column":7,"nodeType":"103","messageId":"104","endLine":34,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":170,"column":35,"nodeType":"109","messageId":"110","endLine":170,"endColumn":36},{"ruleId":"111","severity":1,"message":"112","line":27,"column":9,"nodeType":"113","endLine":27,"endColumn":72},{"ruleId":"101","severity":1,"message":"114","line":36,"column":15,"nodeType":"103","messageId":"104","endLine":36,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":110,"column":13,"nodeType":"113","endLine":113,"endColumn":15},{"ruleId":"101","severity":1,"message":"115","line":19,"column":18,"nodeType":"103","messageId":"104","endLine":19,"endColumn":27},{"ruleId":"101","severity":1,"message":"116","line":19,"column":26,"nodeType":"103","messageId":"104","endLine":19,"endColumn":42},{"ruleId":"101","severity":1,"message":"117","line":21,"column":10,"nodeType":"103","messageId":"104","endLine":21,"endColumn":24},{"ruleId":"101","severity":1,"message":"118","line":29,"column":5,"nodeType":"103","messageId":"104","endLine":29,"endColumn":14},{"ruleId":"101","severity":1,"message":"119","line":31,"column":5,"nodeType":"103","messageId":"104","endLine":31,"endColumn":12},{"ruleId":"101","severity":1,"message":"120","line":32,"column":5,"nodeType":"103","messageId":"104","endLine":32,"endColumn":10},{"ruleId":"121","severity":1,"message":"122","line":61,"column":6,"nodeType":"123","endLine":61,"endColumn":31,"suggestions":"124"},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'getDocs' is defined but never used.","'firebaseApp' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","'setSignUp' is assigned a value but never used.","'setCurrentUserId' is assigned a value but never used.","'currentProject' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isSuccess'. Either include it or remove the dependency array.","ArrayExpression",["125"],{"desc":"126","fix":"127"},"Update the dependencies array to be: [currentUserId, isSuccess, projects]",{"range":"128","text":"129"},[1815,1840],"[currentUserId, isSuccess, projects]"]