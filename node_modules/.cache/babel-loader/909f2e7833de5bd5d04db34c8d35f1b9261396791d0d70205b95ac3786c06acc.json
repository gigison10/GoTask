{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projects-page\\\\project-page.jsx\",\n  _s = $RefreshSig$();\nimport \"./project-page.scss\";\nimport { db } from \"../../utils/firebase/firebase-utils\";\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\nimport { useState, useContext, useEffect } from \"react\";\nimport ProjectAdd from \"../projectAdd-field/project-add\";\nimport ProjectField from \"../projectField/projectField\";\nimport { ProjectsContext, UserContext, updateProjectsContext } from \"../../contexts/context\";\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectPage() {\n  _s();\n  const [projectDetails, setProjectDetails] = useState([]);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [userId, setUserId] = useState(\"\");\n  const {\n    currentProject\n  } = useContext(ProjectsContext);\n  const {\n    setUpdateCurrentProjects\n  } = useContext(updateProjectsContext);\n  const [projectId, setProjectId] = useState(\"\");\n  let [rerender, setRerender] = useState(1);\n  async function deleteProject() {\n    console.log(currentProject);\n  }\n  useEffect(() => {\n    userCheck();\n  }, [currentUser, rerender]);\n  function userCheck() {\n    if (currentUser) {\n      setTimeout(() => {\n        getProjects();\n        setUserId(currentUser.uid);\n      }, \"1500\");\n    } else {\n      setProjectDetails([]);\n      return;\n    }\n  }\n  function getProjects() {\n    setProjectDetails(currentProject.map(e => ({\n      id: e.id,\n      name: e.projectName,\n      date: e.startingDate,\n      deadLine: e.deadLine\n    })));\n    setCurrentUser(currentUser);\n  }\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\n    const createProject = async () => {\n      try {\n        let projectData = {\n          projectName: inputProjectDetails.projectName,\n          startingDate: inputProjectDetails.startingDate,\n          deadLine: inputProjectDetails.deadLine\n        };\n\n        // Add the project data to the \"projects\" collection in Firestore\n        console.log(\"before await\");\n        const docRef = await addDoc(collection(db, `users/${userId}/projects`), projectData);\n        setTimeout(() => {\n          console.log(\"after 1 second\");\n        }, 1000);\n        console.log(\"after await\");\n        const projectDataWithId = {\n          ...projectData,\n          projectId: projectId\n        };\n        setProjectId(docRef.id);\n        const projectDocRef = doc(db, `users/${userId}/projects/${projectId}`);\n        await setDoc(projectDocRef, projectDataWithId);\n\n        // const projectDataWithId = {\n        //   projectID: docRef.id,\n        // };\n\n        // const docRefId = await addDoc(\n        //   collection(db, `users/${userId}/projects`),\n        //   projectDataWithId\n        // );\n\n        setUpdateCurrentProjects(docRef.id);\n        setRerender(rerender + 1);\n\n        // console.log(projectId);\n\n        // console.log(\"Project ID:\", docRef.id);\n      } catch (error) {\n        console.error(\"Error creating project:\", error);\n      }\n    };\n    createProject();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectAdd, {\n      onSaveProjectDetails: onSaveProjectDetailsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectField, {\n      projectDetails: projectDetails,\n      deleteProject: deleteProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectPage, \"J9TmFVuLDjbPtDEBkMMAMYBrtew=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["db","collection","addDoc","deleteDoc","doc","setDoc","useState","useContext","useEffect","ProjectAdd","ProjectField","ProjectsContext","UserContext","updateProjectsContext","getValue","jsxDEV","_jsxDEV","ProjectPage","_s","projectDetails","setProjectDetails","currentUser","setCurrentUser","userId","setUserId","currentProject","setUpdateCurrentProjects","projectId","setProjectId","rerender","setRerender","deleteProject","console","log","userCheck","setTimeout","getProjects","uid","map","e","id","name","projectName","date","startingDate","deadLine","onSaveProjectDetailsHandler","inputProjectDetails","createProject","projectData","docRef","projectDataWithId","projectDocRef","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveProjectDetails","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projects-page/project-page.jsx"],"sourcesContent":["import \"./project-page.scss\";\r\nimport { db } from \"../../utils/firebase/firebase-utils\";\r\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\r\n\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport ProjectAdd from \"../projectAdd-field/project-add\";\r\nimport ProjectField from \"../projectField/projectField\";\r\nimport {\r\n  ProjectsContext,\r\n  UserContext,\r\n  updateProjectsContext,\r\n} from \"../../contexts/context\";\r\nimport { getValue } from \"@testing-library/user-event/dist/utils\";\r\n\r\nfunction ProjectPage() {\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n  const { currentUser, setCurrentUser } = useContext(UserContext);\r\n  const [userId, setUserId] = useState(\"\");\r\n  const { currentProject } = useContext(ProjectsContext);\r\n  const { setUpdateCurrentProjects } = useContext(updateProjectsContext);\r\n  const [projectId, setProjectId] = useState(\"\");\r\n\r\n  let [rerender, setRerender] = useState(1);\r\n\r\n  async function deleteProject() {\r\n    console.log(currentProject);\r\n  }\r\n\r\n  useEffect(() => {\r\n    userCheck();\r\n  }, [currentUser, rerender]);\r\n\r\n  function userCheck() {\r\n    if (currentUser) {\r\n      setTimeout(() => {\r\n        getProjects();\r\n        setUserId(currentUser.uid);\r\n      }, \"1500\");\r\n    } else {\r\n      setProjectDetails([]);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function getProjects() {\r\n    setProjectDetails(\r\n      currentProject.map((e) => ({\r\n        id: e.id,\r\n        name: e.projectName,\r\n        date: e.startingDate,\r\n        deadLine: e.deadLine,\r\n      }))\r\n    );\r\n    setCurrentUser(currentUser);\r\n  }\r\n\r\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\r\n    const createProject = async () => {\r\n      try {\r\n        let projectData = {\r\n          projectName: inputProjectDetails.projectName,\r\n          startingDate: inputProjectDetails.startingDate,\r\n          deadLine: inputProjectDetails.deadLine,\r\n        };\r\n\r\n        // Add the project data to the \"projects\" collection in Firestore\r\n        console.log(\"before await\");\r\n\r\n        const docRef = await addDoc(\r\n          collection(db, `users/${userId}/projects`),\r\n          projectData\r\n        );\r\n\r\n        setTimeout(() => {\r\n          console.log(\"after 1 second\");\r\n        }, 1000);\r\n\r\n        console.log(\"after await\");\r\n        const projectDataWithId = {\r\n          ...projectData,\r\n          projectId: projectId,\r\n        };\r\n        setProjectId(docRef.id);\r\n\r\n        const projectDocRef = doc(db, `users/${userId}/projects/${projectId}`);\r\n        await setDoc(projectDocRef, projectDataWithId);\r\n\r\n        // const projectDataWithId = {\r\n        //   projectID: docRef.id,\r\n        // };\r\n\r\n        // const docRefId = await addDoc(\r\n        //   collection(db, `users/${userId}/projects`),\r\n        //   projectDataWithId\r\n        // );\r\n\r\n        setUpdateCurrentProjects(docRef.id);\r\n        setRerender(rerender + 1);\r\n\r\n        // console.log(projectId);\r\n\r\n        // console.log(\"Project ID:\", docRef.id);\r\n      } catch (error) {\r\n        console.error(\"Error creating project:\", error);\r\n      }\r\n    };\r\n    createProject();\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-container\">\r\n      <div className=\"project-menu\">\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>something</div>\r\n        {/* <div className=\"button\">Add project</div> */}\r\n      </div>\r\n      <ProjectAdd onSaveProjectDetails={onSaveProjectDetailsHandler} />\r\n      <ProjectField\r\n        projectDetails={projectDetails}\r\n        deleteProject={deleteProject}\r\n      />\r\n      {/* <button onClick={createProject}>Create Project</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}