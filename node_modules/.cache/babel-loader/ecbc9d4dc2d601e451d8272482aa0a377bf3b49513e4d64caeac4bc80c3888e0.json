{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projectList\\\\projectList.jsx\",\n  _s = $RefreshSig$();\nimport \"./projectList.scss\";\nimport { Fragment, useState, useEffect, useRef, useContext } from \"react\";\nimport { useGetTodosQuery, useDeleteTodoMutation, useUpdateTodoMutation } from \"../../utils/firebase/firebase-utils\";\nimport { UserContext } from \"../../contexts/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectList(props) {\n  _s();\n  // const { projectDetails } = props;\n  const {\n    currentUserId,\n    setCurrentUserId\n  } = useContext(UserContext);\n  const [projectDetails, setProjectDetails] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [editProjectId, setEditProjectId] = useState(null);\n  const [editAndSave, setEditAndSave] = useState(\"Edit\");\n  const projectNameRef = useRef(\"\");\n  const [deleteTodo] = useDeleteTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  ///////////////////////////////////////////\n  const {\n    data: projects,\n    isLoading,\n    isSuccess,\n    isError,\n    error,\n    refetch\n    // refetch,\n  } = useGetTodosQuery(currentUserId, {\n    skip: !currentUserId // Enable the query when userId is truthy\n  });\n  ///////////////////////////////\n  const editField = data => {\n    if (data.projectId === editProjectId) {\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputProjectField\",\n        type: \"text\",\n        defaultValue: data.projectName,\n        id: data.projectId\n        // ref={projectNameRef}\n        ,\n        onChange: () => updateTodo({\n          ...projectDetails,\n          completed: !projectDetails.completed\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: data.projectName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  // const handleEditProject = async (projectId) => {\n  //   if (editProjectId === projectId) {\n  //     // Update the project in Firebase\n  //     await updateTodo({\n  //       id: projectId, // Use the project ID for updating\n  //       projectName: projectNameRef.current.value,\n  //     }).unwrap();\n\n  //     // setEditAndSave(\"Edit\");\n  //     // setEditProjectId(\"\");\n  //   } else {\n  //     // Start editing\n  //     // setEditAndSave(\"Save\");\n  //     // setEditProjectId(projectId);\n  //   }\n  // };\n\n  const isEditing = projectId => projectId === editProjectId;\n  const handleEditClick = projectId => {\n    if (isEditing(projectId)) {\n      // Save the changes\n      setEditProjectId(null);\n    } else {\n      // Enable editing for the clicked project\n      setEditProjectId(projectId);\n    }\n  };\n  useEffect(() => {\n    if (editProjectId === null) {\n      setEditAndSave(\"Edit\");\n    } else {\n      setEditAndSave(\"Save\");\n    }\n  }, [editProjectId]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: projectDetails === null || projectDetails === void 0 ? void 0 : projectDetails.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        type: \"submit\",\n        onClick: () => deleteTodo(data.projectId),\n        className: \"checkBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"check\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deteButton\",\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), editField(data), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: data.startingDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: data.deadLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"In progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonField\",\n        value: data.id,\n        onClick: () => {\n          setEditProjectId(data.projectId);\n          handleEditClick(data.projectId);\n          // handleEditProject(data.projectId);\n          // setEdit((prevState) => !prevState);\n        },\n        children: isEditing(data.projectId) ? \"Save\" : \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonField\",\n        children: \"Mark as complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, data.projectId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"9RMKZoVeomPWhD0uEovgXOATOug=\", false, function () {\n  return [useDeleteTodoMutation, useUpdateTodoMutation, useGetTodosQuery];\n});\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["Fragment","useState","useEffect","useRef","useContext","useGetTodosQuery","useDeleteTodoMutation","useUpdateTodoMutation","UserContext","jsxDEV","_jsxDEV","ProjectList","props","_s","currentUserId","setCurrentUserId","projectDetails","setProjectDetails","edit","setEdit","editProjectId","setEditProjectId","editAndSave","setEditAndSave","projectNameRef","deleteTodo","updateTodo","data","projects","isLoading","isSuccess","isError","error","refetch","skip","editField","projectId","className","type","defaultValue","projectName","id","onChange","completed","fileName","_jsxFileName","lineNumber","columnNumber","children","isEditing","handleEditClick","map","onClick","startingDate","deadLine","value","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projectList/projectList.jsx"],"sourcesContent":["import \"./projectList.scss\";\r\nimport { Fragment, useState, useEffect, useRef, useContext } from \"react\";\r\nimport {\r\n  useGetTodosQuery,\r\n  useDeleteTodoMutation,\r\n  useUpdateTodoMutation,\r\n} from \"../../utils/firebase/firebase-utils\";\r\nimport { UserContext } from \"../../contexts/context\";\r\n\r\nfunction ProjectList(props) {\r\n  // const { projectDetails } = props;\r\n  const { currentUserId, setCurrentUserId } = useContext(UserContext);\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n\r\n  const [edit, setEdit] = useState(false);\r\n  const [editProjectId, setEditProjectId] = useState(null);\r\n  const [editAndSave, setEditAndSave] = useState(\"Edit\");\r\n  const projectNameRef = useRef(\"\");\r\n  const [deleteTodo] = useDeleteTodoMutation();\r\n  const [updateTodo] = useUpdateTodoMutation();\r\n  ///////////////////////////////////////////\r\n  const {\r\n    data: projects,\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n    error,\r\n    refetch,\r\n    // refetch,\r\n  } = useGetTodosQuery(currentUserId, {\r\n    skip: !currentUserId, // Enable the query when userId is truthy\r\n  });\r\n  ///////////////////////////////\r\n  const editField = (data) => {\r\n    if (data.projectId === editProjectId) {\r\n      return (\r\n        <input\r\n          className=\"inputProjectField\"\r\n          type=\"text\"\r\n          defaultValue={data.projectName}\r\n          id={data.projectId}\r\n          // ref={projectNameRef}\r\n          onChange={() =>\r\n            updateTodo({\r\n              ...projectDetails,\r\n              completed: !projectDetails.completed,\r\n            })\r\n          }\r\n        />\r\n      );\r\n    } else {\r\n      return <h5>{data.projectName}</h5>;\r\n    }\r\n  };\r\n\r\n  // const handleEditProject = async (projectId) => {\r\n  //   if (editProjectId === projectId) {\r\n  //     // Update the project in Firebase\r\n  //     await updateTodo({\r\n  //       id: projectId, // Use the project ID for updating\r\n  //       projectName: projectNameRef.current.value,\r\n  //     }).unwrap();\r\n\r\n  //     // setEditAndSave(\"Edit\");\r\n  //     // setEditProjectId(\"\");\r\n  //   } else {\r\n  //     // Start editing\r\n  //     // setEditAndSave(\"Save\");\r\n  //     // setEditProjectId(projectId);\r\n  //   }\r\n  // };\r\n\r\n  const isEditing = (projectId) => projectId === editProjectId;\r\n\r\n  const handleEditClick = (projectId) => {\r\n    if (isEditing(projectId)) {\r\n      // Save the changes\r\n      setEditProjectId(null);\r\n    } else {\r\n      // Enable editing for the clicked project\r\n      setEditProjectId(projectId);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (editProjectId === null) {\r\n      setEditAndSave(\"Edit\");\r\n    } else {\r\n      setEditAndSave(\"Save\");\r\n    }\r\n  }, [editProjectId]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {projectDetails?.map((data) => (\r\n        <div className=\"project-field\" key={data.projectId}>\r\n          <div\r\n            type=\"submit\"\r\n            onClick={() => deleteTodo(data.projectId)}\r\n            className=\"checkBlock\"\r\n          >\r\n            <input className=\"check\" type=\"checkbox\" />\r\n            <button className=\"deteButton\">delete</button>\r\n          </div>\r\n          {editField(data)}\r\n          {/* <h5>{data.projectName}</h5> */}\r\n          <h5>{data.startingDate}</h5>\r\n          <h5>{data.deadLine}</h5>\r\n          <h5>In progress</h5>\r\n          <button\r\n            className=\"buttonField\"\r\n            value={data.id}\r\n            onClick={() => {\r\n              setEditProjectId(data.projectId);\r\n              handleEditClick(data.projectId);\r\n              // handleEditProject(data.projectId);\r\n              // setEdit((prevState) => !prevState);\r\n            }}\r\n          >\r\n            {isEditing(data.projectId) ? \"Save\" : \"Edit\"}\r\n            {/* {editAndSave} */}\r\n          </button>\r\n          <button className=\"buttonField\">Mark as complete</button>\r\n        </div>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default ProjectList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}