{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Service = exports.DEFAULT_PROJECT_ID_TOKEN = void 0;\n/*!\n * Copyright 2022 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst extend = require(\"extend\");\nconst uuid = require(\"uuid\");\nconst util_1 = require(\"./util\");\nexports.DEFAULT_PROJECT_ID_TOKEN = '{{projectId}}';\nclass Service {\n  /**\n   * Service is a base class, meant to be inherited from by a \"service,\" like\n   * BigQuery or Storage.\n   *\n   * This handles making authenticated requests by exposing a `makeReq_`\n   * function.\n   *\n   * @constructor\n   * @alias module:common/service\n   *\n   * @param {object} config - Configuration object.\n   * @param {string} config.baseUrl - The base URL to make API requests to.\n   * @param {string[]} config.scopes - The scopes required for the request.\n   * @param {object=} options - [Configuration object](#/docs).\n   */\n  constructor(config) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.baseUrl = config.baseUrl;\n    this.apiEndpoint = config.apiEndpoint;\n    this.timeout = options.timeout;\n    this.globalInterceptors = Array.isArray(options.interceptors_) ? options.interceptors_ : [];\n    this.interceptors = [];\n    this.packageJson = config.packageJson;\n    this.projectId = options.projectId || exports.DEFAULT_PROJECT_ID_TOKEN;\n    this.projectIdRequired = config.projectIdRequired !== false;\n    this.providedUserAgent = options.userAgent;\n    const reqCfg = extend({}, config, {\n      projectIdRequired: this.projectIdRequired,\n      projectId: this.projectId,\n      authClient: options.authClient,\n      credentials: options.credentials,\n      keyFile: options.keyFilename,\n      email: options.email,\n      token: options.token\n    });\n    this.makeAuthenticatedRequest = util_1.util.makeAuthenticatedRequestFactory(reqCfg);\n    this.authClient = this.makeAuthenticatedRequest.authClient;\n    this.getCredentials = this.makeAuthenticatedRequest.getCredentials;\n    const isCloudFunctionEnv = !!process.env.FUNCTION_NAME;\n    if (isCloudFunctionEnv) {\n      this.interceptors.push({\n        request(reqOpts) {\n          reqOpts.forever = false;\n          return reqOpts;\n        }\n      });\n    }\n  }\n  /**\n   * Return the user's custom request interceptors.\n   */\n  getRequestInterceptors() {\n    // Interceptors should be returned in the order they were assigned.\n    return [].slice.call(this.globalInterceptors).concat(this.interceptors).filter(interceptor => typeof interceptor.request === 'function').map(interceptor => interceptor.request);\n  }\n  getProjectId(callback) {\n    if (!callback) {\n      return this.getProjectIdAsync();\n    }\n    this.getProjectIdAsync().then(p => callback(null, p), callback);\n  }\n  async getProjectIdAsync() {\n    const projectId = await this.authClient.getProjectId();\n    if (this.projectId === exports.DEFAULT_PROJECT_ID_TOKEN && projectId) {\n      this.projectId = projectId;\n    }\n    return this.projectId;\n  }\n  request_(reqOpts, callback) {\n    reqOpts = extend(true, {}, reqOpts, {\n      timeout: this.timeout\n    });\n    const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n    const uriComponents = [this.baseUrl];\n    if (this.projectIdRequired) {\n      if (reqOpts.projectId) {\n        uriComponents.push('projects');\n        uriComponents.push(reqOpts.projectId);\n      } else {\n        uriComponents.push('projects');\n        uriComponents.push(this.projectId);\n      }\n    }\n    uriComponents.push(reqOpts.uri);\n    if (isAbsoluteUrl) {\n      uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n    }\n    reqOpts.uri = uriComponents.map(uriComponent => {\n      const trimSlashesRegex = /^\\/*|\\/*$/g;\n      return uriComponent.replace(trimSlashesRegex, '');\n    }).join('/')\n    // Some URIs have colon separators.\n    // Bad: https://.../projects/:list\n    // Good: https://.../projects:list\n    .replace(/\\/:/g, ':');\n    const requestInterceptors = this.getRequestInterceptors();\n    const interceptorArray = Array.isArray(reqOpts.interceptors_) ? reqOpts.interceptors_ : [];\n    interceptorArray.forEach(interceptor => {\n      if (typeof interceptor.request === 'function') {\n        requestInterceptors.push(interceptor.request);\n      }\n    });\n    requestInterceptors.forEach(requestInterceptor => {\n      reqOpts = requestInterceptor(reqOpts);\n    });\n    delete reqOpts.interceptors_;\n    const pkg = this.packageJson;\n    let userAgent = util_1.util.getUserAgentFromPackageJson(pkg);\n    if (this.providedUserAgent) {\n      userAgent = `${this.providedUserAgent} ${userAgent}`;\n    }\n    reqOpts.headers = extend({}, reqOpts.headers, {\n      'User-Agent': userAgent,\n      'x-goog-api-client': `gl-node/${process.versions.node} gccl/${pkg.version} gccl-invocation-id/${uuid.v4()}`\n    });\n    if (reqOpts.shouldReturnStream) {\n      return this.makeAuthenticatedRequest(reqOpts);\n    } else {\n      this.makeAuthenticatedRequest(reqOpts, callback);\n    }\n  }\n  /**\n   * Make an authenticated API request.\n   *\n   * @param {object} reqOpts - Request options that are passed to `request`.\n   * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n   * @param {function} callback - The callback function passed to `request`.\n   */\n  request(reqOpts, callback) {\n    Service.prototype.request_.call(this, reqOpts, callback);\n  }\n  /**\n   * Make an authenticated API request.\n   *\n   * @param {object} reqOpts - Request options that are passed to `request`.\n   * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n   */\n  requestStream(reqOpts) {\n    const opts = extend(true, reqOpts, {\n      shouldReturnStream: true\n    });\n    return Service.prototype.request_.call(this, opts);\n  }\n}\nexports.Service = Service;","map":{"version":3,"names":["Object","defineProperty","exports","value","Service","DEFAULT_PROJECT_ID_TOKEN","extend","require","uuid","util_1","constructor","config","options","arguments","length","undefined","baseUrl","apiEndpoint","timeout","globalInterceptors","Array","isArray","interceptors_","interceptors","packageJson","projectId","projectIdRequired","providedUserAgent","userAgent","reqCfg","authClient","credentials","keyFile","keyFilename","email","token","makeAuthenticatedRequest","util","makeAuthenticatedRequestFactory","getCredentials","isCloudFunctionEnv","process","env","FUNCTION_NAME","push","request","reqOpts","forever","getRequestInterceptors","slice","call","concat","filter","interceptor","map","getProjectId","callback","getProjectIdAsync","then","p","request_","isAbsoluteUrl","uri","indexOf","uriComponents","splice","uriComponent","trimSlashesRegex","replace","join","requestInterceptors","interceptorArray","forEach","requestInterceptor","pkg","getUserAgentFromPackageJson","headers","versions","node","version","v4","shouldReturnStream","prototype","requestStream","opts"],"sources":["D:/Coding/React/taskmybusiness/node_modules/@google-cloud/storage/build/src/nodejs-common/service.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Service = exports.DEFAULT_PROJECT_ID_TOKEN = void 0;\n/*!\n * Copyright 2022 Google LLC. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst extend = require(\"extend\");\nconst uuid = require(\"uuid\");\nconst util_1 = require(\"./util\");\nexports.DEFAULT_PROJECT_ID_TOKEN = '{{projectId}}';\nclass Service {\n    /**\n     * Service is a base class, meant to be inherited from by a \"service,\" like\n     * BigQuery or Storage.\n     *\n     * This handles making authenticated requests by exposing a `makeReq_`\n     * function.\n     *\n     * @constructor\n     * @alias module:common/service\n     *\n     * @param {object} config - Configuration object.\n     * @param {string} config.baseUrl - The base URL to make API requests to.\n     * @param {string[]} config.scopes - The scopes required for the request.\n     * @param {object=} options - [Configuration object](#/docs).\n     */\n    constructor(config, options = {}) {\n        this.baseUrl = config.baseUrl;\n        this.apiEndpoint = config.apiEndpoint;\n        this.timeout = options.timeout;\n        this.globalInterceptors = Array.isArray(options.interceptors_)\n            ? options.interceptors_\n            : [];\n        this.interceptors = [];\n        this.packageJson = config.packageJson;\n        this.projectId = options.projectId || exports.DEFAULT_PROJECT_ID_TOKEN;\n        this.projectIdRequired = config.projectIdRequired !== false;\n        this.providedUserAgent = options.userAgent;\n        const reqCfg = extend({}, config, {\n            projectIdRequired: this.projectIdRequired,\n            projectId: this.projectId,\n            authClient: options.authClient,\n            credentials: options.credentials,\n            keyFile: options.keyFilename,\n            email: options.email,\n            token: options.token,\n        });\n        this.makeAuthenticatedRequest =\n            util_1.util.makeAuthenticatedRequestFactory(reqCfg);\n        this.authClient = this.makeAuthenticatedRequest.authClient;\n        this.getCredentials = this.makeAuthenticatedRequest.getCredentials;\n        const isCloudFunctionEnv = !!process.env.FUNCTION_NAME;\n        if (isCloudFunctionEnv) {\n            this.interceptors.push({\n                request(reqOpts) {\n                    reqOpts.forever = false;\n                    return reqOpts;\n                },\n            });\n        }\n    }\n    /**\n     * Return the user's custom request interceptors.\n     */\n    getRequestInterceptors() {\n        // Interceptors should be returned in the order they were assigned.\n        return [].slice\n            .call(this.globalInterceptors)\n            .concat(this.interceptors)\n            .filter(interceptor => typeof interceptor.request === 'function')\n            .map(interceptor => interceptor.request);\n    }\n    getProjectId(callback) {\n        if (!callback) {\n            return this.getProjectIdAsync();\n        }\n        this.getProjectIdAsync().then(p => callback(null, p), callback);\n    }\n    async getProjectIdAsync() {\n        const projectId = await this.authClient.getProjectId();\n        if (this.projectId === exports.DEFAULT_PROJECT_ID_TOKEN && projectId) {\n            this.projectId = projectId;\n        }\n        return this.projectId;\n    }\n    request_(reqOpts, callback) {\n        reqOpts = extend(true, {}, reqOpts, { timeout: this.timeout });\n        const isAbsoluteUrl = reqOpts.uri.indexOf('http') === 0;\n        const uriComponents = [this.baseUrl];\n        if (this.projectIdRequired) {\n            if (reqOpts.projectId) {\n                uriComponents.push('projects');\n                uriComponents.push(reqOpts.projectId);\n            }\n            else {\n                uriComponents.push('projects');\n                uriComponents.push(this.projectId);\n            }\n        }\n        uriComponents.push(reqOpts.uri);\n        if (isAbsoluteUrl) {\n            uriComponents.splice(0, uriComponents.indexOf(reqOpts.uri));\n        }\n        reqOpts.uri = uriComponents\n            .map(uriComponent => {\n            const trimSlashesRegex = /^\\/*|\\/*$/g;\n            return uriComponent.replace(trimSlashesRegex, '');\n        })\n            .join('/')\n            // Some URIs have colon separators.\n            // Bad: https://.../projects/:list\n            // Good: https://.../projects:list\n            .replace(/\\/:/g, ':');\n        const requestInterceptors = this.getRequestInterceptors();\n        const interceptorArray = Array.isArray(reqOpts.interceptors_)\n            ? reqOpts.interceptors_\n            : [];\n        interceptorArray.forEach(interceptor => {\n            if (typeof interceptor.request === 'function') {\n                requestInterceptors.push(interceptor.request);\n            }\n        });\n        requestInterceptors.forEach(requestInterceptor => {\n            reqOpts = requestInterceptor(reqOpts);\n        });\n        delete reqOpts.interceptors_;\n        const pkg = this.packageJson;\n        let userAgent = util_1.util.getUserAgentFromPackageJson(pkg);\n        if (this.providedUserAgent) {\n            userAgent = `${this.providedUserAgent} ${userAgent}`;\n        }\n        reqOpts.headers = extend({}, reqOpts.headers, {\n            'User-Agent': userAgent,\n            'x-goog-api-client': `gl-node/${process.versions.node} gccl/${pkg.version} gccl-invocation-id/${uuid.v4()}`,\n        });\n        if (reqOpts.shouldReturnStream) {\n            return this.makeAuthenticatedRequest(reqOpts);\n        }\n        else {\n            this.makeAuthenticatedRequest(reqOpts, callback);\n        }\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     * @param {function} callback - The callback function passed to `request`.\n     */\n    request(reqOpts, callback) {\n        Service.prototype.request_.call(this, reqOpts, callback);\n    }\n    /**\n     * Make an authenticated API request.\n     *\n     * @param {object} reqOpts - Request options that are passed to `request`.\n     * @param {string} reqOpts.uri - A URI relative to the baseUrl.\n     */\n    requestStream(reqOpts) {\n        const opts = extend(true, reqOpts, { shouldReturnStream: true });\n        return Service.prototype.request_.call(this, opts);\n    }\n}\nexports.Service = Service;\n//# sourceMappingURL=service.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}