[{"D:\\Coding\\React\\taskmybusiness\\src\\index.js":"1","D:\\Coding\\React\\taskmybusiness\\src\\App.js":"2","D:\\Coding\\React\\taskmybusiness\\src\\reportWebVitals.js":"3","D:\\Coding\\React\\taskmybusiness\\src\\components\\header\\header.jsx":"4","D:\\Coding\\React\\taskmybusiness\\src\\components\\side-menu\\side-menu.jsx":"5","D:\\Coding\\React\\taskmybusiness\\src\\components\\side-menu-content\\side-menu-content.jsx":"6","D:\\Coding\\React\\taskmybusiness\\src\\components\\footer\\footer.jsx":"7","D:\\Coding\\React\\taskmybusiness\\src\\components\\projects-page\\project-page.jsx":"8","D:\\Coding\\React\\taskmybusiness\\src\\assets\\icons.jsx":"9","D:\\Coding\\React\\taskmybusiness\\src\\components\\projectAdd-field\\project-add.jsx":"10","D:\\Coding\\React\\taskmybusiness\\src\\components\\projectField\\projectField.jsx":"11","D:\\Coding\\React\\taskmybusiness\\src\\utils\\firebase\\firebase-utils.js":"12","D:\\Coding\\React\\taskmybusiness\\src\\components\\log-in\\log-in.jsx":"13","D:\\Coding\\React\\taskmybusiness\\src\\components\\sign-up\\sign-up.jsx":"14","D:\\Coding\\React\\taskmybusiness\\src\\contexts\\context.js":"15","D:\\Coding\\React\\taskmybusiness\\src\\routes\\home\\home.jsx":"16"},{"size":739,"mtime":1683732271247,"results":"17","hashOfConfig":"18"},{"size":217,"mtime":1683809024037,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1683022030418,"results":"20","hashOfConfig":"18"},{"size":1154,"mtime":1683727761124,"results":"21","hashOfConfig":"18"},{"size":702,"mtime":1683733920966,"results":"22","hashOfConfig":"18"},{"size":253,"mtime":1683220022968,"results":"23","hashOfConfig":"18"},{"size":159,"mtime":1683220099613,"results":"24","hashOfConfig":"18"},{"size":3594,"mtime":1684862335006,"results":"25","hashOfConfig":"18"},{"size":3788,"mtime":1683634526808,"results":"26","hashOfConfig":"18"},{"size":2443,"mtime":1684505681563,"results":"27","hashOfConfig":"18"},{"size":880,"mtime":1684861406222,"results":"28","hashOfConfig":"18"},{"size":4256,"mtime":1684944840400,"results":"29","hashOfConfig":"18"},{"size":3249,"mtime":1683728571530,"results":"30","hashOfConfig":"18"},{"size":4303,"mtime":1684345855861,"results":"31","hashOfConfig":"18"},{"size":1561,"mtime":1684862921763,"results":"32","hashOfConfig":"18"},{"size":529,"mtime":1683732767765,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},"1v8tiuo",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"38"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\Coding\\React\\taskmybusiness\\src\\index.js",["91"],[],"import reportWebVitals from \"./reportWebVitals\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport \"./index.scss\";\nimport { UserContext, UserProvider } from \"./contexts/context\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <UserProvider>\n        <App />\n      </UserProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"D:\\Coding\\React\\taskmybusiness\\src\\App.js",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\reportWebVitals.js",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\header\\header.jsx",["92","93"],[],"import \"./header.scss\";\r\nimport { useContext, useState } from \"react\";\r\nimport LogIn from \"../log-in/log-in\";\r\nimport SignUp from \"../sign-up/sign-up\";\r\nimport { UserContext } from \"../../contexts/context\";\r\nimport { signOutUser } from \"../../utils/firebase/firebase-utils\";\r\n\r\nfunction Header() {\r\n  const today = new Date();\r\n  const options = { month: \"long\", day: \"numeric\", year: \"numeric\" };\r\n  const formattedDate = today.toLocaleDateString(\"en-US\", options);\r\n\r\n  const { currentUser } = useContext(UserContext);\r\n\r\n  return (\r\n    <header>\r\n      <div>\r\n        <img className=\"logo\" src={require(\"../../assets/Logo.png\")} />\r\n      </div>\r\n      <div>Today : {formattedDate}</div>\r\n      <div>\r\n        <input type=\"input\" placeholder=\"search\" />\r\n      </div>\r\n      <div>Messages</div>\r\n      <div className=\"signInLogInContainer\">\r\n        {currentUser ? (\r\n          <div className=\"log-button\" type=\"submit\" onClick={signOutUser}>\r\n            Sign Out\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <LogIn />\r\n            <SignUp />\r\n          </>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Coding\\React\\taskmybusiness\\src\\components\\side-menu\\side-menu.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\side-menu-content\\side-menu-content.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\footer\\footer.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\projects-page\\project-page.jsx",["94"],[],"import \"./project-page.scss\";\r\nimport { db } from \"../../utils/firebase/firebase-utils\";\r\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\r\n\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport ProjectAdd from \"../projectAdd-field/project-add\";\r\nimport ProjectField from \"../projectField/projectField\";\r\nimport {\r\n  ProjectsContext,\r\n  UserContext,\r\n  updateProjectsContext,\r\n} from \"../../contexts/context\";\r\n\r\nfunction ProjectPage() {\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n  const { currentUser, setCurrentUser } = useContext(UserContext);\r\n  const [userId, setUserId] = useState(\"\");\r\n  const { currentProject } = useContext(ProjectsContext);\r\n  const { setUpdateCurrentProjects } = useContext(updateProjectsContext);\r\n  const [rerender, setRerender] = useState(1);\r\n\r\n  console.log(projectDetails);\r\n  async function deleteProject(projectId) {\r\n    console.log(projectId);\r\n    try {\r\n      const projectDocRef = doc(db, `users/${userId}/projects/${projectId}`);\r\n      await deleteDoc(projectDocRef);\r\n\r\n      setUpdateCurrentProjects(\"delete\");\r\n      setRerender(rerender + 1);\r\n      console.log(\"Project deleted successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting project:\", error);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    userCheck();\r\n  }, [currentUser, rerender]);\r\n\r\n  function userCheck() {\r\n    if (currentUser) {\r\n      setTimeout(() => {\r\n        getProjects();\r\n        setUserId(currentUser.uid);\r\n      }, \"1500\");\r\n    } else {\r\n      setProjectDetails([]);\r\n      return;\r\n    }\r\n  }\r\n\r\n  function getProjects() {\r\n    setProjectDetails(\r\n      currentProject.map((e) => ({\r\n        projectId: e.projectId,\r\n        projectName: e.projectName,\r\n        startingDate: e.startingDate,\r\n        deadLine: e.deadLine,\r\n      }))\r\n    );\r\n    setCurrentUser(currentUser);\r\n  }\r\n\r\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\r\n    const createProject = async () => {\r\n      try {\r\n        let projectData = {\r\n          projectName: inputProjectDetails.projectName,\r\n          startingDate: inputProjectDetails.startingDate,\r\n          deadLine: inputProjectDetails.deadLine,\r\n        };\r\n\r\n        // Add the project data to the \"projects\" collection in Firestore\r\n\r\n        const docRef = await addDoc(\r\n          collection(db, `users/${userId}/projects`),\r\n          projectData\r\n        );\r\n\r\n        const projectDataWithId = {\r\n          ...projectData,\r\n          projectId: docRef.id,\r\n        };\r\n        const projectDocRef = await doc(\r\n          db,\r\n          `users/${userId}/projects/${docRef.id}`\r\n        );\r\n\r\n        setDoc(projectDocRef, projectDataWithId);\r\n\r\n        // setProjectId(docRef.id);\r\n        setUpdateCurrentProjects(docRef.id);\r\n        setRerender(rerender + 1);\r\n\r\n        // console.log(\"Project ID:\", docRef.id);\r\n      } catch (error) {\r\n        console.error(\"Error creating project:\", error);\r\n      }\r\n    };\r\n    createProject();\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-container\">\r\n      <div className=\"project-menu\">\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>something</div>\r\n        {/* <div className=\"button\">Add project</div> */}\r\n      </div>\r\n      <ProjectAdd onSaveProjectDetails={onSaveProjectDetailsHandler} />\r\n      <ProjectField\r\n        projectDetails={projectDetails}\r\n        deleteProject={deleteProject}\r\n      />\r\n      {/* <button onClick={createProject}>Create Project</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectPage;\r\n","D:\\Coding\\React\\taskmybusiness\\src\\assets\\icons.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\components\\projectAdd-field\\project-add.jsx",["95","96"],[],"import { useState, useContext, useEffect } from \"react\";\r\nimport \"./project-add.scss\";\r\n\r\nfunction ProjectAdd(props) {\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [startingDate, setStartingDate] = useState(\"\");\r\n  const [deadLine, setDeadLine] = useState(\"\");\r\n  const [button, setButton] = useState(\"Add Project\");\r\n  const [showHide, setShowHide] = useState(\"hide\");\r\n\r\n  function showHideFunc() {\r\n    if (button === \"Add Project\") {\r\n      setShowHide(\"show\");\r\n    } else {\r\n      setShowHide(\"hide\");\r\n    }\r\n  }\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n    if (showHide === \"hide\") {\r\n      const projectDetails = {\r\n        projectName: projectName,\r\n        startingDate: startingDate,\r\n        deadLine: deadLine,\r\n      };\r\n      // console.log(projectDetails);\r\n      props.onSaveProjectDetails(projectDetails);\r\n      setProjectName(\"\");\r\n      setStartingDate(\"\");\r\n      setDeadLine(\"\");\r\n    } else return;\r\n    // console.log(\"check\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className=\"project-list\">\r\n      <div className=\"input-fields\">\r\n        <h4>Project Name</h4>\r\n        <input\r\n          className={showHide}\r\n          required\r\n          value={projectName}\r\n          type=\"text\"\r\n          placeholder=\"Project name\"\r\n          onChange={(event) => {\r\n            setProjectName(event.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"input-fields\">\r\n        <h4>Starting date</h4>\r\n        <input\r\n          className={showHide}\r\n          value={startingDate}\r\n          type=\"date\"\r\n          placeholder=\"Date\"\r\n          onChange={(event) => {\r\n            setStartingDate(event.target.value);\r\n          }}\r\n        ></input>\r\n      </div>\r\n      <div className=\"input-fields\">\r\n        <h4>Dead Line</h4>\r\n        <input\r\n          className={showHide}\r\n          value={deadLine}\r\n          type=\"date\"\r\n          placeholder=\"Dead line\"\r\n          onChange={(event) => {\r\n            setDeadLine(event.target.value);\r\n          }}\r\n        ></input>\r\n      </div>\r\n      <button\r\n        className=\"addProjectButton\"\r\n        type=\"submit\"\r\n        onClick={() => {\r\n          showHideFunc();\r\n          button === \"Add Project\"\r\n            ? setButton(\"submit\")\r\n            : setButton(\"Add Project\");\r\n        }}\r\n      >\r\n        {button}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProjectAdd;\r\n","D:\\Coding\\React\\taskmybusiness\\src\\components\\projectField\\projectField.jsx",[],[],"D:\\Coding\\React\\taskmybusiness\\src\\utils\\firebase\\firebase-utils.js",["97"],[],"import { initializeApp } from \"firebase/app\";\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  setDoc,\r\n  collection,\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDg0a3RsAo0iIaAJzwTjd7vHvGLWXqzZ00\",\r\n  authDomain: \"gotask-973a8.firebaseapp.com\",\r\n  projectId: \"gotask-973a8\",\r\n  storageBucket: \"gotask-973a8.appspot.com\",\r\n  messagingSenderId: \"589835338400\",\r\n  appId: \"1:589835338400:web:515ae6fc1315354658ffc5\",\r\n  measurementId: \"G-CS2ZWLEKDP\",\r\n};\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();\r\nexport const db = getFirestore();\r\nlet userId = \"\";\r\n\r\n/////////////////////\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\n// console.log(auth);\r\nexport const signInWithGooglePopup = () =>\r\n  signInWithPopup(auth, googleProvider);\r\n// console.log(auth);\r\n\r\n//////////////////////////////////////////////////\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalInformation = {}\r\n) => {\r\n  if (!userAuth) return;\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n  const userSnapshot = await getDoc(userDocRef);\r\n  // console.log(userSnapshot);\r\n  // console.log(userSnapshot.exists());\r\n\r\n  // user data does not exists\r\n  if (!userSnapshot.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalInformation,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    return userDocRef;\r\n  }\r\n};\r\n\r\n///////////////////////////////////////////////\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\n\r\n// const currentUserId = users.auth().currentUser.uid;\r\n// console.log(currentUserId);\r\n\r\n///////////// projects import export  ///////////////////\r\nexport let projects = [];\r\n\r\nonAuthStateChanged(auth, async (user) => {\r\n  if (user) {\r\n    userId = user.uid;\r\n    const userDocRef = doc(db, \"users\", userId);\r\n    const projectsRef = collection(userDocRef, \"projects\");\r\n\r\n    try {\r\n      const snapshot = await getDocs(projectsRef);\r\n      snapshot.docs.forEach((doc) => {\r\n        projects.push({\r\n          ...doc.data(),\r\n        });\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  } else {\r\n    projects = [];\r\n    // console.log(\"no user logged in\");\r\n  }\r\n});\r\n\r\nexport const updateProjects = async (e) => {\r\n  // projects = [];\r\n  console.log(projects);\r\n\r\n  onAuthStateChanged(auth, async (user) => {\r\n    if (user) {\r\n      userId = user.uid;\r\n      const userDocRef = doc(db, \"users\", userId);\r\n      const projectsRef = collection(userDocRef, \"projects\");\r\n      const projectDocRef = doc(projectsRef, e);\r\n      try {\r\n        const snapshot = await getDoc(projectDocRef); // Use getDoc instead of getDocs for a single document\r\n        if (snapshot.exists()) {\r\n          projects.push(snapshot.data());\r\n        }\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n\r\n    // if (e === \"delete\") {\r\n    //   console.log(\"e delete\");\r\n\r\n    //   try {\r\n    //     const snapshot = await getDoc(projectDocRef);\r\n    //     if (snapshot.exists()) {\r\n    //       projects.push(snapshot.data());\r\n    //       console.log(\"aftersnapsht\");\r\n    //     }\r\n    //   } catch (err) {\r\n    //     console.log(err.message);\r\n    //   }\r\n    // }\r\n    ////////////\r\n    else {\r\n      projects = [];\r\n    }\r\n  });\r\n};\r\n","D:\\Coding\\React\\taskmybusiness\\src\\components\\log-in\\log-in.jsx",["98","99","100"],[],"import \"./log-in.scss\";\r\nimport {\r\n  signInWithGooglePopup,\r\n  createUserDocumentFromAuth,\r\n  signInAuthUserWithEmailAndPassword,\r\n} from \"../../utils/firebase/firebase-utils\";\r\n\r\nimport { useState, useEffect, useRef, Fragment } from \"react\";\r\nimport { X } from \"../../assets/icons.jsx\";\r\n\r\nconst defaultFormFields = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nfunction LogIn() {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { email, password } = formFields;\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormFields({ ...formFields, [name]: value });\r\n  }\r\n\r\n  //~~~ Log In Forms ///\r\n  const logGoogleUser = async (event) => {\r\n    popup();\r\n    await signInWithGooglePopup();\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { user } = await signInAuthUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      resetFormFields();\r\n    } catch (error) {}\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////\r\n  const [showHide, setShowHide] = useState(\"hide\");\r\n  let popupRef = useRef();\r\n  useEffect(() => {\r\n    let handler = (e) => {\r\n      // console.log(popupRef.current.contains(e.target));\r\n      if (!popupRef.current.contains(e.target)) {\r\n        setShowHide(\"hide\");\r\n        resetFormFields();\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handler);\r\n    };\r\n  });\r\n\r\n  function popup() {\r\n    if (showHide === \"hide\") {\r\n      setShowHide(\"show\");\r\n    } else {\r\n      setShowHide(\"hide\");\r\n      resetFormFields();\r\n    }\r\n  }\r\n  ///////////////////////////////////////////////////\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"log-button\" onClick={popup}>\r\n        Log-in\r\n      </div>\r\n\r\n      <div className={`${showHide}`}>\r\n        <div className=\"popup\" ref={popupRef}>\r\n          <div onClick={popup}>\r\n            <X></X>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <h1>Log in</h1>\r\n            <div className=\"inputBlock\">\r\n              <label>Email address</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={handleChange}\r\n                name=\"email\"\r\n                value={email}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                value={password}\r\n              ></input>\r\n            </div>\r\n\r\n            <button className=\"submitbutton\" type=\"submit\">\r\n              SUBMIT\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"googleAuthButton\">\r\n            <img\r\n              className=\"googleIcon\"\r\n              src={require(\"../../assets/googleIcon.png\")}\r\n            />\r\n            <h3 onClick={logGoogleUser}>Or continue with Google</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","D:\\Coding\\React\\taskmybusiness\\src\\components\\sign-up\\sign-up.jsx",["101"],[],"import \"./sign-up.scss\";\r\nimport { X } from \"../../assets/icons.jsx\";\r\nimport { Fragment, useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  createAuthUserWithEmailAndPassword,\r\n  createUserDocumentFromAuth,\r\n} from \"../../utils/firebase/firebase-utils\";\r\n\r\nconst defaultFormFields = {\r\n  fullName: \"\",\r\n  email: \"\",\r\n  phone: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nfunction SignUp() {\r\n  const [showHide, setShowHide] = useState(\"hide\");\r\n  const [signUp, setSignUp] = useState(\"Sign-up\");\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { fullName, email, phone, password, confirmPassword } = formFields;\r\n\r\n  // form imputs reset ////////\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  //       Sign in         ////////\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert(\"incorect confirm password\");\r\n      return;\r\n    }\r\n    try {\r\n      const { user } = await createAuthUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      await createUserDocumentFromAuth(user, { fullName });\r\n      resetFormFields();\r\n    } catch (error) {\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n        alert(\"email already exists\");\r\n      } else {\r\n        console.log(\"user creation gives an error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormFields({ ...formFields, [name]: value });\r\n  }\r\n\r\n  ////////////popup window////////////////////////////\r\n  let popupRef = useRef();\r\n  useEffect(() => {\r\n    let handler = (e) => {\r\n      // console.log(popupRef.current.contains(e.target));\r\n      if (!popupRef.current.contains(e.target)) {\r\n        setShowHide(\"hide\");\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handler);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handler);\r\n    };\r\n  });\r\n\r\n  function popup() {\r\n    if (showHide === \"hide\") {\r\n      setShowHide(\"show\");\r\n    } else {\r\n      setShowHide(\"hide\");\r\n    }\r\n  }\r\n  ////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"log-button\" onClick={popup}>\r\n        {signUp}\r\n      </div>\r\n      <div className={`${showHide}`}>\r\n        <div className=\"popup\" ref={popupRef}>\r\n          <div onClick={popup}>\r\n            <X></X>\r\n          </div>\r\n          <form onSubmit={handleSubmit}>\r\n            <h1>I don't have an account</h1>\r\n            <h5>Sign up with your email and password</h5>\r\n            <div className=\"inputBlock\">\r\n              <label>First and Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                onChange={handleChange}\r\n                name=\"fullName\"\r\n                value={fullName}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Email</label>\r\n              <input\r\n                type=\"email\"\r\n                onChange={handleChange}\r\n                name=\"email\"\r\n                value={email}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Phone</label>\r\n              <input\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                name=\"phone\"\r\n                value={phone}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                value={password}\r\n              ></input>\r\n            </div>\r\n            <div className=\"inputBlock\">\r\n              <label>Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                name=\"confirmPassword\"\r\n                value={confirmPassword}\r\n              ></input>\r\n            </div>\r\n            <button className=\"submitbutton\" type=\"submit\" onClick={popup}>\r\n              SUBMIT\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\nexport default SignUp;\r\n","D:\\Coding\\React\\taskmybusiness\\src\\contexts\\context.js",["102","103","104","105"],[],"import { createContext, useState, useEffect } from \"react\";\r\nimport {\r\n  onAuthStateChangedListener,\r\n  createUserDocumentFromAuth,\r\n  onAuthStateChanged,\r\n  projects,\r\n  updateProjects,\r\n} from \"../utils/firebase/firebase-utils.js\";\r\n//as the actual value that i want to acces\r\n\r\nexport const UserContext = createContext({\r\n  currentUser: null,\r\n  setCurrentUser: () => null,\r\n});\r\n\r\nexport const ProjectsContext = createContext({\r\n  currentProject: null,\r\n  setCurrentProject: () => null,\r\n});\r\n\r\nexport const updateProjectsContext = createContext({\r\n  setUpdateCurrentProjects: (e) => {\r\n    updateProjects(e);\r\n    console.log(\"update works\");\r\n  },\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const value = { currentUser, setCurrentUser };\r\n  const [currentProject, setCurrentProject] = useState(projects);\r\n  const projectsValue = { currentProject, setCurrentProject };\r\n  const [count, setCount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChangedListener((user) => {\r\n      if (user) {\r\n        createUserDocumentFromAuth(user);\r\n        setCurrentProject(projects);\r\n      } else {\r\n        setCurrentProject([]);\r\n      }\r\n      setCurrentUser(user);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, [currentUser, projects, updateProjects]);\r\n\r\n  return (\r\n    <ProjectsContext.Provider value={projectsValue}>\r\n      <UserContext.Provider value={{ ...value }}>\r\n        {children}\r\n      </UserContext.Provider>\r\n    </ProjectsContext.Provider>\r\n  );\r\n};\r\n","D:\\Coding\\React\\taskmybusiness\\src\\routes\\home\\home.jsx",[],[],{"ruleId":"106","severity":1,"message":"107","line":8,"column":10,"nodeType":"108","messageId":"109","endLine":8,"endColumn":21},{"ruleId":"106","severity":1,"message":"110","line":2,"column":22,"nodeType":"108","messageId":"109","endLine":2,"endColumn":30},{"ruleId":"111","severity":1,"message":"112","line":18,"column":9,"nodeType":"113","endLine":18,"endColumn":72},{"ruleId":"114","severity":1,"message":"115","line":39,"column":6,"nodeType":"116","endLine":39,"endColumn":29,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"118","line":1,"column":20,"nodeType":"108","messageId":"109","endLine":1,"endColumn":30},{"ruleId":"106","severity":1,"message":"119","line":1,"column":32,"nodeType":"108","messageId":"109","endLine":1,"endColumn":41},{"ruleId":"106","severity":1,"message":"120","line":32,"column":7,"nodeType":"108","messageId":"109","endLine":32,"endColumn":18},{"ruleId":"106","severity":1,"message":"121","line":4,"column":3,"nodeType":"108","messageId":"109","endLine":4,"endColumn":29},{"ruleId":"106","severity":1,"message":"122","line":37,"column":15,"nodeType":"108","messageId":"109","endLine":37,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":111,"column":13,"nodeType":"113","endLine":114,"endColumn":15},{"ruleId":"106","severity":1,"message":"123","line":19,"column":18,"nodeType":"108","messageId":"109","endLine":19,"endColumn":27},{"ruleId":"106","severity":1,"message":"124","line":5,"column":3,"nodeType":"108","messageId":"109","endLine":5,"endColumn":21},{"ruleId":"106","severity":1,"message":"125","line":33,"column":10,"nodeType":"108","messageId":"109","endLine":33,"endColumn":15},{"ruleId":"106","severity":1,"message":"126","line":33,"column":17,"nodeType":"108","messageId":"109","endLine":33,"endColumn":25},{"ruleId":"114","severity":1,"message":"127","line":47,"column":6,"nodeType":"116","endLine":47,"endColumn":45,"suggestions":"128"},"no-unused-vars","'UserContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userCheck'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'firebaseApp' is assigned a value but never used.","'createUserDocumentFromAuth' is defined but never used.","'user' is assigned a value but never used.","'setSignUp' is assigned a value but never used.","'onAuthStateChanged' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","React Hook useEffect has unnecessary dependencies: 'projects' and 'updateProjects'. Either exclude them or remove the dependency array. Outer scope values like 'projects' aren't valid dependencies because mutating them doesn't re-render the component.",["130"],{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [currentUser, rerender, userCheck]",{"range":"135","text":"136"},"Update the dependencies array to be: [currentUser]",{"range":"137","text":"138"},[1344,1367],"[currentUser, rerender, userCheck]",[1305,1344],"[currentUser]"]