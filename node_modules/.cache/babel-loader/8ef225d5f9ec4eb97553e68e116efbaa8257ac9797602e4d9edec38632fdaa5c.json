{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React\\\\taskmybusiness\\\\src\\\\components\\\\projects-page\\\\project-page.jsx\",\n  _s = $RefreshSig$();\nimport \"./project-page.scss\";\nimport { db } from \"../../utils/firebase/firebase-utils\";\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\nimport { useState, useContext, useEffect } from \"react\";\nimport ProjectAdd from \"../projectAdd-field/project-add\";\nimport ProjectField from \"../projectField/projectField\";\nimport { ProjectsContext, UserContext, updateProjectsContext } from \"../../contexts/context\";\nimport { useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation } from \"../../utils/firebase/firebase-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectPage() {\n  _s();\n  const [projectDetails, setProjectDetails] = useState([]);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  const [userId, setUserId] = useState(false);\n  const {\n    currentProject\n  } = useContext(ProjectsContext);\n  const {\n    setUpdateCurrentProjects\n  } = useContext(updateProjectsContext);\n  const [rerender, setRerender] = useState(1);\n\n  /////////////////////////////////////////////\n  // const [newTodo, setNewTodo] = useState(\"\");\n  console.log(rerender);\n  const {\n    data: projects,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n    // refetch,\n  } = useGetTodosQuery(currentUser, {\n    skip: !currentUser,\n    // Enable the query when userId is truthy\n    refetchOnMountOrArgChange: true\n  });\n  const [addTodo] = useAddTodoMutation();\n  const [updateTodo] = useUpdateTodoMutation();\n  const [deleteTodo] = useDeleteTodoMutation();\n  let content;\n  // Define conditional content\n  if (isLoading) {\n    // console.log(\"loading\");\n  }\n  if (isSuccess) {\n    // console.log(\"succes\");\n  } else if (isError) {\n    console.log(\"error\", error);\n  }\n\n  /////////////////////////////////////////////\n\n  useEffect(() => {\n    if (currentUser) {\n      setUserId(currentUser.uid);\n      let arr = [];\n      for (let i = 0; i < projects.documents.length; i++) {\n        const obj = {\n          deadLine: projects.documents[i].fields.deadLine.stringValue,\n          projectId: projects.documents[i].fields.projectId.stringValue,\n          projectName: projects.documents[i].fields.projectName.stringValue,\n          startingDate: projects.documents[i].fields.startingDate.stringValue\n        };\n        arr.push(obj);\n      }\n      setProjectDetails(arr);\n      console.log(\"useEffect Rerender\");\n    }\n  }, [projects, rerender]);\n  useEffect(() => {\n    if (!currentUser) {\n      setProjectDetails([]);\n    }\n  }, [currentUser]);\n  ///////////////////////////////////////////////////////\n\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\n    let projectData = {\n      projectName: inputProjectDetails.projectName,\n      startingDate: inputProjectDetails.startingDate,\n      deadLine: inputProjectDetails.deadLine\n    };\n\n    // // setUpdateCurrentProjects(docRef.id);\n    setRerender(rerender + 1);\n    addTodo(projectData);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sort by\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"something\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectAdd, {\n      onSaveProjectDetails: onSaveProjectDetailsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectField, {\n      projectDetails: projectDetails,\n      deleteProject: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectPage, \"sDBLz8FAR0Y0ANE7t0a1oQ2s3cU=\", false, function () {\n  return [useGetTodosQuery, useAddTodoMutation, useUpdateTodoMutation, useDeleteTodoMutation];\n});\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["db","collection","addDoc","deleteDoc","doc","setDoc","useState","useContext","useEffect","ProjectAdd","ProjectField","ProjectsContext","UserContext","updateProjectsContext","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation","jsxDEV","_jsxDEV","ProjectPage","_s","projectDetails","setProjectDetails","currentUser","setCurrentUser","userId","setUserId","currentProject","setUpdateCurrentProjects","rerender","setRerender","console","log","data","projects","isLoading","isSuccess","isError","error","skip","refetchOnMountOrArgChange","addTodo","updateTodo","deleteTodo","content","uid","arr","i","documents","length","obj","deadLine","fields","stringValue","projectId","projectName","startingDate","push","onSaveProjectDetailsHandler","inputProjectDetails","projectData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveProjectDetails","deleteProject","_c","$RefreshReg$"],"sources":["D:/Coding/React/taskmybusiness/src/components/projects-page/project-page.jsx"],"sourcesContent":["import \"./project-page.scss\";\r\nimport { db } from \"../../utils/firebase/firebase-utils\";\r\nimport { collection, addDoc, deleteDoc, doc, setDoc } from \"firebase/firestore\";\r\n\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport ProjectAdd from \"../projectAdd-field/project-add\";\r\nimport ProjectField from \"../projectField/projectField\";\r\nimport {\r\n  ProjectsContext,\r\n  UserContext,\r\n  updateProjectsContext,\r\n} from \"../../contexts/context\";\r\n\r\nimport {\r\n  useGetTodosQuery,\r\n  useAddTodoMutation,\r\n  useUpdateTodoMutation,\r\n  useDeleteTodoMutation,\r\n} from \"../../utils/firebase/firebase-utils\";\r\n\r\nfunction ProjectPage() {\r\n  const [projectDetails, setProjectDetails] = useState([]);\r\n  const { currentUser, setCurrentUser } = useContext(UserContext);\r\n  const [userId, setUserId] = useState(false);\r\n  const { currentProject } = useContext(ProjectsContext);\r\n  const { setUpdateCurrentProjects } = useContext(updateProjectsContext);\r\n  const [rerender, setRerender] = useState(1);\r\n\r\n  /////////////////////////////////////////////\r\n  // const [newTodo, setNewTodo] = useState(\"\");\r\n  console.log(rerender);\r\n  const {\r\n    data: projects,\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n    error,\r\n    // refetch,\r\n  } = useGetTodosQuery(currentUser, {\r\n    skip: !currentUser, // Enable the query when userId is truthy\r\n    refetchOnMountOrArgChange: true,\r\n  });\r\n\r\n  const [addTodo] = useAddTodoMutation();\r\n  const [updateTodo] = useUpdateTodoMutation();\r\n  const [deleteTodo] = useDeleteTodoMutation();\r\n  let content;\r\n  // Define conditional content\r\n  if (isLoading) {\r\n    // console.log(\"loading\");\r\n  }\r\n  if (isSuccess) {\r\n    // console.log(\"succes\");\r\n  } else if (isError) {\r\n    console.log(\"error\", error);\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setUserId(currentUser.uid);\r\n\r\n      let arr = [];\r\n      for (let i = 0; i < projects.documents.length; i++) {\r\n        const obj = {\r\n          deadLine: projects.documents[i].fields.deadLine.stringValue,\r\n          projectId: projects.documents[i].fields.projectId.stringValue,\r\n          projectName: projects.documents[i].fields.projectName.stringValue,\r\n          startingDate: projects.documents[i].fields.startingDate.stringValue,\r\n        };\r\n        arr.push(obj);\r\n      }\r\n      setProjectDetails(arr);\r\n      console.log(\"useEffect Rerender\");\r\n    }\r\n  }, [projects, rerender]);\r\n\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      setProjectDetails([]);\r\n    }\r\n  }, [currentUser]);\r\n  ///////////////////////////////////////////////////////\r\n\r\n  function onSaveProjectDetailsHandler(inputProjectDetails) {\r\n    let projectData = {\r\n      projectName: inputProjectDetails.projectName,\r\n      startingDate: inputProjectDetails.startingDate,\r\n      deadLine: inputProjectDetails.deadLine,\r\n    };\r\n\r\n    // // setUpdateCurrentProjects(docRef.id);\r\n    setRerender(rerender + 1);\r\n\r\n    addTodo(projectData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-container\">\r\n      <div className=\"project-menu\">\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>sort by</div>\r\n        <div>something</div>\r\n        {/* <div className=\"button\">Add project</div> */}\r\n      </div>\r\n      <ProjectAdd onSaveProjectDetails={onSaveProjectDetailsHandler} />\r\n      <ProjectField\r\n        projectDetails={projectDetails}\r\n        deleteProject={deleteTodo}\r\n      />\r\n      {/* <button onClick={createProject}>Create Project</button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}